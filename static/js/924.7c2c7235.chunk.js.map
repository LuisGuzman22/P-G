{"version":3,"file":"static/js/924.7c2c7235.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./pages/Dashboard'))\nconst ProjectSelector = React.lazy(() => import('./pages/ProjectSelector'))\nconst Login = React.lazy(() => import('./pages/Login'))\nconst ProjectAdministration = React.lazy(() => import('./pages/ProjectAdministration'))\nconst ContractAdministration = React.lazy(() => import('./pages/ContractAdministration'))\nconst User = React.lazy(() => import('./pages/User'))\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'))\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// // Base\n// const Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'))\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'))\n// const Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\n// const Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\n// const Progress = React.lazy(() => import('./views/base/progress/Progress'))\n// const Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'))\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// // Buttons\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\n// const Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n// //Forms\n// const ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\n// const FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\n// const FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\n// const InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\n// const Layout = React.lazy(() => import('./views/forms/layout/Layout'))\n// const Range = React.lazy(() => import('./views/forms/range/Range'))\n// const Select = React.lazy(() => import('./views/forms/select/Select'))\n// const Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\n// const Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// // Icons\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'))\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// // Notifications\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\n// const Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\nconst routes = [\n  { path: '/', name: 'Login' },\n  { path: '/login', name: 'Login' },\n  { path: '/project_selector', name: 'Project Selector', element: ProjectSelector },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/administrar_proyectos', name: 'Administrar Proyectos', element: ProjectAdministration },\n  {\n    path: '/administrar_contratos',\n    name: 'Administrar Contratos',\n    element: ContractAdministration,\n  },\n  { path: '/mis_datos', name: 'Mis datos', element: User },\n  // { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  // { path: '/theme/colors', name: 'Colors', element: Colors },\n  // { path: '/theme/typography', name: 'Typography', element: Typography },\n  // { path: '/base', name: 'Base', element: Cards, exact: true },\n  // { path: '/base/accordion', name: 'Accordion', element: Accordion },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n  // { path: '/base/cards', name: 'Cards', element: Cards },\n  // { path: '/base/carousels', name: 'Carousel', element: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', element: Collapses },\n  // { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n  // { path: '/base/navs', name: 'Navs', element: Navs },\n  // { path: '/base/paginations', name: 'Paginations', element: Paginations },\n  // { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n  // { path: '/base/popovers', name: 'Popovers', element: Popovers },\n  // { path: '/base/progress', name: 'Progress', element: Progress },\n  // { path: '/base/spinners', name: 'Spinners', element: Spinners },\n  // { path: '/base/tables', name: 'Tables', element: Tables },\n  // { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n  // { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n  // { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n  // { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n  // { path: '/charts', name: 'Charts', element: Charts },\n  // { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  // { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  // { path: '/forms/select', name: 'Select', element: Select },\n  // { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n  // { path: '/forms/range', name: 'Range', element: Range },\n  // { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  // { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n  // { path: '/forms/layout', name: 'Layout', element: Layout },\n  // { path: '/forms/validation', name: 'Validation', element: Validation },\n  // { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', element: Flags },\n  // { path: '/icons/brands', name: 'Brands', element: Brands },\n  // { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n  // { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', element: Badges },\n  // { path: '/notifications/modals', name: 'Modals', element: Modals },\n  // { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n  // { path: '/widgets', name: 'Widgets', element: Widgets },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"my-0\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer className=\"px-4\" lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"login\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter className=\"px-4\">\n      <div>\n        <span className=\"ms-1\">\n          Copyright © 2023 P&G PROJECT CONTROL ESTRATEGICO. All rights reserved.\n        </span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, { useEffect, useRef } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CHeader,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilContrast,\n  cilEnvelopeOpen,\n  cilList,\n  cilMenu,\n  cilMoon,\n  cilSun,\n} from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderToggler\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n          style={{ marginInlineStart: '-14px' }}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n      </CContainer>\n      <CContainer className=\"px-4\" fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const navLink = (name, icon, badge, indent = false) => {\n    return (\n      <>\n        {icon\n          ? icon\n          : indent && (\n              <span className=\"nav-icon\">\n                <span className=\"nav-icon-bullet\"></span>\n              </span>\n            )}\n        {name && name}\n      </>\n    )\n  }\n\n  const navItem = (item, index, indent = false) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n        onClick={() => {\n          navigate(item.to)\n        }}\n      >\n        {navLink(name, icon, badge, indent)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, items, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        compact\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index, true),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilDrop, cilPencil } from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: 'Proyectos',\n  },\n  {\n    component: CNavItem,\n    name: 'Proyectos en curso',\n    to: '/dashboard',\n    icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar Proyectos',\n    to: '/administrar_proyectos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar Contratos',\n    to: '/administrar_contratos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Usuarios',\n  },\n  {\n    component: CNavItem,\n    name: 'Mis datos',\n    to: '/mis_datos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CCloseButton,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarFooter,\n  CSidebarHeader,\n  CSidebarNav,\n  CSidebarToggler,\n} from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      className=\"border-end\"\n      colorScheme=\"dark\"\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"border-bottom\">\n        <CSidebarBrand to=\"/\">\n          {/* <CIcon customClassName=\"sidebar-brand-full\" icon={logo} height={32} /> */}\n          {/* <CIcon customClassName=\"sidebar-brand-narrow\" icon={sygnet} height={32} /> */}\n          <span>P&G Project Control</span>\n        </CSidebarBrand>\n        <CCloseButton\n          className=\"d-lg-none\"\n          dark\n          onClick={() => dispatch({ type: 'set', sidebarShow: false })}\n        />\n      </CSidebarHeader>\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\n        <CSidebarToggler\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebarFooter>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\n        <AppHeader />\n        <div className=\"body flex-grow-1\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","path","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","getRouteName","routes","currentRoute","find","route","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","href","map","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","exact","Navigate","to","replace","AppFooter","CFooter","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderToggler","onClick","type","style","marginInlineStart","CIcon","icon","cilMenu","size","AppSidebarNav","_ref","items","navigate","useNavigate","navLink","badge","indent","arguments","undefined","_Fragment","navItem","item","component","rest","Component","NavLink","navGroup","_item$items","compact","String","toggler","visible","startsWith","CNavTitle","CNavItem","cilDrop","customClassName","cilPencil","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","colorScheme","onVisibleChange","CSidebarHeader","CSidebarBrand","CCloseButton","dark","CSidebarNav","SimpleBar","navigation","CSidebarFooter","CSidebarToggler","DefaultLayout"],"sourceRoot":""}