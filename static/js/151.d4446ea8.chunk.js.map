{"version":3,"file":"static/js/151.d4446ea8.chunk.js","mappings":"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","sources":["components/ModalSendDailyReport.jsx","components/DailyReportEditCollapse.jsx","pages/DailyReportEditPage.jsx","../node_modules/@coreui/react/src/components/modal/CModalContent.tsx","../node_modules/@coreui/react/src/components/modal/CModalDialog.tsx","../node_modules/@coreui/react/src/components/modal/CModal.tsx","../node_modules/@coreui/react/src/components/modal/CModalBody.tsx","../node_modules/@coreui/react/src/components/modal/CModalFooter.tsx","../node_modules/@coreui/react/src/components/close-button/CCloseButton.tsx","../node_modules/@coreui/react/src/components/modal/CModalHeader.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CRow,\n  CCol,\n  CFormTextarea,\n} from '@coreui/react'\nconst ModalSendDailyReport = (props) => {\n  const [rejectCommentary, setRejectCommentary] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleClickReject = () => {\n    setError(false)\n    if (rejectCommentary !== '') {\n      props.sendDataToParent(false)\n    } else {\n      setError(true)\n    }\n  }\n\n  const handleClickApprove = () => {\n    props.sendDataToParent(false)\n  }\n\n  const onChangeData = (e) => {\n    setRejectCommentary(e.target.value)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => props.sendDataToParent(false)}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        {/* <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Categorías</CModalTitle> */}\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={12}>\n              <CFormTextarea\n                id=\"rejectCommentary\"\n                label=\"Comentario\"\n                value={rejectCommentary || ''}\n                rows={3}\n                invalid={error}\n                text={error && 'Debe agregar un comentario para rechazar el informe diario.'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              ></CFormTextarea>\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => handleClickReject()}>\n          Rechazar\n        </CButton>\n        <CButton color=\"primary\" onClick={() => handleClickApprove()}>\n          Aprobar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalSendDailyReport\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport ModalSendDailyReport from './ModalSendDailyReport'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport Pdf from './Pdf'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport Loading from './loading'\n\n// import { Chart } from 'react-google-charts'\n// import { toPng } from 'html-to-image'\n\nconst DailyReportCollapse = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n  const navigate = useNavigate()\n  // const elementRef = useRef(null)\n\n  const [visibleSendDailyReportModal, setVisibleSendDailyReportModal] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    totalIndirectWorkForce,\n    directWorkForceList,\n    totalDirectWorkForce,\n    asarcoMachineryList,\n    machineryList,\n    equipmentList,\n    equipmentPlateList,\n    vehicleList,\n    vehiclePlateList,\n    activityList,\n    aljibeList,\n    comment,\n    incident,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n  } = useRegisterDailyReportCompany()\n  const [imagen, setImagen] = useState()\n\n  const [isLoading, setIsloading] = useState(false)\n  const [blobData, setBlobData] = useState()\n  const [url, setUrl] = useState()\n\n  useEffect(() => {\n    if (!company.dailyReportDate) window.location.reload()\n  }, [company])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const { registerData } = useRegisterDailyReport()\n\n  const registerDailyReport = () => {\n    if (isEditMode) {\n      setVisibleSendDailyReportModal(!visibleSendDailyReportModal)\n    } else {\n      registerData()\n    }\n  }\n\n  // const data = [\n  //   ['Element', 'Density', { role: 'style' }],\n  //   ['Copper', 8.94, '#b87333'], // RGB value\n  //   ['Silver', 10.49, 'silver'], // English color name\n  //   ['Gold', 19.3, 'gold'],\n  //   ['Platinum', 21.45, 'color: #e5e4e2'], // CSS-style declaration\n  // ]\n\n  // useEffect(() => {\n  //   htmlToImageConvert()\n  // }, [])\n\n  // const htmlToImageConvert = () => {\n  //   setImagen()\n  //   console.log('convirtiendo')\n  //   toPng(elementRef.current, { cacheBust: false })\n  //     .then((dataUrl) => {\n  //       console.log('dataUrl', dataUrl)\n  //       setImagen(dataUrl)\n  //       // const link = document.createElement('a')\n  //       // console.log('link', link)\n  //       // link.download = 'my-image-name.png'\n  //       // link.href = dataUrl\n  //       // link.click()\n  //     })\n  //     .catch((err) => {\n  //       console.log('ERROR', err)\n  //     })\n  // }\n\n  // useEffect(() => {\n  //   if (elementRef.current) {\n  //     htmlToImageConvert()\n  //   }\n  // }, [elementRef])\n\n  // useEffect(() => {\n  //   console.log('imagen', imagen === undefined || imagen.includes('data:,'))\n  //   if (imagen === undefined || imagen.includes('data:,')) {\n  //     htmlToImageConvert()\n  //   }\n  // }, [imagen])\n\n  return (\n    <div className=\"dailyReport\">\n      {visibleSendDailyReportModal && (\n        <ModalSendDailyReport\n          visible={true}\n          sendDataToParent={async (data) => {\n            setVisibleSendDailyReportModal(data)\n          }}\n        />\n      )}\n      <div>\n        {/* <div ref={elementRef}>\n          <Chart\n            chartType=\"ColumnChart\"\n            width=\"100%\"\n            height=\"400px\"\n            data={data}\n            onSuccess={() => {\n              console.log('success')\n            }}\n          />\n        </div> */}\n\n        <PDFDownloadLink\n          document={\n            <Pdf\n              company={company}\n              indirectWorkForceList={indirectWorkForceList}\n              basicQuery={basicQuery}\n              totalIndirectWorkForce={totalIndirectWorkForce}\n              directWorkForceList={directWorkForceList}\n              totalDirectWorkForce={totalDirectWorkForce}\n              asarcoMachineryList={asarcoMachineryList}\n              machineryList={machineryList}\n              equipmentList={equipmentList}\n              equipmentPlateList={equipmentPlateList}\n              vehiclePlateList={vehiclePlateList}\n              vehicleList={vehicleList}\n              activityList={activityList}\n              aljibeList={aljibeList}\n              comment={comment}\n              incident={incident}\n              directDotationWorkForceList={directDotationWorkForceList}\n              machineryWorkForceList={machineryWorkForceList}\n              equipmentWorkForceList={equipmentWorkForceList}\n              image={imagen}\n            />\n          }\n          fileName=\"Reporte 1.pdf\"\n        >\n          {({ blob, url, loading, error }) => {\n            // console.log('blob', blob)\n            // console.log('url', url)\n            // console.log('loading', loading)\n            // console.log('error', error)\n            setIsloading(loading)\n            setBlobData(blob)\n            setUrl(url)\n            return loading ? 'Generando documento...' : 'Descargar PDF'\n          }}\n        </PDFDownloadLink>\n      </div>\n      {!isLoading && url && blobData ? (\n        <>\n          <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n            <CAccordionItem itemKey={1}>\n              <CAccordionHeader>1) Empresa</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <CompanyReport />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={2}>\n              <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={3}>\n              <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalIndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={4}>\n              <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={5}>\n              <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalDirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={6}>\n              <CAccordionHeader>\n                6) Dotación por frente de trabajo personal directo\n              </CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectDotationWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={7}>\n              <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Machinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={8}>\n              <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <MachineryWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={9}>\n              <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <AsarcoMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={10}>\n              <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={11}>\n              <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentPlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={12}>\n              <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={13}>\n              <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Vehicle />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={14}>\n              <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <VehiclePlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={15}>\n              <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Activities />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={16}>\n              <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndustrialWaterControl />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={17}>\n              <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Comments />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={19}>\n              <CAccordionHeader>19) Registro fotográfico diario</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <PhotoRecord />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={20}>\n              <CAccordionHeader>20) Graficos del día</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Graphs />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={21}>\n              <CAccordionHeader>21) Incidentes, lesiones o eventos</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Incidents />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={22}>\n              <CAccordionHeader>22) Firmas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <></>\n              </CAccordionBody>\n            </CAccordionItem>\n          </CAccordion>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              // registerData()\n              registerDailyReport()\n            }}\n          >\n            Registrar informe diario\n          </CButton>\n        </>\n      ) : (\n        <>\n          <Loading />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import React, { useEffect } from 'react'\nimport DailyReportEditCollapse from 'src/components/DailyReportEditCollapse'\nimport { CCard, CCardBody, CCardText } from '@coreui/react'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useNavigate } from 'react-router-dom'\n\nconst DailyReportPage = () => {\n  let navigate = useNavigate()\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  useEffect(() => {\n    if (!basicQuery) {\n      navigate(`/dashboard`)\n    }\n  }, [basicQuery])\n\n  return (\n    <div className=\"daily-report\">\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <DailyReportEditCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default DailyReportPage\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalContent = forwardRef<HTMLDivElement, CModalContentProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-content', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalContent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalContent.displayName = 'CModalContent'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalDialogProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Does the modal dialog itself scroll, or does the whole dialog scroll within the window.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n}\n\nexport const CModalDialog = forwardRef<HTMLDivElement, CModalDialogProps>(\n  ({ children, alignment, className, fullscreen, scrollable, size, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'modal-dialog',\n          {\n            'modal-dialog-centered': alignment === 'center',\n            [typeof fullscreen === 'boolean'\n              ? 'modal-fullscreen'\n              : `modal-fullscreen-${fullscreen}-down`]: fullscreen,\n            'modal-dialog-scrollable': scrollable,\n            [`modal-${size}`]: size,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n}\n\nCModalDialog.displayName = 'CModalDialog'\n","import React, {\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { CBackdrop } from '../backdrop'\nimport { CConditionalPortal } from '../conditional-portal'\nimport { CModalContent } from './CModalContent'\nimport { CModalDialog } from './CModalDialog'\n\nimport { useForkedRef } from '../../hooks'\n\nexport interface CModalProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * Apply a backdrop on body while modal is open.\n   */\n  backdrop?: boolean | 'static'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * @ignore\n   */\n  duration?: number\n  /**\n   * Puts the focus on the modal when shown.\n   *\n   * @since v4.10.0\n   */\n  focus?: boolean\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose?: () => void\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClosePrevented?: () => void\n  /**\n   * Callback fired when the modal is shown, its backdrop is static and a click outside the modal or an escape key press is performed with the keyboard option set to false.\n   */\n  onShow?: () => void\n  /**\n   * Generates modal using createPortal.\n   */\n  portal?: boolean\n  /**\n   * Create a scrollable modal that allows scrolling the modal body.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n  /**\n   * Remove animation to create modal that simply appear rather than fade in to view.\n   */\n  transition?: boolean\n  /**\n   * By default the component is unmounted after close animation, if you want to keep the component mounted set this property to false.\n   */\n  unmountOnClose?: boolean\n  /**\n   * Toggle the visibility of modal component.\n   */\n  visible?: boolean\n}\n\ninterface ModalContextProps {\n  visible?: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean | undefined>>\n}\n\nexport const CModalContext = createContext({} as ModalContextProps)\n\nexport const CModal = forwardRef<HTMLDivElement, CModalProps>(\n  (\n    {\n      children,\n      alignment,\n      backdrop = true,\n      className,\n      duration = 150,\n      focus = true,\n      fullscreen,\n      keyboard = true,\n      onClose,\n      onClosePrevented,\n      onShow,\n      portal = true,\n      scrollable,\n      size,\n      transition = true,\n      unmountOnClose = true,\n      visible,\n      ...rest\n    },\n    ref,\n  ) => {\n    const activeElementRef = useRef<HTMLElement | null>(null)\n    const modalRef = useRef<HTMLDivElement>(null)\n    const modalContentRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, modalRef)\n\n    const [_visible, setVisible] = useState(visible)\n    const [staticBackdrop, setStaticBackdrop] = useState(false)\n\n    const contextValues = {\n      visible: _visible,\n      setVisible,\n    }\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      if (_visible) {\n        activeElementRef.current = document.activeElement as HTMLElement | null\n        document.addEventListener('mouseup', handleClickOutside)\n        document.addEventListener('keydown', handleKeyDown)\n      } else {\n        activeElementRef.current?.focus()\n      }\n\n      return () => {\n        document.removeEventListener('mouseup', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }, [_visible])\n\n    const handleDismiss = () => {\n      if (backdrop === 'static') {\n        return setStaticBackdrop(true)\n      }\n\n      setVisible(false)\n\n      return onClose && onClose()\n    }\n\n    useLayoutEffect(() => {\n      onClosePrevented && onClosePrevented()\n      setTimeout(() => setStaticBackdrop(false), duration)\n    }, [staticBackdrop])\n\n    // Set focus to modal after open\n    useLayoutEffect(() => {\n      if (_visible) {\n        document.body.classList.add('modal-open')\n\n        if (backdrop) {\n          document.body.style.overflow = 'hidden'\n          document.body.style.paddingRight = '0px'\n        }\n\n        setTimeout(\n          () => {\n            focus && modalRef.current?.focus()\n          },\n          transition ? duration : 0,\n        )\n      } else {\n        document.body.classList.remove('modal-open')\n\n        if (backdrop) {\n          document.body.style.removeProperty('overflow')\n          document.body.style.removeProperty('padding-right')\n        }\n      }\n\n      return () => {\n        document.body.classList.remove('modal-open')\n        if (backdrop) {\n          document.body.style.removeProperty('overflow')\n          document.body.style.removeProperty('padding-right')\n        }\n      }\n    }, [_visible])\n\n    const handleClickOutside = (event: Event) => {\n      if (modalRef.current && modalRef.current == event.target) {\n        handleDismiss()\n      }\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && keyboard) {\n        handleDismiss()\n      }\n    }\n\n    return (\n      <>\n        <Transition\n          in={_visible}\n          mountOnEnter\n          nodeRef={modalRef}\n          onEnter={onShow}\n          onExit={onClose}\n          unmountOnExit={unmountOnClose}\n          timeout={transition ? duration : 0}\n        >\n          {(state) => (\n            <CConditionalPortal portal={portal}>\n              <CModalContext.Provider value={contextValues}>\n                <div\n                  className={classNames(\n                    'modal',\n                    {\n                      'modal-static': staticBackdrop,\n                      fade: transition,\n                      show: state === 'entered',\n                    },\n                    className,\n                  )}\n                  tabIndex={-1}\n                  {...(_visible\n                    ? { 'aria-modal': true, role: 'dialog' }\n                    : { 'aria-hidden': 'true' })}\n                  style={{\n                    ...(state !== 'exited' && { display: 'block' }),\n                  }}\n                  {...rest}\n                  ref={forkedRef}\n                >\n                  <CModalDialog\n                    alignment={alignment}\n                    fullscreen={fullscreen}\n                    scrollable={scrollable}\n                    size={size}\n                  >\n                    <CModalContent ref={modalContentRef}>{children}</CModalContent>\n                  </CModalDialog>\n                </div>\n              </CModalContext.Provider>\n            </CConditionalPortal>\n          )}\n        </Transition>\n        {backdrop && (\n          <CConditionalPortal portal={portal}>\n            <CBackdrop visible={_visible} />\n          </CConditionalPortal>\n        )}\n      </>\n    )\n  },\n)\n\nCModal.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'static'>(['static'])]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  duration: PropTypes.number,\n  focus: PropTypes.bool,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  keyboard: PropTypes.bool,\n  onClose: PropTypes.func,\n  onClosePrevented: PropTypes.func,\n  onShow: PropTypes.func,\n  portal: PropTypes.bool,\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n  transition: PropTypes.bool,\n  unmountOnClose: PropTypes.bool,\n  visible: PropTypes.bool,\n}\n\nCModal.displayName = 'CModal'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalBody = forwardRef<HTMLDivElement, CModalBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-body', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalBody.displayName = 'CModalBody'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalFooter = forwardRef<HTMLDivElement, CModalFooterProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-footer', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalFooter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalFooter.displayName = 'CModalFooter'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCloseButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Invert the default color.\n   */\n  dark?: boolean\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Change the default color to white.\n   *\n   * @deprecated 5.0.0\n   */\n  white?: boolean\n}\n\nexport const CCloseButton = forwardRef<HTMLButtonElement, CCloseButtonProps>(\n  ({ className, dark, disabled, white, ...rest }, ref) => {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(\n          'btn',\n          'btn-close',\n          {\n            'btn-close-white': white,\n          },\n          disabled,\n          className,\n        )}\n        aria-label=\"Close\"\n        disabled={disabled}\n        {...(dark && { 'data-coreui-theme': 'dark' })}\n        {...rest}\n        ref={ref}\n      />\n    )\n  },\n)\n\nCCloseButton.propTypes = {\n  className: PropTypes.string,\n  dark: PropTypes.bool,\n  disabled: PropTypes.bool,\n  white: PropTypes.bool,\n}\n\nCCloseButton.displayName = 'CCloseButton'\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCloseButton } from '../close-button/CCloseButton'\nimport { CModalContext } from './CModal'\n\nexport interface CModalHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Add a close button component to the header.\n   */\n  closeButton?: boolean\n}\n\nexport const CModalHeader = forwardRef<HTMLDivElement, CModalHeaderProps>(\n  ({ children, className, closeButton = true, ...rest }, ref) => {\n    const { setVisible } = useContext(CModalContext)\n\n    return (\n      <div className={classNames('modal-header', className)} {...rest} ref={ref}>\n        {children}\n        {closeButton && <CCloseButton onClick={() => setVisible(false)} />}\n      </div>\n    )\n  },\n)\n\nCModalHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n}\n\nCModalHeader.displayName = 'CModalHeader'\n"],"names":["props","rejectCommentary","setRejectCommentary","useState","error","setError","_jsxs","CModal","scrollable","visible","onClose","sendDataToParent","size","className","children","_jsx","CModalHeader","CModalBody","CForm","CRow","CCol","sm","CFormTextarea","id","label","value","rows","invalid","text","onChange","e","target","onChangeData","CModalFooter","CButton","color","onClick","DailyReportCollapse","isEditMode","useLocation","pathname","includes","visibleSendDailyReportModal","setVisibleSendDailyReportModal","useNavigate","company","indirectWorkForceList","totalIndirectWorkForce","directWorkForceList","totalDirectWorkForce","asarcoMachineryList","machineryList","equipmentList","equipmentPlateList","vehicleList","vehiclePlateList","activityList","aljibeList","comment","incident","directDotationWorkForceList","machineryWorkForceList","equipmentWorkForceList","useRegisterDailyReportCompany","imagen","setImagen","isLoading","setIsloading","blobData","setBlobData","url","setUrl","useEffect","dailyReportDate","window","location","reload","getData","useGetCachedQueryData","basicQuery","registerData","useRegisterDailyReport","ModalSendDailyReport","async","data","PDFDownloadLink","document","Pdf","image","fileName","_ref","blob","loading","_Fragment","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","CompanyReport","IndirectWorkForce","TotalIndirectWorkForce","DirectWorkForce","TotalDirectWorkForce","DirectDotationWorkForce","Machinery","MachineryWorkForce","AsarcoMachinery","EquipmentMachinery","EquipmentPlate","EquipmentWorkForce","Vehicle","VehiclePlate","Activities","IndustrialWaterControl","Comments","PhotoRecord","Graphs","Incidents","Loading","DailyReportPage","navigate","CCard","CCardBody","CCardText","DailyReportEditCollapse","CModalContent","forwardRef","_a","ref","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","CModalDialog","alignment","fullscreen","_b","concat","CModalContext","createContext","backdrop","_c","duration","_d","focus","_e","keyboard","onClosePrevented","onShow","_f","portal","_g","transition","_h","unmountOnClose","activeElementRef","useRef","modalRef","modalContentRef","forkedRef","useForkedRef","_j","_visible","setVisible","_k","staticBackdrop","setStaticBackdrop","contextValues","current","activeElement","addEventListener","handleClickOutside","handleKeyDown","removeEventListener","handleDismiss","useLayoutEffect","setTimeout","body","classList","add","style","overflow","paddingRight","remove","removeProperty","event","key","Transition","in","mountOnEnter","nodeRef","onEnter","onExit","unmountOnExit","timeout","state","CConditionalPortal","Provider","fade","show","tabIndex","role","display","CBackdrop","CCloseButton","dark","disabled","white","type","closeButton","useContext"],"sourceRoot":""}