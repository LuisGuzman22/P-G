{"version":3,"file":"static/js/832.89dd76b9.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/DailyReportCollapse.jsx"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReport = () => {\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('/prueba', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndirectWorkForce = () => {\n  const initialStatee = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialStatee)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    // storeIndirectWorkForceData(e)\n    switch (e.target.id) {\n      case 'indirectWorkForce':\n        setIndirectWorkForce(initialStatee) // Clear the object\n        setIndirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorOfferedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorContractedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorCertified':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorBreakNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorWorkNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorHHNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialStatee) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalIndirectWorkForce = () => {\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalIndirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalDirectWorkForce = () => {\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalDirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"DirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkForce: undefined,\n    directDotationWorkForceObservation: undefined,\n    directWorkForceFront1: undefined,\n    directWorkForceFront2: undefined,\n    directWorkForceFront3: undefined,\n    directWorkForceFront4: undefined,\n    directWorkForceFront5: undefined,\n    directWorkForceFront6: undefined,\n    directWorkForceFront7: undefined,\n  }\n\n  const directDotationTotalsInitialState = {\n    directWorkForceFront1: 0,\n    directWorkForceFront2: 0,\n    directWorkForceFront3: 0,\n    directWorkForceFront4: 0,\n    directWorkForceFront5: 0,\n    directWorkForceFront6: 0,\n    directWorkForceFront7: 0,\n  }\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [directDotationTotals, setDirectDotationTotals] = useState(directDotationTotalsInitialState)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectDotationWorkForce({ ...directDotationWorkForce, directWorkForce: e.target.value })\n        break\n      case 'directWorkForceFront1':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront1: e.target.value,\n        })\n        break\n      case 'directWorkForceFront2':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront2: e.target.value,\n        })\n        break\n      case 'directWorkForceFront3':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront3: e.target.value,\n        })\n        break\n      case 'directWorkForceFront4':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront4: e.target.value,\n        })\n        break\n      case 'directWorkForceFront5':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront5: e.target.value,\n        })\n        break\n      case 'directWorkForceFront6':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront6: e.target.value,\n        })\n        break\n      case 'directWorkForceFront7':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront7: e.target.value,\n        })\n        break\n      case 'directDotationWorkForceObservation':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directDotationWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directDotationWorkForce.directWorkForce,\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      actions: {\n        directWorkForceFront1: directDotationWorkForce.directWorkForceFront1,\n        directWorkForceFront2: directDotationWorkForce.directWorkForceFront2,\n        directWorkForceFront3: directDotationWorkForce.directWorkForceFront3,\n        directWorkForceFront4: directDotationWorkForce.directWorkForceFront4,\n        directWorkForceFront5: directDotationWorkForce.directWorkForceFront5,\n        directWorkForceFront6: directDotationWorkForce.directWorkForceFront6,\n        directWorkForceFront7: directDotationWorkForce.directWorkForceFront7,\n      },\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  useEffect(() => {\n    let directDotationTotalsCounter = {\n      directWorkForceFront1: 0,\n      directWorkForceFront2: 0,\n      directWorkForceFront3: 0,\n      directWorkForceFront4: 0,\n      directWorkForceFront5: 0,\n      directWorkForceFront6: 0,\n      directWorkForceFront7: 0,\n    }\n\n    for (let data of directDotationWorkForceListContext) {\n      directDotationTotalsCounter = {\n        directWorkForceFront1:\n          Number(directDotationTotalsCounter.directWorkForceFront1) +\n          Number(data.actions.directWorkForceFront1 ?? 0),\n        directWorkForceFront2:\n          Number(directDotationTotalsCounter.directWorkForceFront2) +\n          Number(data.actions.directWorkForceFront2 ?? 0),\n        directWorkForceFront3:\n          Number(directDotationTotalsCounter.directWorkForceFront3) +\n          Number(data.actions.directWorkForceFront3 ?? 0),\n        directWorkForceFront4:\n          Number(directDotationTotalsCounter.directWorkForceFront4) +\n          Number(data.actions.directWorkForceFront4 ?? 0),\n        directWorkForceFront5:\n          Number(directDotationTotalsCounter.directWorkForceFront5) +\n          Number(data.actions.directWorkForceFront5 ?? 0),\n        directWorkForceFront6:\n          Number(directDotationTotalsCounter.directWorkForceFront6) +\n          Number(data.actions.directWorkForceFront6 ?? 0),\n        directWorkForceFront7:\n          Number(directDotationTotalsCounter.directWorkForceFront7) +\n          Number(data.actions.directWorkForceFront7 ?? 0),\n      }\n    }\n    setDirectDotationTotals(directDotationTotalsCounter)\n  }, [directDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n        <option value=\"Maestro_Mayor_Mecánico\">Maestro Mayor Mecánico</option>\n        <option value=\"Maestro_Mayor_Piping\">Maestro Mayor Piping</option>\n        <option value=\"Maestro_Primera_Mecánico\">Maestro Primera Mecánico</option>\n        <option value=\"Soldador_HDPE\">Soldador HDPE</option>\n        <option value=\"Soldador_6G\">Soldador 6G</option>\n        <option value=\"Capataz_Eléctrico\">Capataz Eléctrico</option>\n        <option value=\"Maestro_Mayor_Eléctrico\">Maestro Mayor Eléctrico</option>\n        <option value=\"Maestro_Primera_Eléctrico\">Maestro Primera Eléctrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront1\"\n                value={directDotationWorkForce.directWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront2\"\n                value={directDotationWorkForce.directWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront3\"\n                value={directDotationWorkForce.directWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront4\"\n                value={directDotationWorkForce.directWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront5\"\n                value={directDotationWorkForce.directWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront6\"\n                value={directDotationWorkForce.directWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront7\"\n                value={directDotationWorkForce.directWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].directWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {directDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront1 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront2 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront3 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront4 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront5 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront6 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront7 ?? 0}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletedirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst DotationWorkForce = () => {\n  const initialState = {\n    workforceDotationPersonalFront1: undefined,\n    workforceDotationPersonalFront2: undefined,\n    workforceDotationPersonalFront3: undefined,\n    workforceDotationPersonalFront4: undefined,\n    workforceDotationPersonalFront5: undefined,\n    workforceDotationPersonalFront6: undefined,\n    workforceDotationPersonalFront7: undefined,\n    workforceDotationObservation: undefined,\n  }\n\n  const [workforceDotation, setWorkforceDotation] = useState(initialState)\n\n  const { storeDotationWorkfoce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'workforceDotationPersonalFront1':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront1: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront2':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront2: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront3':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront3: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront4':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront4: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront5':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront5: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront6':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront6: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront7':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront7: e.target.value,\n        })\n        break\n      case 'workforceDotationObservation':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    storeDotationWorkfoce(workforceDotation)\n  }, [workforceDotation])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">N° de personal</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CFormTextarea\n        id=\"workforceDotationObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    setMachinery({ ...machinery, [e.target.id]: e.target.value })\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'machineryWorkForce':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n        break\n      case 'machineryWorkForceFront1':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront1: e.target.value })\n        break\n      case 'machineryWorkForceFront2':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront2: e.target.value })\n        break\n      case 'machineryWorkForceFront3':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront3: e.target.value })\n        break\n      case 'machineryWorkForceFront4':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront4: e.target.value })\n        break\n      case 'machineryWorkForceFront5':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront5: e.target.value })\n        break\n      case 'machineryWorkForceFront6':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront6: e.target.value })\n        break\n      case 'machineryWorkForceFront7':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront7: e.target.value })\n        break\n      case 'machineryWorkForceObservation':\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          machineryWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.machineryWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    setEquipment({ ...equipment, [e.target.id]: e.target.value })\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'equipmentWorkForce':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n        break\n      case 'equipmentWorkForceObservation':\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          equipmentWorkForceObservation: e.target.value,\n        })\n        break\n      case 'equipmentWorkForceFront1':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront1: e.target.value })\n        break\n      case 'equipmentWorkForceFront2':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront2: e.target.value })\n        break\n      case 'equipmentWorkForceFront3':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront3: e.target.value })\n        break\n      case 'equipmentWorkForceFront4':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront4: e.target.value })\n        break\n      case 'equipmentWorkForceFront5':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront5: e.target.value })\n        break\n      case 'equipmentWorkForceFront6':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront6: e.target.value })\n        break\n      case 'equipmentWorkForceFront7':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1</option>\n        <option value=\"equipo_2\">Equipo 2</option>\n        <option value=\"equipo_3\">Equipo 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.equipmentWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'vehicleWorkForce':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForce: e.target.value })\n        break\n      case 'vehicleWorkForceObservation':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceObservation: e.target.value })\n        break\n      case 'vehicleWorkForceFront1':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront1: e.target.value })\n        break\n      case 'vehicleWorkForceFront2':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront2: e.target.value })\n        break\n      case 'vehicleWorkForceFront3':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront3: e.target.value })\n        break\n      case 'vehicleWorkForceFront4':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront4: e.target.value })\n        break\n      case 'vehicleWorkForceFront5':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront5: e.target.value })\n        break\n      case 'vehicleWorkForceFront6':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront6: e.target.value })\n        break\n      case 'vehicleWorkForceFront7':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1</option>\n        <option value=\"vehiculo_2\">Vehículo 2</option>\n        <option value=\"vehiculo_3\">Vehículo 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.vehicleWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Activities = () => {\n  const initialState = {\n    activity: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activity') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    setActivity({ ...activity, [e.target.id]: e.target.value })\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activity: activity.activity,\n      actions: {\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      },\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activity\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"frente_1\">Frente de trabajo 1</option>\n        <option value=\"frente_2\">Frente de trabajo 2</option>\n        <option value=\"frente_3\">Frente de trabajo 3</option>\n        <option value=\"frente_4\">Frente de trabajo 4</option>\n        <option value=\"frente_5\">Frente de trabajo 5</option>\n        <option value=\"frente_6\">Frente de trabajo 6</option>\n        <option value=\"frente_7\">Frente de trabajo 7</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                // value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                // value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                // value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                // value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                // value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                // value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                // value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                // value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                // value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                // value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const MAX_IMAGES = 10\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectWorkForce(initialStatee) // Clear the object\n        setDirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceOfferedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceContractedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceCertifiedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceBreakNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceWorkNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceHHNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n  }\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n    }\n    setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n  }\n\n  const registerAsarcoMachinery = () => {\n    const asarcoMachineryInitialState = {\n      id: uuidv4(),\n      machinery: asarcoMachinery.machinery,\n      actions: {\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n      },\n    }\n    setAsarcoMachinery(initialState) // Clear the object\n    setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.actions.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.actions.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.actions.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.actions.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.actions.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.actions.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.actions.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.actions.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>\n                    {item.actions.asarcoMachineryUnscheduleMaintenance}\n                  </CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n    }\n    setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      actions: {\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      },\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n    }\n    setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n  }\n\n  const registerVehiclePlate = () => {\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      actions: {\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      },\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n  }\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n    }\n    setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n  }\n\n  const registeraljibe = () => {\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      actions: {\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n      },\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeCachimbaName: 0,\n      aljibeQuantityTurns: 0,\n      aljibeM3: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeCachimbaName:\n          Number(aljibeTotalsCounter.aljibeCachimbaName) +\n          Number(data.actions.aljibeCachimbaName ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) +\n          Number(data.actions.aljibeQuantityTurns ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.actions.aljibeM3 ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"aljibe_1\">Aljibe 1 + Patente</option>\n        <option value=\"aljibe_2\">Aljibe 2 + Patente</option>\n        <option value=\"aljibe_3\">Aljibe 3 + Patente</option>\n        <option value=\"aljibe_4\">Aljibe 4 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.aljibe}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCachimbaName ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>18) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={23}>\n          <CAccordionHeader>23) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","storeTotalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","company","totalIndirectWorkForce","totalDirectWorkForce","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","CompanyReport","onChangeData","e","_jsxs","className","children","_jsx","CForm","CRow","CCol","sm","CFormInput","type","id","label","placeholder","text","onChange","CFormSelect","value","IndirectWorkForce","initialStatee","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","useState","setIndirectWorkForceList","indirectWorkForceListContext","target","useEffect","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","map","item","index","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","colSpan","TotalDirectWorkForce","DirectDotationWorkForce","initialState","directWorkForce","directDotationWorkForceObservation","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationTotals","setDirectDotationTotals","directDotationWorkForceListContext","directDotationTotalsCounter","data","_data$actions$directW","_data$actions$directW2","_data$actions$directW3","_data$actions$directW4","_data$actions$directW5","_data$actions$directW6","_data$actions$directW7","Number","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$actions$directW","_item$actions$directW2","_item$actions$directW3","_item$actions$directW4","_item$actions$directW5","_item$actions$directW6","_item$actions$directW7","deletedirectDotationWorkForce","CFormTextarea","DotationWorkForce","workforceDotationPersonalFront1","workforceDotationPersonalFront2","workforceDotationPersonalFront3","workforceDotationPersonalFront4","workforceDotationPersonalFront5","workforceDotationPersonalFront6","workforceDotationPersonalFront7","workforceDotationObservation","setWorkforceDotation","disabled","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","vehicleWorkForceObservation","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activity","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","setActivity","setActivityList","activityListContext","registerActivity","activityInitialState","Comments","setComments","rows","Array","from","_","i","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","asarcoMachineryListContext","asarcoMachineryTotalsCounter","_data$actions$asarcoM","_data$actions$asarcoM2","_data$actions$asarcoM3","_data$actions$asarcoM4","_data$actions$asarcoM5","_data$actions$asarcoM6","_data$actions$asarcoM7","_data$actions$asarcoM8","registerAsarcoMachinery","asarcoMachineryInitialState","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","VehiclePlate","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","registerVehiclePlate","vehiclePlateInitialState","_item$actions$vehicle4","_item$actions$vehicle5","_item$actions$vehicle6","_item$actions$vehicle7","_item$actions$vehicle8","deletevehiclePlate","IndustrialWaterControl","_aljibeTotals$aljibeC","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","aljibeTotalsCounter","_data$actions$aljibeC","_data$actions$aljibeQ","_data$actions$aljibeM","registeraljibe","aljibeInitialState","_item$actions$aljibeC","_item$actions$aljibeQ","_item$actions$aljibeM","deletealjibe","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","_Fragment"],"sourceRoot":""}