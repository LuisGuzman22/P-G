{"version":3,"file":"static/js/315.eb667965.chunk.js","mappings":"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","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    <option value=\"Obras_civiles\">Obras Civiles</option>\n                    <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAcvancePercent\"\n                    value={activity.activityAccumulatedAcvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteActivity(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useRef, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const pieChartElement = useRef(null)\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const [imagenPieChart, setImagenPieChart] = useState()\n  const [pieChartData, setPieChartData] = useState([\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', 0],\n    ['Mantención Programada (Hrs)', 0],\n    ['Demora Programada (Hrs)', 0],\n    ['Perdida Operacional (Hrs)', 0],\n    ['Mantención No Programada (Hrs)', 0],\n    ['Demora No Programada (Hrs)', 0],\n    ['Reservas (Hrs)', 0],\n  ])\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  const convertAsarcoChart = () => {\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenPieChart(dataUrl)\n        }\n        // storeGraphs({ asarcoChart: dataUrl })\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  useEffect(() => {\n    setPieChartData([\n      ['Task', 'Hours per Day'],\n      ['Tiempo Efectivo (Hrs)', asarcoMachineryTotals.asarcoMachineryEffectiveTime],\n      ['Mantención Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleMaintenance],\n      ['Demora Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleDelay],\n      ['Perdida Operacional (Hrs)', asarcoMachineryTotals.asarcoMachineryOpperationalLoss],\n      [\n        'Mantención No Programada (Hrs)',\n        asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance,\n      ],\n      ['Demora No Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryUnscheduleDelay],\n      ['Reservas (Hrs)', asarcoMachineryTotals.asarcoMachineryReserves],\n    ])\n  }, [asarcoMachineryTotals])\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [pieChartData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'asarcoChart', value: imagenPieChart })\n  }, [imagenPieChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteAsarcoMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={pieChartElement}>\n        <Chart chartType=\"PieChart\" data={pieChartData} width={'100%'} height={'300px'} />\n      </div>\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isViewMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        disabled={isViewMode}\n        value={isViewMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={isViewMode}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={isViewMode}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {!isViewMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deletedirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const columnChartElement = useRef(null)\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [barGraphData, setBarGraphData] = useState([\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', 0, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', 0, 'silver'], // English color name\n  ])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  useEffect(() => {\n    let offered = 0\n    let worked = 0\n    directWorkForceListContext.map((data) => {\n      offered = offered + Number(data.offeredNumber)\n      worked = worked + Number(data.workNumber)\n    })\n    setTotalPlanedDotation(offered)\n    setTotalWorkDotation(worked)\n    // convertDotationChart()\n  }, [directWorkForceListContext])\n\n  const convertDotationChart = () => {\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenColumnChart(dataUrl)\n        }\n        // storeGraphs({ dotationChart: dataUrl })\n      })\n      .catch((err) => {})\n  }\n\n  useEffect(() => {\n    setBarGraphData([\n      ['Dotación', 'Dotación', { role: 'style' }],\n      ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n      ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n    ])\n  }, [totalPlanedDotation, totalWorkDotation])\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [barGraphData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'dotationChart', value: imagenColumnChart })\n  }, [imagenColumnChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {!isViewMode && (\n        <CButton\n          className=\"btn-project-action\"\n          onClick={() => {\n            registerDirectWorkForce()\n          }}\n        >\n          Registrar\n        </CButton>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteDirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={columnChartElement} style={{ width: '100%' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={barGraphData} />\n      </div>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {!isViewMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                deleteEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              eliminar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      {!isViewMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIncident(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      {!isViewMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIndirectWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeOfferedNumber\"\n                    value={aljibe.aljibeOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCertifiedNumber\"\n                    value={aljibe.aljibeCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeWorkNumber\"\n                    value={aljibe.aljibeWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletealjibe(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {!isViewMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteMachineryWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isViewMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !isViewMode\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehiclePlate(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {!isViewMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehicle(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n      graphList,\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","isViewMode","useLocation","pathname","includes","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","item","index","charge","find","work","newData","filter","deleteActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","pieChartElement","useRef","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","imagenPieChart","setImagenPieChart","pieChartData","setPieChartData","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","storeGraphs","selectedMachinery","mac","toString","plate","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","toPng","current","cacheBust","then","dataUrl","catch","err","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","ref","Chart","chartType","width","height","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","dailyReportIndirectPersonalShift","indirect_staff_shift","indirect_staf","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","DirectWorkForce","columnChartElement","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","imagenColumnChart","setImagenColumnChart","barGraphData","setBarGraphData","role","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","offered","worked","offeredNumber","workNumber","registerDirectWorkForce","directWorkForceInitialState","contractedNumber","certified","breakNumber","hh","personal","deleteDirectWorkForce","style","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","selectedEquipment","equip","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","deleteEquipmentWorkForce","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","deleteIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","deleteMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","Loading","Lottie","animationData","loadingjson","loop","projectLS","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","graphList","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","onSuccess","onError","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}