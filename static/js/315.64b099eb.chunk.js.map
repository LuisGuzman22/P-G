{"version":3,"file":"static/js/315.64b099eb.chunk.js","mappings":"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","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAdvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAdvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAdvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAdvancePercent: activity.activityAccumulatedAdvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityListContext, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityListContext.filter((item) => item.id !== id)\n    setActivityList(newData)\n    removeActivity(id)\n  }\n\n  const editActivity = (id) => {\n    const selectedActivity = activityListContext.find((item) => item.id === id)\n    setActivity({\n      activityFrontWork: selectedActivity.activityFrontWork,\n      primaveraId: selectedActivity.primaveraId,\n      activityName: selectedActivity.activityName,\n      activityDiscipline: selectedActivity.activityDiscipline,\n      activityTotalAmount: selectedActivity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: selectedActivity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: selectedActivity.activityActualShiftQuantity,\n      activityAccumulatedAdvancePercent: selectedActivity.activityAccumulatedAdvancePercent,\n      activityUnit: selectedActivity.activityUnit,\n      activityHoursSpendPrevius: selectedActivity.activityHoursSpendPrevius,\n      activityHoursSpendShift: selectedActivity.activityHoursSpendShift,\n      activityHoursAccumulated: selectedActivity.activityHoursAccumulated,\n    })\n\n    deleteActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    {basicQuery.diciplines.map((dicipline) => {\n                      return (\n                        <option key={dicipline.id} value={dicipline.id}>\n                          {dicipline.name}\n                        </option>\n                      )\n                    })}{' '}\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAdvancePercent\"\n                    value={activity.activityAccumulatedAdvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n\n              const selectedDicipline = basicQuery.diciplines.find((dicipline) => {\n                return dicipline.id.toString() === item.activityDiscipline.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{selectedDicipline.name}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAdvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteActivity(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editActivity(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useRef, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const pieChartElement = useRef(null)\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const [isInView, setIsInView] = useState(false)\n\n  const checkInView = () => {\n    const rect = pieChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  useEffect(() => {\n    document.addEventListener('scroll', checkInView)\n    return () => {\n      document.removeEventListener('scroll', checkInView)\n    }\n  }, [])\n\n  const [imagenPieChart, setImagenPieChart] = useState()\n  const [pieChartData, setPieChartData] = useState([\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', 0],\n    ['Mantención Programada (Hrs)', 0],\n    ['Demora Programada (Hrs)', 0],\n    ['Perdida Operacional (Hrs)', 0],\n    ['Mantención No Programada (Hrs)', 0],\n    ['Demora No Programada (Hrs)', 0],\n    ['Reservas (Hrs)', 0],\n  ])\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryListContext, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryListContext.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  const editAsarcoMachinery = (id) => {\n    const selectedAsarcoMachinery = asarcoMachineryListContext.find((item) => item.id === id)\n\n    const selectedMachinery = basicQuery.machinery.find((mac) => {\n      return mac.id.toString() === selectedAsarcoMachinery.machinery.toString()\n    })\n    setPlates(selectedMachinery.plate)\n\n    setAsarcoMachinery({\n      machinery: selectedAsarcoMachinery.machinery,\n      asarcoMachineryEffectiveTime: selectedAsarcoMachinery.asarcoMachineryEffectiveTime,\n      asarcoMachineryUnscheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n      asarcoMachineryScheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryScheduleMaintenance,\n      asarcoMachineryUnscheduleDelay: selectedAsarcoMachinery.asarcoMachineryUnscheduleDelay,\n      asarcoMachineryReserves: selectedAsarcoMachinery.asarcoMachineryReserves,\n      asarcoMachineryHorometer: selectedAsarcoMachinery.asarcoMachineryHorometer,\n      asarcoMachineryOpperationalLoss: selectedAsarcoMachinery.asarcoMachineryOpperationalLoss,\n      asarcoMachineryScheduleDelay: selectedAsarcoMachinery.asarcoMachineryScheduleDelay,\n      machineryPlate: selectedAsarcoMachinery.machineryPlate,\n    })\n    deleteAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  const convertAsarcoChart = () => {\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenPieChart(dataUrl)\n        }\n        // storeGraphs({ asarcoChart: dataUrl })\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  useEffect(() => {\n    setPieChartData([\n      ['Task', 'Hours per Day'],\n      ['Tiempo Efectivo (Hrs)', asarcoMachineryTotals.asarcoMachineryEffectiveTime],\n      ['Mantención Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleMaintenance],\n      ['Demora Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleDelay],\n      ['Perdida Operacional (Hrs)', asarcoMachineryTotals.asarcoMachineryOpperationalLoss],\n      [\n        'Mantención No Programada (Hrs)',\n        asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance,\n      ],\n      ['Demora No Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryUnscheduleDelay],\n      ['Reservas (Hrs)', asarcoMachineryTotals.asarcoMachineryReserves],\n    ])\n  }, [asarcoMachineryTotals])\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [pieChartData])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      if (imagenPieChart !== undefined) storeGraphs({ name: 'asarcoChart', value: imagenPieChart })\n    }\n  }, [imagenPieChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteAsarcoMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAsarcoMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n      <div ref={pieChartElement}>\n        <Chart chartType=\"PieChart\" data={pieChartData} width={'100%'} height={'300px'} />\n      </div>\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isViewMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en general\"\n        disabled={isViewMode}\n        value={isViewMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { Button } from '@coreui/coreui'\nimport { validate } from 'src/utils/validate'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const {\n    storeCompanyData,\n    storeIndirectCompanyTurn,\n    company,\n    removeIndirectCompanyTurn,\n    indirectCompanyTurnList: indirectCompanyTurnListContext,\n  } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const initialState = {\n    dailyReportIndirectPersonalShift: undefined,\n    dailyReportIndirectPersonalHours: undefined,\n    dailyReportIndirectPersonalJourney: undefined,\n  }\n\n  const [indirectPersonalList, setIndirectPersonalList] = useState([])\n  const [indirectPersonal, setIndirectPersonal] = useState(initialState)\n  const [error, setError] = useState(false)\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  const onChangeIndirectPersonal = (e) => {\n    if (validate(e.target.value)) {\n      setIndirectPersonal({ ...indirectPersonal, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectTurn = () => {\n    if (\n      !indirectPersonal.dailyReportIndirectPersonalShift ||\n      !indirectPersonal.dailyReportIndirectPersonalHours ||\n      !indirectPersonal.dailyReportIndirectPersonalJourney\n    ) {\n      setError(true)\n    } else {\n      const indirectPersonalInitialState = {\n        id: uuidv4(),\n        dailyReportIndirectPersonalShift: indirectPersonal.dailyReportIndirectPersonalShift,\n        dailyReportIndirectPersonalHours: indirectPersonal.dailyReportIndirectPersonalHours,\n        dailyReportIndirectPersonalJourney: indirectPersonal.dailyReportIndirectPersonalJourney,\n      }\n      setIndirectPersonal(initialState) // Clear the object\n      setIndirectPersonalList([...indirectCompanyTurnListContext, indirectPersonalInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectCompanyTurn(indirectPersonalList)\n  }, [indirectPersonalList])\n\n  const deleteIndirectCompanyTurn = (id) => {\n    const newData = indirectCompanyTurnListContext.filter((item) => item.id !== id)\n    setIndirectPersonalList(newData)\n    removeIndirectCompanyTurn(id)\n  }\n\n  const editIndirectCompanyTurn = (id) => {\n    const newData = indirectCompanyTurnListContext.find((item) => item.id === id)\n    setIndirectPersonal({\n      dailyReportIndirectPersonalShift: newData.dailyReportIndirectPersonalShift,\n      dailyReportIndirectPersonalHours: newData.dailyReportIndirectPersonalHours,\n      dailyReportIndirectPersonalJourney: newData.dailyReportIndirectPersonalJourney,\n    })\n    deleteIndirectCompanyTurn(id)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={isViewMode}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={isViewMode}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || projectLS.manager}\n              text=\"\"\n              disabled\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <CButton\n              onClick={() => {\n                registerIndirectTurn()\n              }}\n            >\n              Registrar turno personal indirecto\n            </CButton>\n          </CCol>\n        </CRow>\n        {indirectCompanyTurnListContext &&\n          indirectCompanyTurnListContext.length > 0 &&\n          indirectCompanyTurnListContext[0].dailyReportIndirectPersonalShift && (\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Turno (Personal indirecto)</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Horas turno (Personal indirecto)</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Jornada (Personal indirecto)</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {indirectCompanyTurnListContext.map((item, index) => {\n                  const selectedJourney = basicQuery?.shifts.find(\n                    (shift) => shift.id == item.dailyReportIndirectPersonalJourney,\n                  )\n\n                  const selectedShift = basicQuery?.indirect_staff_shift.find(\n                    (turn) => turn.id == item.dailyReportIndirectPersonalShift,\n                  )\n\n                  return (\n                    <CTableRow key={index}>\n                      <CTableDataCell>{selectedShift?.name ?? ''}</CTableDataCell>\n                      <CTableDataCell>{item.dailyReportIndirectPersonalHours ?? 0}</CTableDataCell>\n                      <CTableDataCell>{selectedJourney?.name ?? ''}</CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteIndirectCompanyTurn(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editIndirectCompanyTurn(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  useEffect(() => {\n    setDirectDotationWorkForce({\n      ...directDotationWorkForce,\n      directSubWorkFront: enableSubFrontWork\n        ? directDotationWorkForce.directSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceListContext,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceListContext.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  const editDirectDotationWorkForce = (id) => {\n    const selectDirectDotationWorkForce = directDotationWorkForceListContext.find(\n      (item) => item.id === id,\n    )\n    if (selectDirectDotationWorkForce.directSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setDirectDotationWorkForce({\n      directWorkFront: selectDirectDotationWorkForce.directWorkFront,\n      directDotationWorkForceObservation:\n        selectDirectDotationWorkForce.directDotationWorkForceObservation,\n      directSubWorkFront: selectDirectDotationWorkForce.directSubWorkFront,\n      directWorkFrontCharge: selectDirectDotationWorkForce.directWorkFrontCharge,\n      directWorkFrontQuantity: selectDirectDotationWorkForce.directWorkFrontQuantity,\n    })\n    deletedirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deletedirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editDirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const columnChartElement = useRef(null)\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [isInView, setIsInView] = useState(false)\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [barGraphData, setBarGraphData] = useState([\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', 0, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', 0, 'silver'], // English color name\n  ])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceListContext, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceListContext.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  const editDirectWorkForce = (id) => {\n    const selectedDirectWorkForce = directWorkForceListContext.find((item) => item.id === id)\n\n    setDirectWorkForce({\n      directWorkForce: selectedDirectWorkForce.directWorkForce,\n      directWorkForceOfferedNumber: selectedDirectWorkForce.offeredNumber,\n      directWorkForceContractedNumber: selectedDirectWorkForce.contractedNumber,\n      directWorkForceCertifiedNumber: selectedDirectWorkForce.certified,\n      directWorkForceBreakNumber: selectedDirectWorkForce.breakNumber,\n      directWorkForceWorkNumber: selectedDirectWorkForce.workNumber,\n      directWorkForceHHNumber: selectedDirectWorkForce.hh,\n    })\n    deleteDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  useEffect(() => {\n    let offered = 0\n    let worked = 0\n    directWorkForceListContext.map((data) => {\n      offered = offered + Number(data.offeredNumber)\n      worked = worked + Number(data.workNumber)\n    })\n    setTotalPlanedDotation(offered)\n    setTotalWorkDotation(worked)\n    // convertDotationChart()\n  }, [directWorkForceListContext])\n\n  const convertDotationChart = () => {\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenColumnChart(dataUrl)\n        }\n        // storeGraphs({ dotationChart: dataUrl })\n      })\n      .catch((err) => {})\n  }\n\n  useEffect(() => {\n    setBarGraphData([\n      ['Dotación', 'Dotación', { role: 'style' }],\n      ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n      ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n    ])\n  }, [totalPlanedDotation, totalWorkDotation])\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [barGraphData])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      if (imagenColumnChart !== undefined)\n        storeGraphs({ name: 'dotationChart', value: imagenColumnChart })\n    }\n  }, [imagenColumnChart])\n\n  const checkInView = () => {\n    const rect = columnChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {!isViewMode && (\n        <CButton\n          className=\"btn-project-action\"\n          onClick={() => {\n            registerDirectWorkForce()\n          }}\n        >\n          Registrar\n        </CButton>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteDirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editDirectWorkForce(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={columnChartElement} style={{ width: '100%' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={barGraphData} />\n      </div>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentListContext.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipment = equipmentListContext.find((item) => item.id === id)\n    setEquipment({\n      equipment: selectedEquipment.equipment,\n      equipmentOfferedNumber: selectedEquipment.actions.equipmentOfferedNumber,\n      equipmentCertifiedNumber: selectedEquipment.actions.equipmentCertifiedNumber,\n      equipmentWorkNumber: selectedEquipment.actions.equipmentWorkNumber,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateListContext.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipmentPlate = equipmentPlateListContext.find((item) => item.id === id)\n    const selectedEquipment = basicQuery.equipment.find(\n      (equip) => equip.id.toString() === selectedEquipmentPlate.equipment.toString(),\n    )\n\n    setPlates(selectedEquipment.plate)\n\n    setEquipmentPlate({\n      equipment: selectedEquipmentPlate.equipment,\n      equipmentEffectiveTime: selectedEquipmentPlate.equipmentEffectiveTime,\n      equipmentCorrectiveMaintenance: selectedEquipmentPlate.equipmentCorrectiveMaintenance,\n      equipmentPreventiveMaintenance: selectedEquipmentPlate.equipmentPreventiveMaintenance,\n      equipmentOutOfService: selectedEquipmentPlate.equipmentOutOfService,\n      equipmentWaiting: selectedEquipmentPlate.equipmentWaiting,\n      equipmentNoOperator: selectedEquipmentPlate.equipmentNoOperator,\n      equipmentInitialHorometer: selectedEquipmentPlate.equipmentInitialHorometer,\n      equipmentFinalHorometer: selectedEquipmentPlate.equipmentFinalHorometer,\n      equipmentPlate: selectedEquipmentPlate.equipmentPlate,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceListContext, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceListContext.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  const editEquipmentWorkForce = (id) => {\n    const selectedEquipmentWorkForce = equipmentWorkForceListContext.find((item) => item.id === id)\n\n    if (selectedEquipmentWorkForce.equipmentSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setEquipmentWorkForce({\n      equipmentWorkForce: selectedEquipmentWorkForce.equipmentWorkForce,\n      equipmentWorkForceObservation: selectedEquipmentWorkForce.equipmentWorkForceObservation,\n      equipmentSubWorkFront: selectedEquipmentWorkForce.equipmentSubWorkFront,\n      equipmentWorkFrontCharge: selectedEquipmentWorkForce.equipmentWorkFrontCharge,\n      equipmentWorkFrontQuantity: selectedEquipmentWorkForce.equipmentWorkFrontQuantity,\n    })\n    deleteEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    setEquipmentWorkForce({\n      ...equipmentWorkForce,\n      equipmentSubWorkFront: enableSubFrontWork\n        ? equipmentWorkForce.equipmentSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                deleteEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              eliminar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                editEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              Editar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentContext, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentContext.filter((item) => item.id !== id)\n    setIncidentList(newData)\n    removeIncident(id)\n  }\n\n  const editIncident = (id) => {\n    const selectedIncident = incidentContext.find((item) => item.id === id)\n    setIncident({\n      incident: selectedIncident.incident,\n      nonConformity: selectedIncident.nonConformity,\n    })\n    deleteIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIncident(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIncident(item.id)\n                          }}\n                        >\n                          editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (isCreatingMode) setIndirectWorkForceList(indirectWorkForceListContext)\n  // }, [indirectWorkForceListContext])\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([\n        // ...indirectWorkForceList,\n        ...indirectWorkForceListContext,\n        indirectWorkForceInitialState,\n      ])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceListContext.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  const editIndirectWorkForce = (id) => {\n    const selectedIndirectWorkForce = indirectWorkForceListContext.find((item) => item.id === id)\n    setIndirectWorkForce({\n      indirectWorkForce: selectedIndirectWorkForce.indirectWorkForce,\n      contractAdministratorOfferedNumber: selectedIndirectWorkForce.offeredNumber,\n      contractAdministratorContractedNumber: selectedIndirectWorkForce.contractedNumber,\n      contractAdministratorCertified: selectedIndirectWorkForce.certified,\n      contractAdministratorBreakNumber: selectedIndirectWorkForce.breakNumber,\n      contractAdministratorWorkNumber: selectedIndirectWorkForce.workNumber,\n      contractAdministratorHHNumber: selectedIndirectWorkForce.hh,\n    })\n    deleteIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIndirectWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIndirectWorkForce(item.id)\n                          }}\n                        >\n                          Editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeListContext, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeListContext.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  const editAljibe = (id) => {\n    const selectedAljibe = aljibeListContext.find((item) => item.id === id)\n\n    const selectedAljibeData = basicQuery.aljibe.find((alj) => {\n      return alj.id.toString() === selectedAljibe.aljibe.toString()\n    })\n    setPlates(selectedAljibeData.plate)\n\n    setAlgibe({\n      aljibe: selectedAljibe.aljibe,\n      aljibeCachimbaName: selectedAljibe.aljibeCachimbaName,\n      aljibeQuantityTurns: selectedAljibe.aljibeQuantityTurns,\n      aljibeM3: selectedAljibe.aljibeM3,\n      aljibePlate: selectedAljibe.aljibePlate,\n    })\n\n    deletealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeM3: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead></CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletealjibe(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAljibe(item.id)\n                        }}\n                      >\n                        editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceListContext, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceListContext.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  const editMachineryWorkForce = (id) => {\n    const selectedMachineryWorkForce = machineryWorkForceListContext.find((item) => item.id === id)\n    if (selectedMachineryWorkForce.machinerySubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setMachineryWorkForce({\n      machineryWorkForce: selectedMachineryWorkForce.machineryWorkForce,\n      machineryWorkForceObservation: selectedMachineryWorkForce.machineryWorkForceObservation,\n      machinerySubWorkFront: selectedMachineryWorkForce.machinerySubWorkFront,\n      machineryWorkFrontCharge: selectedMachineryWorkForce.machineryWorkFrontCharge,\n      machineryWorkFrontQuantity: selectedMachineryWorkForce.machineryWorkFrontQuantity,\n    })\n    deleteMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    setMachineryWorkForce({\n      ...machineryWorkForce,\n      machinerySubWorkFront: enableSubFrontWork\n        ? machineryWorkForce.machinerySubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteMachineryWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editMachineryWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryListContext, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryListContext.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  const editMachinery = (id) => {\n    const selectedMachinery = machineryListContext.find((item) => item.id === id)\n    setMachinery({\n      machinery: selectedMachinery.machinery,\n      machineryOfferedNumber: selectedMachinery.actions.machineryOfferedNumber,\n      machineryCertifiedNumber: selectedMachinery.actions.machineryCertifiedNumber,\n      machineryWorkNumber: selectedMachinery.actions.machineryWorkNumber,\n    })\n    deleteMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\nimport firma2 from 'src/assets/images/firma2.png'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 5\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const { photoList: photoListContext, storePhoto, removePhoto } = useRegisterDailyReportCompany()\n\n  const useFileState = (initialCount) => {\n    const [items, setItems] = useState(\n      Array.from({ length: initialCount }, () => ({ file: null, description: '', urlImg: '' })),\n    )\n\n    const setFileAndDescription = (index, file, description) => {\n      setItems((prevItems) => {\n        const newItems = [...prevItems]\n        const blob = file && file !== null ? file.slice(0, file.size, file.type) : undefined\n        const newFile = blob\n          ? new File([blob], `${uuidv4().split('-')[0]}.png`, { type: 'image/png' })\n          : undefined\n        const urlImg = newFile ? URL.createObjectURL(newFile) : undefined\n        newItems[index] = { file: newFile, description, urlImg }\n        return newItems\n      })\n    }\n\n    return [items, setFileAndDescription]\n  }\n\n  const [items, setFileAndDescription] = useFileState(5) // Adjust the number of files as needed\n\n  useEffect(() => {\n    if (!isViewMode) storePhoto(items)\n  }, [items])\n\n  const onChangeFile = (pos, e) => {\n    if (pos >= 0 && pos < items.length) {\n      const file = e.target.files[0]\n      const description = items[pos].description // Retain the current description\n      setFileAndDescription(pos, file, description)\n    }\n  }\n\n  const onChangeDescription = (pos, e) => {\n    if (pos >= 0 && pos < items.length) {\n      const file = items[pos].file // Retain the current file\n      const description = e.target.value\n      setFileAndDescription(pos, file, description)\n    }\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id={`photoDescription-${i}`}\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => onChangeDescription(i, e)}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id={`photo-${i}`}\n                aria-describedby=\"inputGroupFileAddon03\"\n                onChange={(e) => {\n                  onChangeFile(i, e)\n                }}\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n                accept=\"image/png, image/jpeg\"\n              />\n            </CCol>\n            <CCol>\n              <img src={items[i].urlImg} style={{ width: '70%' }} />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const { getData } = useGetCachedQueryData()\n  const reportsQuery = getData('reports')\n\n  const { totalDirectWorkForce: totalDirectWorkForcePrevious } =\n    reportsQuery !== undefined && reportsQuery.length > 0 ? reportsQuery[0] : 0\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directPreviusAccumulated: totalDirectWorkForcePrevious?.directCurrentAccumulated || 0,\n    })\n  }, [totalDirectWorkForcePrevious])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForcePrevious?.directCurrentAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForcePrevious?.directCurrentAccumulated || 0) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isViewMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n  const { getData } = useGetCachedQueryData()\n  const reportsQuery = getData('reports')\n\n  // let totalIndirectWorkForcePrevious = undefined\n\n  // if (reportsQuery !== undefined && reportsQuery.length > 0) {\n  //   totalIndirectWorkForcePrevious = reportsQuery[0].totalIndirectWorkForce\n  // } else {\n  //   totalIndirectWorkForcePrevious = 0\n  // }\n\n  const { totalIndirectWorkForce: totalIndirectWorkForcePrevious } =\n    reportsQuery !== undefined && reportsQuery.length > 0 ? reportsQuery[0] : 0\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectPreviusAccumulated: totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0,\n    })\n  }, [totalIndirectWorkForcePrevious])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                disabled={isViewMode}\n                // value={totalIndirectWorkForce.indirectPreviusAccumulated || '0'}\n                value={\n                  !isViewMode\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                // disabled={isViewMode}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateListContext, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateListContext.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  const editVehiclePlate = (id) => {\n    const selectedVehiclePlate = vehiclePlateListContext.find((item) => item.id === id)\n\n    const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n      return vehic.id.toString() === selectedVehiclePlate.vehicle.toString()\n    })\n    setPlates(selectedVehicle.plate)\n\n    setVehiclePlate({\n      vehicle: selectedVehiclePlate.vehicle,\n      vehicleEffectiveTime: selectedVehiclePlate.vehicleEffectiveTime,\n      vehicleCorrectiveMaintenance: selectedVehiclePlate.vehicleCorrectiveMaintenance,\n      vehiclePreventiveMaintenance: selectedVehiclePlate.vehiclePreventiveMaintenance,\n      vehicleOutOfService: selectedVehiclePlate.vehicleOutOfService,\n      vehicleWaiting: selectedVehiclePlate.vehicleWaiting,\n      vehicleNoOperator: selectedVehiclePlate.vehicleNoOperator,\n      vehicleInitialHorometer: selectedVehiclePlate.vehicleInitialHorometer,\n      vehicleFinalHorometer: selectedVehiclePlate.vehicleFinalHorometer,\n      vehiclePlate: selectedVehiclePlate.vehiclePlate,\n    })\n\n    deletevehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehiclePlate(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehiclePlate(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleListContext, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleListContext.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  const editVehicle = (id) => {\n    const selectedVehicle = vehicleListContext.find((item) => item.id === id)\n    setVehicle({\n      vehicle: selectedVehicle.vehicle,\n      vehicleOfferedNumber: selectedVehicle.actions.vehicleOfferedNumber,\n      vehicleCertifiedNumber: selectedVehicle.actions.vehicleCertifiedNumber,\n      vehicleWorkNumber: selectedVehicle.actions.vehicleWorkNumber,\n    })\n    deletevehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehicle(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehicle(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectCompanyTurnList,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n    graphList,\n    photoList,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      // axios.post('ASD', newTodo, {\n      //   headers: {\n      //     'Content-Type': 'multipart/form-data',\n      //   },\n      // }),\n\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    // console.log('post', {\n    //   projectId: projectLS.id,\n    //   contractId: contractLS.id,\n    //   company, // 1\n    //   indirectCompanyTurnList,\n    //   indirectWorkForceList, // 2\n    //   totalIndirectWorkForce, // 3\n    //   directWorkForceList, // 4\n    //   totalDirectWorkForce, // 5\n    //   directDotationWorkForceList, // 7\n    //   machineryList: machinList, // 9\n    //   machineryWorkForceList, // 10\n    //   equipmentList: equipList, // 11\n    //   equipmentWorkForceList, // 12\n    //   vehicleList: vehicList, // 13\n    //   vehiclePlateList,\n    //   activityList, // 15\n    //   comment: comment.comment === '' || comment?.comment === undefined ? undefined : comment, // 16\n    //   // 17 (graficos)\n    //   incident, // 18 //\n    //   asarcoMachineryList, // 9\n    //   equipmentPlateList, // 11\n    //   aljibeList, // 16\n    //   graphList,\n    //   photoList,\n    // })\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectCompanyTurnList,\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment: comment.comment === '' || comment?.comment === undefined ? undefined : comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n      graphList,\n      photoList,\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    indirectCompanyTurnList,\n    removeIndirectCompanyTurn,\n    storeIndirectCompanyTurn,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n    photoList,\n    storePhoto,\n    removePhoto,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    indirectCompanyTurnList,\n    removeIndirectCompanyTurn,\n    storeIndirectCompanyTurn,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n    photoList,\n    storePhoto,\n    removePhoto,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","currentLocation","useLocation","pathname","isViewMode","includes","isCreatingMode","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAdvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","deleteActivity","newData","filter","item","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","diciplines","dicipline","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","index","charge","find","work","selectedDicipline","toString","selectedActivity","editActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","pieChartElement","useRef","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","isInView","setIsInView","checkInView","_pieChartElement$curr","rect","current","getBoundingClientRect","top","window","innerHeight","bottom","convertAsarcoChart","document","addEventListener","removeEventListener","imagenPieChart","setImagenPieChart","pieChartData","setPieChartData","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","storeGraphs","selectedMachinery","mac","plate","deleteAsarcoMachinery","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","toPng","cacheBust","then","dataUrl","catch","err","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","selectedAsarcoMachinery","editAsarcoMachinery","ref","Chart","chartType","width","height","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","storeCompanyData","storeIndirectCompanyTurn","company","removeIndirectCompanyTurn","indirectCompanyTurnList","indirectCompanyTurnListContext","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","dailyReportIndirectPersonalShift","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","indirectPersonalList","setIndirectPersonalList","indirectPersonal","setIndirectPersonal","onChangeIndirectPersonal","deleteIndirectCompanyTurn","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","manager","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","indirect_staff_shift","indirect_staf","registerIndirectTurn","indirectPersonalInitialState","_selectedShift$name","_item$dailyReportIndi","_selectedJourney$name","selectedJourney","selectedShift","turn","editIndirectCompanyTurn","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","deletedirectDotationWorkForce","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","selectDirectDotationWorkForce","editDirectDotationWorkForce","DirectWorkForce","columnChartElement","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","imagenColumnChart","setImagenColumnChart","barGraphData","setBarGraphData","role","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","deleteDirectWorkForce","offered","worked","offeredNumber","workNumber","convertDotationChart","_columnChartElement$c","registerDirectWorkForce","directWorkForceInitialState","contractedNumber","certified","breakNumber","hh","personal","selectedDirectWorkForce","editDirectWorkForce","style","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","deleteEquipment","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","selectedEquipment","editEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","equip","selectedEquipmentPlate","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","deleteEquipmentWorkForce","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","selectedEquipmentWorkForce","editEquipmentWorkForce","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","deleteIncident","concat","registerIncident","incidentInitialState","selectedIncident","editIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","deleteIndirectWorkForce","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","selectedIndirectWorkForce","editIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","deletealjibe","aljibeTotalsCounter","_data$aljibeM","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","selectedAljibeData","editAljibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","deleteMachineryWorkForce","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","selectedMachineryWorkForce","editMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","deleteMachinery","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","editMachinery","PhotoRecord","photoList","photoListContext","storePhoto","removePhoto","items","setFileAndDescription","initialCount","setItems","Array","from","file","description","urlImg","prevItems","newItems","blob","slice","size","newFile","File","split","URL","createObjectURL","useFileState","_","i","onChangeDescription","pos","onChangeFile","files","accept","src","TotalDirectWorkForce","reportsQuery","totalDirectWorkForce","totalDirectWorkForcePrevious","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForcePrevious","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","deletevehiclePlate","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","selectedVehiclePlate","editVehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","deletevehicle","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","editVehicle","Loading","Lottie","animationData","loadingjson","loop","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","graphList","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","headers","onSuccess","onError","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}