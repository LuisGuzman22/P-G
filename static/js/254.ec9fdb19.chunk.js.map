{"version":3,"file":"static/js/254.ec9fdb19.chunk.js","mappings":"oHAEA,MAkBA,EAlB+BA,KAetB,CAAEC,YAdYC,IACnBC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUJ,GAAM,EAajCK,aAXAL,IACpBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,GAAM,EAUpBM,WAPjBA,IACVL,aAAaM,QAAQ,WAMkBC,YAJ3BR,GACZC,aAAaM,QAAQ,a,y1aCXhC,MAIA,EAJgBE,KACPC,EAAAA,EAAAA,KAACC,IAAM,CAACC,cAAeC,EAAaC,MAAM,EAAMC,MAAO,GAAIC,UAAU,YCgG9E,EAjFwBC,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,YAAEpB,IAAgBD,EAAAA,EAAAA,MAgBlB,KAAEE,EAAI,UAAEoB,IAAcC,EAAAA,EAAAA,GAAS,CACnCC,SAAU,CAAC,YACXC,QAASC,SAPWA,iBACFC,EAAAA,EAAMC,IAAI,6DACjB1B,KAAKA,KAMP2B,KAIX,OACEjB,EAAAA,EAAAA,KAAAkB,EAAAA,SAAA,CAAAC,UACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,GAAI,EAAGf,UAAU,6BAA4Ba,UACjDG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAJ,SAAA,EACJnB,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAAAL,UACTnB,EAAAA,EAAAA,KAAA,MAAAmB,SAAI,6BAENnB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAN,UACRG,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAAAP,SAAA,CACPT,IAAaV,EAAAA,EAAAA,KAACD,EAAO,KACpBW,IACI,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,SAASC,KAAI,CAACC,EAASC,KAAW,IAADC,EACrC,OACE/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CAAAb,UACHnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAAAD,UACHnB,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,CACZC,QAASA,KArCTL,KACtB,MAAMvC,EAAO,CACX6C,KAAMN,EAAQM,KACdC,GAAIP,EAAQO,IAEd/C,EAAYC,GACZkB,EAAS,YAAY,EAgCG6B,CAAeR,EAAQ,EAEzBvB,UAAU,OACVgC,MACEtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CACJjC,UAAU,kBACVgC,KACE,mEAEFE,OAAQ,KAGZC,OACEnB,EAAAA,EAAAA,MAACoB,EAAAA,EAAU,CAACpC,UAAU,6BAA4Ba,SAAA,EAChDnB,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CAAAb,UACHnB,EAAAA,EAAAA,KAAA,QAAMM,UAAU,gBAAea,SAAEU,EAAQM,UAE3CnC,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CAAAb,UACHG,EAAAA,EAAAA,MAAA,QAAMhB,UAAU,kBAAiBa,SAAA,CAAC,cACpBU,EAAQc,gBAK5BC,MAAO,CAAE,oBAAqB,WAC9BC,OAAQ,CAAC,CAAEC,MAAO,YAAaC,OAAc,OAAPlB,QAAO,IAAPA,GAAkB,QAAXE,EAAPF,EAASmB,iBAAS,IAAAjB,OAAX,EAAPA,EAAoBkB,SAAU,SA7B/DnB,EAgCJ,gBAOpB,C","sources":["hooks/useRegisterGeneralData.js","components/loading.jsx","pages/ProjectSelector.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useRegisterGeneralData = () => {\n  const saveProject = (data) => {\n    localStorage.setItem('project', JSON.stringify(data))\n  }\n  const saveContract = (data) => {\n    localStorage.setItem('contract', JSON.stringify(data))\n  }\n\n  const getProject = () => {\n    return localStorage.getItem('project')\n  }\n  const getContract = (data) => {\n    return localStorage.getItem('contract')\n  }\n\n  return { saveProject, saveContract, getProject, getContract }\n}\n\nexport default useRegisterGeneralData\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { React } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CWidgetStatsD,\n  CRow,\n  CCol,\n  CContainer,\n  CCard,\n  CCardBody,\n  CCardText,\n  CCardTitle,\n} from '@coreui/react'\nimport { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nimport CIcon from '@coreui/icons-react'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport Loading from 'src/components/loading'\n\nconst ProjectSelector = () => {\n  const navigate = useNavigate()\n  const { saveProject } = useRegisterGeneralData()\n\n  const onClickHandler = (project) => {\n    const data = {\n      name: project.name,\n      id: project.id,\n    }\n    saveProject(data)\n    navigate(`/contrato`)\n  }\n\n  const fetchProducts = async () => {\n    const res = await axios.get('https://42c56e69edd041d8afddac6929f0ea8b.api.mockbin.io/')\n    return res.data.data\n  }\n\n  const { data, isLoading } = useQuery({\n    queryKey: ['projects'],\n    queryFn: async () => {\n      return fetchProducts()\n    },\n  })\n\n  return (\n    <>\n      <CCol sm={6} className=\"project-selector-container\">\n        <CCard>\n          <CCardTitle>\n            <h3>Seleccion de Proyecto</h3>\n          </CCardTitle>\n          <CCardBody>\n            <CCardText>\n              {isLoading && <Loading />}\n              {!isLoading &&\n                data?.projects.map((project, index) => {\n                  return (\n                    <CRow key={index}>\n                      <CCol>\n                        <CWidgetStatsD\n                          onClick={() => {\n                            onClickHandler(project)\n                          }}\n                          className=\"mb-3\"\n                          icon={\n                            <CIcon\n                              className=\"my-4 text-white\"\n                              icon={\n                                'https://pgproject.cl/uploads/1705996608_a41c61e65ecf2a35c699.jpg'\n                              }\n                              height={52}\n                            />\n                          }\n                          chart={\n                            <CContainer className=\"project-selector-container\">\n                              <CRow>\n                                <span className=\"project-title\">{project.name}</span>\n                              </CRow>\n                              <CRow>\n                                <span className=\"project-manager\">\n                                  Encargado: {project.manager}\n                                </span>\n                              </CRow>\n                            </CContainer>\n                          }\n                          style={{ '--cui-card-cap-bg': '#1A4D55' }}\n                          values={[{ title: 'Contratos', value: project?.contracts?.length || 0 }]}\n                        />\n                      </CCol>\n                    </CRow>\n                  )\n                })}\n            </CCardText>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\n\nexport default ProjectSelector\n"],"names":["useRegisterGeneralData","saveProject","data","localStorage","setItem","JSON","stringify","saveContract","getProject","getItem","getContract","Loading","_jsx","Lottie","animationData","loadingjson","loop","width","className","ProjectSelector","navigate","useNavigate","isLoading","useQuery","queryKey","queryFn","async","axios","get","fetchProducts","_Fragment","children","CCol","sm","_jsxs","CCard","CCardTitle","CCardBody","CCardText","projects","map","project","index","_project$contracts","CRow","CWidgetStatsD","onClick","name","id","onClickHandler","icon","CIcon","height","chart","CContainer","manager","style","values","title","value","contracts","length"],"sourceRoot":""}