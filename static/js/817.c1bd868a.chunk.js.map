{"version":3,"file":"static/js/817.c1bd868a.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/DailyReportCollapse.jsx"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReport = () => {\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('/prueba', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialState) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({ ...totalIndirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalContractedNumber || ''}\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalCertifiedNumber || ''}\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalBreakNumber || ''}\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalWorkNumber || ''}\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalHHNumber || ''}\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={totalIndirectWorkForce.indirectCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={totalDirectWorkForce.directSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={totalDirectWorkForce.directSubtotalContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={totalDirectWorkForce.directSubtotalCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={totalDirectWorkForce.directSubtotalBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={totalDirectWorkForce.directSubtotalWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={totalDirectWorkForce.directSubtotalHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={totalDirectWorkForce.directCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkForce: undefined,\n    directDotationWorkForceObservation: undefined,\n    directWorkForceFront1: undefined,\n    directWorkForceFront2: undefined,\n    directWorkForceFront3: undefined,\n    directWorkForceFront4: undefined,\n    directWorkForceFront5: undefined,\n    directWorkForceFront6: undefined,\n    directWorkForceFront7: undefined,\n  }\n\n  const directDotationTotalsInitialState = {\n    directWorkForceFront1: 0,\n    directWorkForceFront2: 0,\n    directWorkForceFront3: 0,\n    directWorkForceFront4: 0,\n    directWorkForceFront5: 0,\n    directWorkForceFront6: 0,\n    directWorkForceFront7: 0,\n  }\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [directDotationTotals, setDirectDotationTotals] = useState(directDotationTotalsInitialState)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directWorkForce') {\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForce({ ...directDotationWorkForce, directWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directDotationWorkForce.directWorkForce,\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      actions: {\n        directWorkForceFront1: directDotationWorkForce.directWorkForceFront1,\n        directWorkForceFront2: directDotationWorkForce.directWorkForceFront2,\n        directWorkForceFront3: directDotationWorkForce.directWorkForceFront3,\n        directWorkForceFront4: directDotationWorkForce.directWorkForceFront4,\n        directWorkForceFront5: directDotationWorkForce.directWorkForceFront5,\n        directWorkForceFront6: directDotationWorkForce.directWorkForceFront6,\n        directWorkForceFront7: directDotationWorkForce.directWorkForceFront7,\n      },\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  useEffect(() => {\n    let directDotationTotalsCounter = {\n      directWorkForceFront1: 0,\n      directWorkForceFront2: 0,\n      directWorkForceFront3: 0,\n      directWorkForceFront4: 0,\n      directWorkForceFront5: 0,\n      directWorkForceFront6: 0,\n      directWorkForceFront7: 0,\n    }\n\n    for (let data of directDotationWorkForceListContext) {\n      directDotationTotalsCounter = {\n        directWorkForceFront1:\n          Number(directDotationTotalsCounter.directWorkForceFront1) +\n          Number(data.actions.directWorkForceFront1 ?? 0),\n        directWorkForceFront2:\n          Number(directDotationTotalsCounter.directWorkForceFront2) +\n          Number(data.actions.directWorkForceFront2 ?? 0),\n        directWorkForceFront3:\n          Number(directDotationTotalsCounter.directWorkForceFront3) +\n          Number(data.actions.directWorkForceFront3 ?? 0),\n        directWorkForceFront4:\n          Number(directDotationTotalsCounter.directWorkForceFront4) +\n          Number(data.actions.directWorkForceFront4 ?? 0),\n        directWorkForceFront5:\n          Number(directDotationTotalsCounter.directWorkForceFront5) +\n          Number(data.actions.directWorkForceFront5 ?? 0),\n        directWorkForceFront6:\n          Number(directDotationTotalsCounter.directWorkForceFront6) +\n          Number(data.actions.directWorkForceFront6 ?? 0),\n        directWorkForceFront7:\n          Number(directDotationTotalsCounter.directWorkForceFront7) +\n          Number(data.actions.directWorkForceFront7 ?? 0),\n      }\n    }\n    setDirectDotationTotals(directDotationTotalsCounter)\n  }, [directDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n        <option value=\"Maestro_Mayor_Mecánico\">Maestro Mayor Mecánico</option>\n        <option value=\"Maestro_Mayor_Piping\">Maestro Mayor Piping</option>\n        <option value=\"Maestro_Primera_Mecánico\">Maestro Primera Mecánico</option>\n        <option value=\"Soldador_HDPE\">Soldador HDPE</option>\n        <option value=\"Soldador_6G\">Soldador 6G</option>\n        <option value=\"Capataz_Eléctrico\">Capataz Eléctrico</option>\n        <option value=\"Maestro_Mayor_Eléctrico\">Maestro Mayor Eléctrico</option>\n        <option value=\"Maestro_Primera_Eléctrico\">Maestro Primera Eléctrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront1\"\n                value={directDotationWorkForce.directWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront2\"\n                value={directDotationWorkForce.directWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront3\"\n                value={directDotationWorkForce.directWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront4\"\n                value={directDotationWorkForce.directWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront5\"\n                value={directDotationWorkForce.directWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront6\"\n                value={directDotationWorkForce.directWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront7\"\n                value={directDotationWorkForce.directWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].directWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {directDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront1 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront2 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront3 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront4 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront5 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront6 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront7 ?? 0}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletedirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst DotationWorkForce = () => {\n  const initialState = {\n    workforceDotationPersonalFront1: undefined,\n    workforceDotationPersonalFront2: undefined,\n    workforceDotationPersonalFront3: undefined,\n    workforceDotationPersonalFront4: undefined,\n    workforceDotationPersonalFront5: undefined,\n    workforceDotationPersonalFront6: undefined,\n    workforceDotationPersonalFront7: undefined,\n    workforceDotationObservation: undefined,\n  }\n\n  const [workforceDotation, setWorkforceDotation] = useState(initialState)\n\n  const { storeDotationWorkfoce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setWorkforceDotation({\n        ...workforceDotation,\n        workforceDotationPersonalFront1: e.target.value,\n      })({ ...workforceDotation, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeDotationWorkfoce(workforceDotation)\n  }, [workforceDotation])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">N° de personal</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CFormTextarea\n        id=\"workforceDotationObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machineryWorkForce') {\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.machineryWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipmentWorkForce') {\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentWorkForce({ ...equipmentWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1</option>\n        <option value=\"equipo_2\">Equipo 2</option>\n        <option value=\"equipo_3\">Equipo 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.equipmentWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicleWorkForce') {\n      setVehicleWorkForce(initialState) // Clear the object\n      setVehicleWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicleWorkForce({ ...vehicleWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1</option>\n        <option value=\"vehiculo_2\">Vehículo 2</option>\n        <option value=\"vehiculo_3\">Vehículo 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.vehicleWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activityFrontWork: activity.activityFrontWork,\n      primaveraId: activity.primaveraId,\n      activityName: activity.activityName,\n      activityDiscipline: activity.activityDiscipline,\n      activityTotalAmount: activity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: activity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n      activityUnit: activity.activityUnit,\n      activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n      activityHoursSpendShift: activity.activityHoursSpendShift,\n      activityHoursAccumulated: activity.activityHoursAccumulated,\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        value={activity.activityFrontWork}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"frente_1\">Frente de trabajo 1</option>\n        <option value=\"frente_2\">Frente de trabajo 2</option>\n        <option value=\"frente_3\">Frente de trabajo 3</option>\n        <option value=\"frente_4\">Frente de trabajo 4</option>\n        <option value=\"frente_5\">Frente de trabajo 5</option>\n        <option value=\"frente_6\">Frente de trabajo 6</option>\n        <option value=\"frente_7\">Frente de trabajo 7</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.activityFrontWork}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const MAX_IMAGES = 10\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n  }\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    const asarcoMachineryInitialState = {\n      id: uuidv4(),\n      machinery: asarcoMachinery.machinery,\n      actions: {\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n      },\n    }\n    setAsarcoMachinery(initialState) // Clear the object\n    setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.actions.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.actions.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.actions.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.actions.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.actions.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.actions.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.actions.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.actions.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>\n                    {item.actions.asarcoMachineryUnscheduleMaintenance}\n                  </CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      actions: {\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      },\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      actions: {\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      },\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n  }\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registeraljibe = () => {\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      actions: {\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n      },\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeCachimbaName: 0,\n      aljibeQuantityTurns: 0,\n      aljibeM3: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeCachimbaName:\n          Number(aljibeTotalsCounter.aljibeCachimbaName) +\n          Number(data.actions.aljibeCachimbaName ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) +\n          Number(data.actions.aljibeQuantityTurns ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.actions.aljibeM3 ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"aljibe_1\">Aljibe 1 + Patente</option>\n        <option value=\"aljibe_2\">Aljibe 2 + Patente</option>\n        <option value=\"aljibe_3\">Aljibe 3 + Patente</option>\n        <option value=\"aljibe_4\">Aljibe 4 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.aljibe}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCachimbaName ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>18) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={23}>\n          <CAccordionHeader>23) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","company","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","CompanyReport","onChangeData","e","_jsxs","className","children","_jsx","CForm","CRow","CCol","sm","CFormInput","type","id","label","placeholder","text","onChange","CFormSelect","value","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","useState","setIndirectWorkForceList","indirectWorkForceListContext","target","useEffect","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","map","item","index","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","setTotalDirectWorkForce","DirectDotationWorkForce","directWorkForce","directDotationWorkForceObservation","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationTotals","setDirectDotationTotals","directDotationWorkForceListContext","directDotationTotalsCounter","data","_data$actions$directW","_data$actions$directW2","_data$actions$directW3","_data$actions$directW4","_data$actions$directW5","_data$actions$directW6","_data$actions$directW7","Number","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$actions$directW","_item$actions$directW2","_item$actions$directW3","_item$actions$directW4","_item$actions$directW5","_item$actions$directW6","_item$actions$directW7","deletedirectDotationWorkForce","CFormTextarea","DotationWorkForce","workforceDotationPersonalFront1","workforceDotationPersonalFront2","workforceDotationPersonalFront3","workforceDotationPersonalFront4","workforceDotationPersonalFront5","workforceDotationPersonalFront6","workforceDotationPersonalFront7","workforceDotationObservation","setWorkforceDotation","disabled","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","registerActivity","activityInitialState","deleteActivity","Comments","setComments","rows","Array","from","_","i","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","initialStatee","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","asarcoMachineryListContext","asarcoMachineryTotalsCounter","_data$actions$asarcoM","_data$actions$asarcoM2","_data$actions$asarcoM3","_data$actions$asarcoM4","_data$actions$asarcoM5","_data$actions$asarcoM6","_data$actions$asarcoM7","_data$actions$asarcoM8","registerAsarcoMachinery","asarcoMachineryInitialState","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","VehiclePlate","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","registerVehiclePlate","vehiclePlateInitialState","_item$actions$vehicle4","_item$actions$vehicle5","_item$actions$vehicle6","_item$actions$vehicle7","_item$actions$vehicle8","deletevehiclePlate","IndustrialWaterControl","_aljibeTotals$aljibeC","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","aljibeTotalsCounter","_data$actions$aljibeC","_data$actions$aljibeQ","_data$actions$aljibeM","registeraljibe","aljibeInitialState","_item$actions$aljibeC","_item$actions$aljibeQ","_item$actions$aljibeM","deletealjibe","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","_Fragment"],"sourceRoot":""}