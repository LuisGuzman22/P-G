{"version":3,"file":"static/js/520.17a50262.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/photo-record.jsx","components/DailyReportCollapse.jsx","hooks/useGetCachedQueryData.js"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comment: comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={contractLS.id}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              label=\"Clima\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"1\">Calor moderado</option>\n              <option value=\"2\">Calor intenso</option>\n              <option value=\"3\">Frío moderado</option>\n              <option value=\"4\">Frío intenso</option>\n              <option value=\"5\">Lluvia débil</option>\n              <option value=\"6\">Lluvia moderada</option>\n              <option value=\"7\">Lluvia intensa</option>\n              <option value=\"8\">Viento débil</option>\n              <option value=\"9\">Viento moderado</option>\n              <option value=\"10\">Viento intenso</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"14x14\">14x14</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        label=\"Cargo\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n          return (\n            <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n              {indirectPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce, indirectWorkForceList: indirectWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let indirectData of indirectWorkForceListContext) {\n      hours = hours + Number(indirectData.hh)\n      offered = offered + Number(indirectData.offeredNumber)\n      contracted = contracted + Number(indirectData.contractedNumber)\n      certified = certified + Number(indirectData.certified)\n      breaked = breaked + Number(indirectData.breakNumber)\n      workekd = workekd + Number(indirectData.workNumber)\n    }\n    setIndirectAccumulatedHours(hours)\n    setIndirectAccumulatedOffered(offered)\n    setIndirectAccumulatedContracted(contracted)\n    setIndirectAccumulatedCertified(certified)\n    setIndirectAccumulatedBreaked(breaked)\n    setIndirectAccumulatedWorked(workekd)\n    setIndirectAccumulatedActual(\n      Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n    )\n\n    const data = {\n      indirectSubtotalOfferedNumber: offered,\n      indirectSubtotalContractedNumber: contracted,\n      indirectSubtotalCertifiedNumber: certified,\n      indirectSubtotalBreakNumber: breaked,\n      indirectSubtotalWorkNumber: workekd,\n      indirectSubstotalHHNumber: hours,\n      indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n      indirectCurrentAccumulated:\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n    }\n\n    setTotalIndirectWorkForce(data)\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce, directWorkForceList: directWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let directData of directWorkForceListContext) {\n      hours = hours + Number(directData.hh)\n      offered = offered + Number(directData.offeredNumber)\n      contracted = contracted + Number(directData.contractedNumber)\n      certified = certified + Number(directData.certified)\n      breaked = breaked + Number(directData.breakNumber)\n      workekd = workekd + Number(directData.workNumber)\n    }\n    setDirectAccumulatedHours(hours)\n    setDirectAccumulatedOffered(offered)\n    setDirectAccumulatedContracted(contracted)\n    setDirectAccumulatedCertified(certified)\n    setDirectAccumulatedBreaked(breaked)\n    setDirectAccumulatedWorked(workekd)\n    setDirectAccumulatedActual(\n      Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    )\n    const data = {\n      directSubtotalOfferedNumber: offered,\n      directSubtotalContractedNumber: contracted,\n      directSubtotalCertifiedNumber: certified,\n      directSubtotalBreakNumber: breaked,\n      directSubtotalWorkNumber: workekd,\n      directSubstotalHHNumber: hours,\n      directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n      directCurrentAccumulated:\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    }\n\n    setTotalDirectWorkForce(data)\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFront\"\n        label=\"Frente de trabajo\"\n        value={directDotationWorkForce.directWorkFront || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={directDotationWorkForce.directSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFrontCharge\"\n        value={directDotationWorkForce.directWorkFrontCharge || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={directDotationWorkForce.directWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n\n    // if (e.target.id === 'machineryWorkForce') {\n    //   setMachineryWorkForce(initialState) // Clear the object\n    //   setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    // }\n    // if (validate(e.target.value)) {\n    //   setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    // }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n\n    // const machineryWorkForceInitialState = {\n    //   id: uuidv4(),\n    //   machineryWorkForce: machineryWorkForce.machineryWorkForce,\n    //   machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n    //   actions: {\n    //     machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n    //     machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n    //     machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n    //     machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n    //     machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n    //     machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n    //     machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n    //   },\n    // }\n    // setMachineryWorkForce(initialState) // Clear the object\n    // setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, maquinaria y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"machineryWorkForce\"\n        value={machineryWorkForce.machineryWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machinerySubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={machineryWorkForce.machinerySubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkFrontCharge\"\n        value={machineryWorkForce.machineryWorkFrontCharge || ''}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"machineryWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={machineryWorkForce.machineryWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value=\"0\">Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n\n      // setEquipmentWorkForce(initialState) // Clear the object\n      // setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  // useEffect(() => {\n  //   let equipmentWorkForceTotalsCounter = {\n  //     equipmentWorkForceFront1: 0,\n  //     equipmentWorkForceFront2: 0,\n  //     equipmentWorkForceFront3: 0,\n  //     equipmentWorkForceFront4: 0,\n  //     equipmentWorkForceFront5: 0,\n  //     equipmentWorkForceFront6: 0,\n  //     equipmentWorkForceFront7: 0,\n  //   }\n\n  //   for (let data of equipmentWorkForceListContext) {\n  //     equipmentWorkForceTotalsCounter = {\n  //       equipmentWorkForceFront1:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n  //         Number(data.equipmentWorkForceFront1 ?? 0),\n  //       equipmentWorkForceFront2:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n  //         Number(data.equipmentWorkForceFront2 ?? 0),\n  //       equipmentWorkForceFront3:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n  //         Number(data.equipmentWorkForceFront3 ?? 0),\n  //       equipmentWorkForceFront4:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n  //         Number(data.equipmentWorkForceFront4 ?? 0),\n  //       equipmentWorkForceFront5:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n  //         Number(data.equipmentWorkForceFront5 ?? 0),\n  //       equipmentWorkForceFront6:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n  //         Number(data.equipmentWorkForceFront6 ?? 0),\n  //       equipmentWorkForceFront7:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n  //         Number(data.equipmentWorkForceFront7 ?? 0),\n  //     }\n  //   }\n  //   setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  // }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={equipmentWorkForce.equipmentSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkFrontCharge\"\n        value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n        label=\"Equipo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"equipmentWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"equipmentWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                      return charge.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteEquipmentWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        label=\"Vehículo\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el frente de trabajo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        label=\"Frente de trabajo\"\n        value={activity.activityFrontWork ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                // disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                value={activity.activityDiscipline ?? '0'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={'0'}>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Graphs = () => {\n  const { asarcoMachineryList: asarcoMachineryListContext } = useRegisterDailyReportCompany()\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryListContext) {\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CChart\n        type=\"pie\"\n        data={{\n          labels: [\n            'Tiempo Efectivo (Hrs)',\n            'Mantención Programada (Hrs)',\n            'Demora Programada (Hrs)',\n            'Perdida Operacional (Hrs)',\n            'Mantención No Programada (Hrs)',\n            'Demora No Programada (Hrs)',\n            'Reservas (Hrs)',\n          ],\n          datasets: [\n            {\n              labels: [\n                'Tiempo Efectivo (Hrs)',\n                'Mantención Programada (Hrs)',\n                'Demora Programada (Hrs)',\n                'Perdida Operacional (Hrs)',\n                'Mantención No Programada (Hrs)',\n                'Demora No Programada (Hrs)',\n                'Reservas (Hrs)',\n              ],\n              hoverOffset: 4,\n              backgroundColor: [\n                '#41B883',\n                '#E46651',\n                '#00D8FF',\n                '#DD1B16',\n                '#F41203',\n                '#002312',\n                '#A12942',\n              ],\n              data: [\n                // 1, 2, 3, 4, 5, 6, 7,\n                ((effectiveTime / totals) * 100).toFixed(2),\n                ((scheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((scheduleDelay / totals) * 100).toFixed(2),\n                ((opperationalLoss / totals) * 100).toFixed(2),\n                ((unscheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((unscheduleDelay / totals) * 100).toFixed(2),\n                ((reserves / totals) * 100).toFixed(2),\n              ],\n            },\n          ],\n        }}\n        options={{\n          showAllTooltips: true,\n          interaction: {\n            intersect: false,\n            mode: 'index',\n          },\n          plugins: {\n            title: {\n              display: true,\n              // text: (ctx) => 'Tooltip position mode: ' + ctx.chart.options.plugins.tooltip.position,\n            },\n          },\n\n          //   plugins: {\n          //     legend: {\n          //       labels: {\n          //         color: getStyle('--cui-body-color'),\n          //       },\n          //     },\n          //   },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe ingresar un incidente o una no conformidad para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        value={incident.incident}\n        text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n        value={incident.nonConformity}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIncident()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIncident(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        value={directWorkForce.directWorkForce || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar la máquina y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Maquinaria\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"machineryPlate\"\n            value={asarcoMachinery.machineryPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"equipmentPlate\"\n            value={equipmentPlate.equipmentPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y la patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        label=\"Vehículo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"vehiclePlate\"\n            value={vehiclePlate.vehiclePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el aljibe y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Aljibe\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"aljibePlate\"\n            value={aljibe.aljibePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeOfferedNumber\"\n                value={aljibe.aljibeOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCertifiedNumber\"\n                value={aljibe.aljibeCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeWorkNumber\"\n                value={aljibe.aljibeWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Registro fotográfico diario</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <PhotoRecord />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","incident","removeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","company","comments","mutation","useMutation","mutationFn","newTodo","axios","post","equipList","equip","eq","equipment","actions","stringify","push","machinList","machin","ma","machinery","vehicList","vehic","ve","vehicle","registerData","async","mutate","projectId","id","contractId","comment","CompanyReport","onChangeData","e","_jsx","className","children","_jsxs","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","disabled","value","name","CFormSelect","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","getData","useGetCachedQueryData","basicQuery","setIndirectWorkForce","useState","setIndirectWorkForceList","error","setError","indirectWorkForceListContext","target","useEffect","CToast","autohide","visible","color","onClose","CToastBody","indirectPersonal","map","indirectPersonalCached","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","item","index","charge","find","personal","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","hours","offered","contracted","breaked","workekd","indirectData","Number","data","indirectSubstotalHHNumber","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","directWorkForceListContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","directData","directSubstotalHHNumber","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","directDotationWorkForceListContext","selectedWorkFront","workFront","toString","hasSubFront","workfrontCached","_Fragment","directPersonal","directPersonalCached","CFormTextarea","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","machineryCached","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","_item$machinerySubWor","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","vehicles","vehicleCached","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","Activities","_activity$activityFro","_activity$activityDis","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","realHpurs","prevHours","previousHh","calc","toFixed","workFrontCached","registerActivity","activityInitialState","work","deleteActivity","Comments","setComment","rows","Graphs","asarcoMachineryListContext","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","asarcoData","asarcoMachineryEffectiveTime","asarcoMachineryScheduleMaintenance","asarcoMachineryScheduleDelay","asarcoMachineryOpperationalLoss","asarcoMachineryUnscheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","CChart","labels","datasets","hoverOffset","backgroundColor","options","showAllTooltips","interaction","intersect","mode","plugins","title","display","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","nonConformity","setIncident","incidentList","setIncidentList","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","asarcoMachineryHorometer","machineryPlate","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","selectedMachinery","mac","plate","asarcoMachineryTotalsCounter","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","selectedEquipment","VehiclePlate","_vehiclePlate$vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","selectedVehicle","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","PhotoRecord","Array","from","_","i","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","queryClient","useQueryClient","key","getQueryData"],"sourceRoot":""}