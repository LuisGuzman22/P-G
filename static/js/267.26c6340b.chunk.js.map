{"version":3,"file":"static/js/267.26c6340b.chunk.js","mappings":"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","sources":["components/Pdf.jsx","components/ModalSendDailyReport.jsx","components/DailyReportEditCollapse.jsx","pages/DailyReportEditPage.jsx","../node_modules/@coreui/react/src/components/card/CCardText.tsx","../node_modules/@coreui/react/src/components/modal/CModalContent.tsx","../node_modules/@coreui/react/src/components/modal/CModalDialog.tsx","../node_modules/@coreui/react/src/components/modal/CModal.tsx","../node_modules/@coreui/react/src/components/modal/CModalBody.tsx","../node_modules/@coreui/react/src/components/modal/CModalFooter.tsx","../node_modules/@coreui/react/src/components/close-button/CCloseButton.tsx","../node_modules/@coreui/react/src/components/modal/CModalHeader.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react'\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { Html } from 'react-pdf-html'\nimport ReactDOMServer from 'react-dom/server'\n// import ChartJsImage from 'chartjs-to-image'\n\n/**\n * \n * @returns         <View>\n          <Image\n            style={styles.image}\n            src=\"https://images.pexels.com/photos/20066389/pexels-photo-20066389/free-photo-of-a-bubble-is-floating-in-the-sky-over-trees.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n          />\n        </View>\n */\nconst Pdf = () => {\n  const element = (\n    <html>\n      <body>\n        <style>\n          {`\n        .heading4 {\n          color: white;\n        }\n        pre {\n          background-color: #eee;\n          padding: 10px;\n        }\n        table, th, td {\n            border: 1px solid black;\n        }\n        td {\n          font-size: 14;\n          padding: 5px;\n          text-align: center;\n        }\n        .td-workers-label {\n          background-color: #028080;\n          color: white;\n        }\n        .td-machinery-label {\n          background-color: #c2f0c8;\n        }\n        .td-workers-name {\n          text-align: left;\n        }\n        .td-green-label {\n          background-color: #3c7d23;\n          color: white;\n        }\n        .td-total-label{\n          background-color: #ffcc66;\n        }\n        .td-label {\n          background-color: #006666;\n          color: white;\n        }`}\n        </style>\n\n        <table border={1}>\n          <tbody>\n            <tr>\n              <td className=\"td-label\" style={{ textAlign: 'center' }}>\n                COMENTARIOS Y ALERTAS EN GENERAL\n              </td>\n            </tr>\n            <tr></tr>\n          </tbody>\n        </table>\n      </body>\n    </html>\n  )\n\n  const html = ReactDOMServer.renderToStaticMarkup(element)\n\n  return (\n    <Document>\n      <Page size=\"A1\" orientation=\"landscape\">\n        <Html>{html}</Html>\n      </Page>\n    </Document>\n  )\n}\n\nexport default Pdf\n","/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CRow,\n  CCol,\n  CFormTextarea,\n} from '@coreui/react'\nconst ModalSendDailyReport = (props) => {\n  const [rejectCommentary, setRejectCommentary] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleClickReject = () => {\n    setError(false)\n    if (rejectCommentary !== '') {\n      props.sendDataToParent(false)\n    } else {\n      setError(true)\n    }\n  }\n\n  const handleClickApprove = () => {\n    props.sendDataToParent(false)\n  }\n\n  const onChangeData = (e) => {\n    setRejectCommentary(e.target.value)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => props.sendDataToParent(false)}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        {/* <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Categorías</CModalTitle> */}\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={12}>\n              <CFormTextarea\n                id=\"rejectCommentary\"\n                label=\"Comentario\"\n                value={rejectCommentary || ''}\n                rows={3}\n                invalid={error}\n                text={error && 'Debe agregar un comentario para rechazar el informe diario.'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              ></CFormTextarea>\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => handleClickReject()}>\n          Rechazar\n        </CButton>\n        <CButton color=\"primary\" onClick={() => handleClickApprove()}>\n          Aprobar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalSendDailyReport\n","import React, { useEffect, useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport ModalSendDailyReport from './ModalSendDailyReport'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport Pdf from './Pdf'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\n// )\nconst DailyReportCollapse = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n  const navigate = useNavigate()\n\n  const [visibleSendDailyReportModal, setVisibleSendDailyReportModal] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    totalIndirectWorkForce,\n    directWorkForceList,\n    totalDirectWorkForce,\n    asarcoMachineryList,\n    machineryList,\n    equipmentList,\n    equipmentPlateList,\n    vehicleList,\n    vehiclePlateList,\n    activityList,\n    aljibeList,\n    comment,\n    incident,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n  } = useRegisterDailyReportCompany()\n  console.log('company', company)\n\n  const [isLoading, setIsloading] = useState(false)\n  const [blobData, setBlobData] = useState()\n  const [url, setUrl] = useState()\n\n  // useEffect(() => {\n  //   if (!company.dailyReportDate) window.location.reload()\n  // }, [company])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const { registerData } = useRegisterDailyReport()\n\n  const registerDailyReport = () => {\n    if (isEditMode) {\n      setVisibleSendDailyReportModal(!visibleSendDailyReportModal)\n    } else {\n      registerData()\n    }\n  }\n\n  return (\n    <div className=\"dailyReport\">\n      {visibleSendDailyReportModal && (\n        <ModalSendDailyReport\n          visible={true}\n          sendDataToParent={async (data) => {\n            setVisibleSendDailyReportModal(data)\n          }}\n        />\n      )}\n      <div>\n        asd\n        <PDFDownloadLink document={<Pdf />} fileName=\"Reporte 1.pdf\">\n          {({ blob, url, loading, error }) => {\n            console.log('blob', blob)\n            console.log('url', url)\n            console.log('loading', loading)\n            console.log('error', error)\n            setIsloading(loading)\n            setBlobData(blob)\n            setUrl(url)\n            return loading ? 'Loading document...' : 'Descargar PDF!'\n          }}\n        </PDFDownloadLink>\n      </div>\n      {!isLoading && url && blobData ? (\n        <>\n          {' '}\n          <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n            <CAccordionItem itemKey={1}>\n              <CAccordionHeader>1) Empresa</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <CompanyReport />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={2}>\n              <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={3}>\n              <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalIndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={4}>\n              <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={5}>\n              <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalDirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={6}>\n              <CAccordionHeader>\n                6) Dotación por frente de trabajo personal directo\n              </CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectDotationWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={7}>\n              <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Machinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={8}>\n              <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <MachineryWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={9}>\n              <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <AsarcoMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={10}>\n              <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={11}>\n              <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentPlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={12}>\n              <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={13}>\n              <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Vehicle />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={14}>\n              <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <VehiclePlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={15}>\n              <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Activities />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={16}>\n              <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndustrialWaterControl />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={17}>\n              <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Comments />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={19}>\n              <CAccordionHeader>19) Registro fotográfico diario</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <PhotoRecord />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={20}>\n              <CAccordionHeader>20) Graficos del día</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Graphs />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={21}>\n              <CAccordionHeader>21) Incidentes, lesiones o eventos</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Incidents />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={22}>\n              <CAccordionHeader>22) Firmas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <></>\n              </CAccordionBody>\n            </CAccordionItem>\n          </CAccordion>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              // registerData()\n              registerDailyReport()\n            }}\n          >\n            Registrar informe diario\n          </CButton>\n        </>\n      ) : (\n        <>cargando</>\n      )}\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import React, { useEffect } from 'react'\nimport DailyReportEditCollapse from 'src/components/DailyReportEditCollapse'\nimport { CCard, CCardBody, CCardText } from '@coreui/react'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useNavigate } from 'react-router-dom'\n\nconst DailyReportPage = () => {\n  let navigate = useNavigate()\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  useEffect(() => {\n    if (!basicQuery) {\n      navigate(`/dashboard`)\n    }\n  }, [basicQuery])\n\n  return (\n    <div className=\"daily-report\">\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <DailyReportEditCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default DailyReportPage\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardTextProps extends HTMLAttributes<HTMLParagraphElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CCardText: PolymorphicRefForwardingComponent<'p', CCardTextProps> = forwardRef<\n  HTMLParagraphElement,\n  CCardTextProps\n>(({ children, as: Component = 'p', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-text', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardText.displayName = 'CCardText'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalContent = forwardRef<HTMLDivElement, CModalContentProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-content', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalContent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalContent.displayName = 'CModalContent'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalDialogProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Does the modal dialog itself scroll, or does the whole dialog scroll within the window.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n}\n\nexport const CModalDialog = forwardRef<HTMLDivElement, CModalDialogProps>(\n  ({ children, alignment, className, fullscreen, scrollable, size, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'modal-dialog',\n          {\n            'modal-dialog-centered': alignment === 'center',\n            [typeof fullscreen === 'boolean'\n              ? 'modal-fullscreen'\n              : `modal-fullscreen-${fullscreen}-down`]: fullscreen,\n            'modal-dialog-scrollable': scrollable,\n            [`modal-${size}`]: size,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n}\n\nCModalDialog.displayName = 'CModalDialog'\n","import React, {\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { CBackdrop } from '../backdrop'\nimport { CConditionalPortal } from '../conditional-portal'\nimport { CModalContent } from './CModalContent'\nimport { CModalDialog } from './CModalDialog'\n\nimport { useForkedRef } from '../../hooks'\n\nexport interface CModalProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * Apply a backdrop on body while modal is open.\n   */\n  backdrop?: boolean | 'static'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * @ignore\n   */\n  duration?: number\n  /**\n   * Puts the focus on the modal when shown.\n   *\n   * @since v4.10.0\n   */\n  focus?: boolean\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose?: () => void\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClosePrevented?: () => void\n  /**\n   * Callback fired when the modal is shown, its backdrop is static and a click outside the modal or an escape key press is performed with the keyboard option set to false.\n   */\n  onShow?: () => void\n  /**\n   * Generates modal using createPortal.\n   */\n  portal?: boolean\n  /**\n   * Create a scrollable modal that allows scrolling the modal body.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n  /**\n   * Remove animation to create modal that simply appear rather than fade in to view.\n   */\n  transition?: boolean\n  /**\n   * By default the component is unmounted after close animation, if you want to keep the component mounted set this property to false.\n   */\n  unmountOnClose?: boolean\n  /**\n   * Toggle the visibility of modal component.\n   */\n  visible?: boolean\n}\n\ninterface ModalContextProps {\n  visible?: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean | undefined>>\n}\n\nexport const CModalContext = createContext({} as ModalContextProps)\n\nexport const CModal = forwardRef<HTMLDivElement, CModalProps>(\n  (\n    {\n      children,\n      alignment,\n      backdrop = true,\n      className,\n      duration = 150,\n      focus = true,\n      fullscreen,\n      keyboard = true,\n      onClose,\n      onClosePrevented,\n      onShow,\n      portal = true,\n      scrollable,\n      size,\n      transition = true,\n      unmountOnClose = true,\n      visible,\n      ...rest\n    },\n    ref,\n  ) => {\n    const activeElementRef = useRef<HTMLElement | null>(null)\n    const modalRef = useRef<HTMLDivElement>(null)\n    const modalContentRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, modalRef)\n\n    const [_visible, setVisible] = useState(visible)\n    const [staticBackdrop, setStaticBackdrop] = useState(false)\n\n    const contextValues = {\n      visible: _visible,\n      setVisible,\n    }\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      if (_visible) {\n        activeElementRef.current = document.activeElement as HTMLElement | null\n        document.addEventListener('mouseup', handleClickOutside)\n        document.addEventListener('keydown', handleKeyDown)\n      } else {\n        activeElementRef.current?.focus()\n      }\n\n      return () => {\n        document.removeEventListener('mouseup', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }, [_visible])\n\n    const handleDismiss = () => {\n      if (backdrop === 'static') {\n        return setStaticBackdrop(true)\n      }\n\n      setVisible(false)\n\n      return onClose && onClose()\n    }\n\n    useLayoutEffect(() => {\n      onClosePrevented && onClosePrevented()\n      setTimeout(() => setStaticBackdrop(false), duration)\n    }, [staticBackdrop])\n\n    // Set focus to modal after open\n    useLayoutEffect(() => {\n      if (_visible) {\n        document.body.classList.add('modal-open')\n\n        if (backdrop) {\n          document.body.style.overflow = 'hidden'\n          document.body.style.paddingRight = '0px'\n        }\n\n        setTimeout(\n          () => {\n            focus && modalRef.current?.focus()\n          },\n          transition ? duration : 0,\n        )\n      } else {\n        document.body.classList.remove('modal-open')\n\n        if (backdrop) {\n          document.body.style.removeProperty('overflow')\n          document.body.style.removeProperty('padding-right')\n        }\n      }\n\n      return () => {\n        document.body.classList.remove('modal-open')\n        if (backdrop) {\n          document.body.style.removeProperty('overflow')\n          document.body.style.removeProperty('padding-right')\n        }\n      }\n    }, [_visible])\n\n    const handleClickOutside = (event: Event) => {\n      if (modalRef.current && modalRef.current == event.target) {\n        handleDismiss()\n      }\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && keyboard) {\n        handleDismiss()\n      }\n    }\n\n    return (\n      <>\n        <Transition\n          in={_visible}\n          mountOnEnter\n          nodeRef={modalRef}\n          onEnter={onShow}\n          onExit={onClose}\n          unmountOnExit={unmountOnClose}\n          timeout={transition ? duration : 0}\n        >\n          {(state) => (\n            <CConditionalPortal portal={portal}>\n              <CModalContext.Provider value={contextValues}>\n                <div\n                  className={classNames(\n                    'modal',\n                    {\n                      'modal-static': staticBackdrop,\n                      fade: transition,\n                      show: state === 'entered',\n                    },\n                    className,\n                  )}\n                  tabIndex={-1}\n                  {...(_visible\n                    ? { 'aria-modal': true, role: 'dialog' }\n                    : { 'aria-hidden': 'true' })}\n                  style={{\n                    ...(state !== 'exited' && { display: 'block' }),\n                  }}\n                  {...rest}\n                  ref={forkedRef}\n                >\n                  <CModalDialog\n                    alignment={alignment}\n                    fullscreen={fullscreen}\n                    scrollable={scrollable}\n                    size={size}\n                  >\n                    <CModalContent ref={modalContentRef}>{children}</CModalContent>\n                  </CModalDialog>\n                </div>\n              </CModalContext.Provider>\n            </CConditionalPortal>\n          )}\n        </Transition>\n        {backdrop && (\n          <CConditionalPortal portal={portal}>\n            <CBackdrop visible={_visible} />\n          </CConditionalPortal>\n        )}\n      </>\n    )\n  },\n)\n\nCModal.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'static'>(['static'])]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  duration: PropTypes.number,\n  focus: PropTypes.bool,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  keyboard: PropTypes.bool,\n  onClose: PropTypes.func,\n  onClosePrevented: PropTypes.func,\n  onShow: PropTypes.func,\n  portal: PropTypes.bool,\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n  transition: PropTypes.bool,\n  unmountOnClose: PropTypes.bool,\n  visible: PropTypes.bool,\n}\n\nCModal.displayName = 'CModal'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalBody = forwardRef<HTMLDivElement, CModalBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-body', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalBody.displayName = 'CModalBody'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalFooter = forwardRef<HTMLDivElement, CModalFooterProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-footer', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalFooter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalFooter.displayName = 'CModalFooter'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCloseButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Invert the default color.\n   */\n  dark?: boolean\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Change the default color to white.\n   *\n   * @deprecated 5.0.0\n   */\n  white?: boolean\n}\n\nexport const CCloseButton = forwardRef<HTMLButtonElement, CCloseButtonProps>(\n  ({ className, dark, disabled, white, ...rest }, ref) => {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(\n          'btn',\n          'btn-close',\n          {\n            'btn-close-white': white,\n          },\n          disabled,\n          className,\n        )}\n        aria-label=\"Close\"\n        disabled={disabled}\n        {...(dark && { 'data-coreui-theme': 'dark' })}\n        {...rest}\n        ref={ref}\n      />\n    )\n  },\n)\n\nCCloseButton.propTypes = {\n  className: PropTypes.string,\n  dark: PropTypes.bool,\n  disabled: PropTypes.bool,\n  white: PropTypes.bool,\n}\n\nCCloseButton.displayName = 'CCloseButton'\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCloseButton } from '../close-button/CCloseButton'\nimport { CModalContext } from './CModal'\n\nexport interface CModalHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Add a close button component to the header.\n   */\n  closeButton?: boolean\n}\n\nexport const CModalHeader = forwardRef<HTMLDivElement, CModalHeaderProps>(\n  ({ children, className, closeButton = true, ...rest }, ref) => {\n    const { setVisible } = useContext(CModalContext)\n\n    return (\n      <div className={classNames('modal-header', className)} {...rest} ref={ref}>\n        {children}\n        {closeButton && <CCloseButton onClick={() => setVisible(false)} />}\n      </div>\n    )\n  },\n)\n\nCModalHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n}\n\nCModalHeader.displayName = 'CModalHeader'\n"],"names":["Pdf","element","_jsx","children","_jsxs","border","className","style","textAlign","html","ReactDOMServer","Document","Page","size","orientation","Html","props","rejectCommentary","setRejectCommentary","useState","error","setError","CModal","scrollable","visible","onClose","sendDataToParent","CModalHeader","CModalBody","CForm","CRow","CCol","sm","CFormTextarea","id","label","value","rows","invalid","text","onChange","e","target","onChangeData","CModalFooter","CButton","color","onClick","DailyReportCollapse","isEditMode","useLocation","pathname","includes","visibleSendDailyReportModal","setVisibleSendDailyReportModal","useNavigate","company","indirectWorkForceList","totalIndirectWorkForce","directWorkForceList","totalDirectWorkForce","asarcoMachineryList","machineryList","equipmentList","equipmentPlateList","vehicleList","vehiclePlateList","activityList","aljibeList","comment","incident","directDotationWorkForceList","machineryWorkForceList","equipmentWorkForceList","useRegisterDailyReportCompany","console","log","isLoading","setIsloading","blobData","setBlobData","url","setUrl","getData","useGetCachedQueryData","registerData","useRegisterDailyReport","ModalSendDailyReport","async","data","PDFDownloadLink","document","fileName","_ref","blob","loading","_Fragment","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","CompanyReport","IndirectWorkForce","TotalIndirectWorkForce","DirectWorkForce","TotalDirectWorkForce","DirectDotationWorkForce","Machinery","MachineryWorkForce","AsarcoMachinery","EquipmentMachinery","EquipmentPlate","EquipmentWorkForce","Vehicle","VehiclePlate","Activities","IndustrialWaterControl","Comments","PhotoRecord","Graphs","Incidents","DailyReportPage","navigate","basicQuery","useEffect","CCard","CCardBody","CCardText","DailyReportEditCollapse","forwardRef","_a","ref","_b","as","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","CModalContent","CModalDialog","alignment","fullscreen","concat","CModalContext","createContext","backdrop","_c","duration","_d","focus","_e","keyboard","onClosePrevented","onShow","_f","portal","_g","transition","_h","unmountOnClose","activeElementRef","useRef","modalRef","modalContentRef","forkedRef","useForkedRef","_j","_visible","setVisible","_k","staticBackdrop","setStaticBackdrop","contextValues","current","activeElement","addEventListener","handleClickOutside","handleKeyDown","removeEventListener","handleDismiss","useLayoutEffect","setTimeout","body","classList","add","overflow","paddingRight","remove","removeProperty","event","key","Transition","in","mountOnEnter","nodeRef","onEnter","onExit","unmountOnExit","timeout","state","CConditionalPortal","Provider","fade","show","tabIndex","role","display","CBackdrop","CCloseButton","dark","disabled","white","type","closeButton","useContext"],"sourceRoot":""}