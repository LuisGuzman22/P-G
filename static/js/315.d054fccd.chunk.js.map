{"version":3,"file":"static/js/315.d054fccd.chunk.js","mappings":"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","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityListContext, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityListContext.filter((item) => item.id !== id)\n    setActivityList(newData)\n    removeActivity(id)\n  }\n\n  const editActivity = (id) => {\n    const selectedActivity = activityListContext.find((item) => item.id === id)\n    setActivity({\n      activityFrontWork: selectedActivity.activityFrontWork,\n      primaveraId: selectedActivity.primaveraId,\n      activityName: selectedActivity.activityName,\n      activityDiscipline: selectedActivity.activityDiscipline,\n      activityTotalAmount: selectedActivity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: selectedActivity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: selectedActivity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: selectedActivity.activityAccumulatedAcvancePercent,\n      activityUnit: selectedActivity.activityUnit,\n      activityHoursSpendPrevius: selectedActivity.activityHoursSpendPrevius,\n      activityHoursSpendShift: selectedActivity.activityHoursSpendShift,\n      activityHoursAccumulated: selectedActivity.activityHoursAccumulated,\n    })\n\n    deleteActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    <option value=\"Obras_civiles\">Obras Civiles</option>\n                    <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAcvancePercent\"\n                    value={activity.activityAccumulatedAcvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteActivity(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editActivity(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useRef, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const pieChartElement = useRef(null)\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const [isInView, setIsInView] = useState(false)\n\n  const checkInView = () => {\n    const rect = pieChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  useEffect(() => {\n    document.addEventListener('scroll', checkInView)\n    return () => {\n      document.removeEventListener('scroll', checkInView)\n    }\n  }, [])\n\n  const [imagenPieChart, setImagenPieChart] = useState()\n  const [pieChartData, setPieChartData] = useState([\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', 0],\n    ['Mantención Programada (Hrs)', 0],\n    ['Demora Programada (Hrs)', 0],\n    ['Perdida Operacional (Hrs)', 0],\n    ['Mantención No Programada (Hrs)', 0],\n    ['Demora No Programada (Hrs)', 0],\n    ['Reservas (Hrs)', 0],\n  ])\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryListContext, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryListContext.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  const editAsarcoMachinery = (id) => {\n    const selectedAsarcoMachinery = asarcoMachineryListContext.find((item) => item.id === id)\n\n    const selectedMachinery = basicQuery.machinery.find((mac) => {\n      return mac.id.toString() === selectedAsarcoMachinery.machinery.toString()\n    })\n    setPlates(selectedMachinery.plate)\n\n    setAsarcoMachinery({\n      machinery: selectedAsarcoMachinery.machinery,\n      asarcoMachineryEffectiveTime: selectedAsarcoMachinery.asarcoMachineryEffectiveTime,\n      asarcoMachineryUnscheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n      asarcoMachineryScheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryScheduleMaintenance,\n      asarcoMachineryUnscheduleDelay: selectedAsarcoMachinery.asarcoMachineryUnscheduleDelay,\n      asarcoMachineryReserves: selectedAsarcoMachinery.asarcoMachineryReserves,\n      asarcoMachineryHorometer: selectedAsarcoMachinery.asarcoMachineryHorometer,\n      asarcoMachineryOpperationalLoss: selectedAsarcoMachinery.asarcoMachineryOpperationalLoss,\n      asarcoMachineryScheduleDelay: selectedAsarcoMachinery.asarcoMachineryScheduleDelay,\n      machineryPlate: selectedAsarcoMachinery.machineryPlate,\n    })\n    deleteAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  const convertAsarcoChart = () => {\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenPieChart(dataUrl)\n        }\n        // storeGraphs({ asarcoChart: dataUrl })\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  useEffect(() => {\n    setPieChartData([\n      ['Task', 'Hours per Day'],\n      ['Tiempo Efectivo (Hrs)', asarcoMachineryTotals.asarcoMachineryEffectiveTime],\n      ['Mantención Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleMaintenance],\n      ['Demora Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleDelay],\n      ['Perdida Operacional (Hrs)', asarcoMachineryTotals.asarcoMachineryOpperationalLoss],\n      [\n        'Mantención No Programada (Hrs)',\n        asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance,\n      ],\n      ['Demora No Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryUnscheduleDelay],\n      ['Reservas (Hrs)', asarcoMachineryTotals.asarcoMachineryReserves],\n    ])\n  }, [asarcoMachineryTotals])\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [pieChartData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'asarcoChart', value: imagenPieChart })\n  }, [imagenPieChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteAsarcoMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAsarcoMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n      <div ref={pieChartElement}>\n        <Chart chartType=\"PieChart\" data={pieChartData} width={'100%'} height={'300px'} />\n      </div>\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isViewMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        disabled={isViewMode}\n        value={isViewMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={isViewMode}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={isViewMode}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  useEffect(() => {\n    setDirectDotationWorkForce({\n      ...directDotationWorkForce,\n      directSubWorkFront: enableSubFrontWork\n        ? directDotationWorkForce.directSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceListContext,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceListContext.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  const editDirectDotationWorkForce = (id) => {\n    const selectDirectDotationWorkForce = directDotationWorkForceListContext.find(\n      (item) => item.id === id,\n    )\n    if (selectDirectDotationWorkForce.directSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setDirectDotationWorkForce({\n      directWorkFront: selectDirectDotationWorkForce.directWorkFront,\n      directDotationWorkForceObservation:\n        selectDirectDotationWorkForce.directDotationWorkForceObservation,\n      directSubWorkFront: selectDirectDotationWorkForce.directSubWorkFront,\n      directWorkFrontCharge: selectDirectDotationWorkForce.directWorkFrontCharge,\n      directWorkFrontQuantity: selectDirectDotationWorkForce.directWorkFrontQuantity,\n    })\n    deletedirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deletedirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editDirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const columnChartElement = useRef(null)\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [isInView, setIsInView] = useState(false)\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [barGraphData, setBarGraphData] = useState([\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', 0, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', 0, 'silver'], // English color name\n  ])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceListContext, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceListContext.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  const editDirectWorkForce = (id) => {\n    const selectedDirectWorkForce = directWorkForceListContext.find((item) => item.id === id)\n\n    setDirectWorkForce({\n      directWorkForce: selectedDirectWorkForce.directWorkForce,\n      directWorkForceOfferedNumber: selectedDirectWorkForce.offeredNumber,\n      directWorkForceContractedNumber: selectedDirectWorkForce.contractedNumber,\n      directWorkForceCertifiedNumber: selectedDirectWorkForce.certified,\n      directWorkForceBreakNumber: selectedDirectWorkForce.breakNumber,\n      directWorkForceWorkNumber: selectedDirectWorkForce.workNumber,\n      directWorkForceHHNumber: selectedDirectWorkForce.hh,\n    })\n    deleteDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  useEffect(() => {\n    let offered = 0\n    let worked = 0\n    directWorkForceListContext.map((data) => {\n      offered = offered + Number(data.offeredNumber)\n      worked = worked + Number(data.workNumber)\n    })\n    setTotalPlanedDotation(offered)\n    setTotalWorkDotation(worked)\n    // convertDotationChart()\n  }, [directWorkForceListContext])\n\n  const convertDotationChart = () => {\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenColumnChart(dataUrl)\n        }\n        // storeGraphs({ dotationChart: dataUrl })\n      })\n      .catch((err) => {})\n  }\n\n  useEffect(() => {\n    setBarGraphData([\n      ['Dotación', 'Dotación', { role: 'style' }],\n      ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n      ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n    ])\n  }, [totalPlanedDotation, totalWorkDotation])\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [barGraphData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'dotationChart', value: imagenColumnChart })\n  }, [imagenColumnChart])\n\n  const checkInView = () => {\n    const rect = columnChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {!isViewMode && (\n        <CButton\n          className=\"btn-project-action\"\n          onClick={() => {\n            registerDirectWorkForce()\n          }}\n        >\n          Registrar\n        </CButton>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteDirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editDirectWorkForce(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={columnChartElement} style={{ width: '100%' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={barGraphData} />\n      </div>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentListContext.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipment = equipmentListContext.find((item) => item.id === id)\n    setEquipment({\n      equipment: selectedEquipment.equipment,\n      equipmentOfferedNumber: selectedEquipment.actions.equipmentOfferedNumber,\n      equipmentCertifiedNumber: selectedEquipment.actions.equipmentCertifiedNumber,\n      equipmentWorkNumber: selectedEquipment.actions.equipmentWorkNumber,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateListContext.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipmentPlate = equipmentPlateListContext.find((item) => item.id === id)\n    const selectedEquipment = basicQuery.equipment.find(\n      (equip) => equip.id.toString() === selectedEquipmentPlate.equipment.toString(),\n    )\n\n    setPlates(selectedEquipment.plate)\n\n    setEquipmentPlate({\n      equipment: selectedEquipmentPlate.equipment,\n      equipmentEffectiveTime: selectedEquipmentPlate.equipmentEffectiveTime,\n      equipmentCorrectiveMaintenance: selectedEquipmentPlate.equipmentCorrectiveMaintenance,\n      equipmentPreventiveMaintenance: selectedEquipmentPlate.equipmentPreventiveMaintenance,\n      equipmentOutOfService: selectedEquipmentPlate.equipmentOutOfService,\n      equipmentWaiting: selectedEquipmentPlate.equipmentWaiting,\n      equipmentNoOperator: selectedEquipmentPlate.equipmentNoOperator,\n      equipmentInitialHorometer: selectedEquipmentPlate.equipmentInitialHorometer,\n      equipmentFinalHorometer: selectedEquipmentPlate.equipmentFinalHorometer,\n      equipmentPlate: selectedEquipmentPlate.equipmentPlate,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceListContext, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceListContext.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  const editEquipmentWorkForce = (id) => {\n    const selectedEquipmentWorkForce = equipmentWorkForceListContext.find((item) => item.id === id)\n\n    if (selectedEquipmentWorkForce.equipmentSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setEquipmentWorkForce({\n      equipmentWorkForce: selectedEquipmentWorkForce.equipmentWorkForce,\n      equipmentWorkForceObservation: selectedEquipmentWorkForce.equipmentWorkForceObservation,\n      equipmentSubWorkFront: selectedEquipmentWorkForce.equipmentSubWorkFront,\n      equipmentWorkFrontCharge: selectedEquipmentWorkForce.equipmentWorkFrontCharge,\n      equipmentWorkFrontQuantity: selectedEquipmentWorkForce.equipmentWorkFrontQuantity,\n    })\n    deleteEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    setEquipmentWorkForce({\n      ...equipmentWorkForce,\n      equipmentSubWorkFront: enableSubFrontWork\n        ? equipmentWorkForce.equipmentSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                deleteEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              eliminar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                editEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              Editar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentContext, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentContext.filter((item) => item.id !== id)\n    setIncidentList(newData)\n    removeIncident(id)\n  }\n\n  const editIncident = (id) => {\n    const selectedIncident = incidentContext.find((item) => item.id === id)\n    setIncident({\n      incident: selectedIncident.incident,\n      nonConformity: selectedIncident.nonConformity,\n    })\n    deleteIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIncident(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIncident(item.id)\n                          }}\n                        >\n                          editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (isCreatingMode) setIndirectWorkForceList(indirectWorkForceListContext)\n  // }, [indirectWorkForceListContext])\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([\n        // ...indirectWorkForceList,\n        ...indirectWorkForceListContext,\n        indirectWorkForceInitialState,\n      ])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceListContext.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  const editIndirectWorkForce = (id) => {\n    const selectedIndirectWorkForce = indirectWorkForceListContext.find((item) => item.id === id)\n    setIndirectWorkForce({\n      indirectWorkForce: selectedIndirectWorkForce.indirectWorkForce,\n      contractAdministratorOfferedNumber: selectedIndirectWorkForce.offeredNumber,\n      contractAdministratorContractedNumber: selectedIndirectWorkForce.contractedNumber,\n      contractAdministratorCertified: selectedIndirectWorkForce.certified,\n      contractAdministratorBreakNumber: selectedIndirectWorkForce.breakNumber,\n      contractAdministratorWorkNumber: selectedIndirectWorkForce.workNumber,\n      contractAdministratorHHNumber: selectedIndirectWorkForce.hh,\n    })\n    deleteIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIndirectWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIndirectWorkForce(item.id)\n                          }}\n                        >\n                          Editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeListContext, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeListContext.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  const editAljibe = (id) => {\n    const selectedAljibe = aljibeListContext.find((item) => item.id === id)\n\n    const selectedAljibeData = basicQuery.aljibe.find((alj) => {\n      return alj.id.toString() === selectedAljibe.aljibe.toString()\n    })\n    setPlates(selectedAljibeData.plate)\n\n    setAlgibe({\n      aljibe: selectedAljibe.aljibe,\n      aljibeCachimbaName: selectedAljibe.aljibeCachimbaName,\n      aljibeQuantityTurns: selectedAljibe.aljibeQuantityTurns,\n      aljibeM3: selectedAljibe.aljibeM3,\n      aljibePlate: selectedAljibe.aljibePlate,\n      aljibeOfferedNumber: selectedAljibe.aljibeOfferedNumber,\n      aljibeCertifiedNumber: selectedAljibe.aljibeCertifiedNumber,\n      aljibeWorkNumber: selectedAljibe.aljibeWorkNumber,\n    })\n\n    deletealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeOfferedNumber\"\n                    value={aljibe.aljibeOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCertifiedNumber\"\n                    value={aljibe.aljibeCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeWorkNumber\"\n                    value={aljibe.aljibeWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletealjibe(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAljibe(item.id)\n                        }}\n                      >\n                        editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceListContext, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceListContext.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  const editMachineryWorkForce = (id) => {\n    const selectedMachineryWorkForce = machineryWorkForceListContext.find((item) => item.id === id)\n    if (selectedMachineryWorkForce.machinerySubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setMachineryWorkForce({\n      machineryWorkForce: selectedMachineryWorkForce.machineryWorkForce,\n      machineryWorkForceObservation: selectedMachineryWorkForce.machineryWorkForceObservation,\n      machinerySubWorkFront: selectedMachineryWorkForce.machinerySubWorkFront,\n      machineryWorkFrontCharge: selectedMachineryWorkForce.machineryWorkFrontCharge,\n      machineryWorkFrontQuantity: selectedMachineryWorkForce.machineryWorkFrontQuantity,\n    })\n    deleteMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    setMachineryWorkForce({\n      ...machineryWorkForce,\n      machinerySubWorkFront: enableSubFrontWork\n        ? machineryWorkForce.machinerySubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteMachineryWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editMachineryWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryListContext, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryListContext.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  const editMachinery = (id) => {\n    const selectedMachinery = machineryListContext.find((item) => item.id === id)\n    setMachinery({\n      machinery: selectedMachinery.machinery,\n      machineryOfferedNumber: selectedMachinery.actions.machineryOfferedNumber,\n      machineryCertifiedNumber: selectedMachinery.actions.machineryCertifiedNumber,\n      machineryWorkNumber: selectedMachinery.actions.machineryWorkNumber,\n    })\n    deleteMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isViewMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !isViewMode\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateListContext, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateListContext.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  const editVehiclePlate = (id) => {\n    const selectedVehiclePlate = vehiclePlateListContext.find((item) => item.id === id)\n\n    const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n      return vehic.id.toString() === selectedVehiclePlate.vehicle.toString()\n    })\n    setPlates(selectedVehicle.plate)\n\n    setVehiclePlate({\n      vehicle: selectedVehiclePlate.vehicle,\n      vehicleEffectiveTime: selectedVehiclePlate.vehicleEffectiveTime,\n      vehicleCorrectiveMaintenance: selectedVehiclePlate.vehicleCorrectiveMaintenance,\n      vehiclePreventiveMaintenance: selectedVehiclePlate.vehiclePreventiveMaintenance,\n      vehicleOutOfService: selectedVehiclePlate.vehicleOutOfService,\n      vehicleWaiting: selectedVehiclePlate.vehicleWaiting,\n      vehicleNoOperator: selectedVehiclePlate.vehicleNoOperator,\n      vehicleInitialHorometer: selectedVehiclePlate.vehicleInitialHorometer,\n      vehicleFinalHorometer: selectedVehiclePlate.vehicleFinalHorometer,\n      vehiclePlate: selectedVehiclePlate.vehiclePlate,\n    })\n\n    deletevehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehiclePlate(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehiclePlate(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleListContext, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleListContext.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  const editVehicle = (id) => {\n    const selectedVehicle = vehicleListContext.find((item) => item.id === id)\n    setVehicle({\n      vehicle: selectedVehicle.vehicle,\n      vehicleOfferedNumber: selectedVehicle.actions.vehicleOfferedNumber,\n      vehicleCertifiedNumber: selectedVehicle.actions.vehicleCertifiedNumber,\n      vehicleWorkNumber: selectedVehicle.actions.vehicleWorkNumber,\n    })\n    deletevehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehicle(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehicle(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n      graphList,\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","currentLocation","useLocation","pathname","isViewMode","includes","isCreatingMode","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","deleteActivity","newData","filter","item","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","index","charge","find","work","selectedActivity","editActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","pieChartElement","useRef","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","isInView","setIsInView","checkInView","_pieChartElement$curr","rect","current","getBoundingClientRect","top","window","innerHeight","bottom","convertAsarcoChart","document","addEventListener","removeEventListener","imagenPieChart","setImagenPieChart","pieChartData","setPieChartData","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","storeGraphs","selectedMachinery","mac","toString","plate","deleteAsarcoMachinery","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","toPng","cacheBust","then","dataUrl","catch","err","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","selectedAsarcoMachinery","editAsarcoMachinery","ref","Chart","chartType","width","height","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","dailyReportIndirectPersonalShift","indirect_staff_shift","indirect_staf","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","deletedirectDotationWorkForce","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","selectDirectDotationWorkForce","editDirectDotationWorkForce","DirectWorkForce","columnChartElement","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","imagenColumnChart","setImagenColumnChart","barGraphData","setBarGraphData","role","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","deleteDirectWorkForce","offered","worked","offeredNumber","workNumber","convertDotationChart","_columnChartElement$c","registerDirectWorkForce","directWorkForceInitialState","contractedNumber","certified","breakNumber","hh","personal","selectedDirectWorkForce","editDirectWorkForce","style","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","deleteEquipment","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","selectedEquipment","editEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","equip","selectedEquipmentPlate","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","deleteEquipmentWorkForce","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","selectedEquipmentWorkForce","editEquipmentWorkForce","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","deleteIncident","concat","registerIncident","incidentInitialState","selectedIncident","editIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","deleteIndirectWorkForce","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","selectedIndirectWorkForce","editIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","deletealjibe","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","selectedAljibeData","editAljibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","deleteMachineryWorkForce","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","selectedMachineryWorkForce","editMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","deleteMachinery","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","editMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","deletevehiclePlate","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","selectedVehiclePlate","editVehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","deletevehicle","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","editVehicle","Loading","Lottie","animationData","loadingjson","loop","projectLS","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","graphList","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","onSuccess","onError","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}