{"version":3,"file":"static/js/520.2a94a158.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/photo-record.jsx","components/DailyReportCollapse.jsx","hooks/useGetCachedQueryData.js"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={contractLS.id}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              label=\"Clima\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"1\">Calor moderado</option>\n              <option value=\"2\">Calor intenso</option>\n              <option value=\"3\">Frío moderado</option>\n              <option value=\"4\">Frío intenso</option>\n              <option value=\"5\">Lluvia débil</option>\n              <option value=\"6\">Lluvia moderada</option>\n              <option value=\"7\">Lluvia intensa</option>\n              <option value=\"8\">Viento débil</option>\n              <option value=\"9\">Viento moderado</option>\n              <option value=\"10\">Viento intenso</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"14x14\">14x14</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        label=\"Cargo\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n          return (\n            <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n              {indirectPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce, indirectWorkForceList: indirectWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let indirectData of indirectWorkForceListContext) {\n      hours = hours + Number(indirectData.hh)\n      offered = offered + Number(indirectData.offeredNumber)\n      contracted = contracted + Number(indirectData.contractedNumber)\n      certified = certified + Number(indirectData.certified)\n      breaked = breaked + Number(indirectData.breakNumber)\n      workekd = workekd + Number(indirectData.workNumber)\n    }\n    setIndirectAccumulatedHours(hours)\n    setIndirectAccumulatedOffered(offered)\n    setIndirectAccumulatedContracted(contracted)\n    setIndirectAccumulatedCertified(certified)\n    setIndirectAccumulatedBreaked(breaked)\n    setIndirectAccumulatedWorked(workekd)\n    setIndirectAccumulatedActual(\n      Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n    )\n\n    const data = {\n      indirectSubtotalOfferedNumber: offered,\n      indirectSubtotalContractedNumber: contracted,\n      indirectSubtotalCertifiedNumber: certified,\n      indirectSubtotalBreakNumber: breaked,\n      indirectSubtotalWorkNumber: workekd,\n      indirectSubstotalHHNumber: hours,\n      indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n      indirectCurrentAccumulated:\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n    }\n\n    setTotalIndirectWorkForce(data)\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce, directWorkForceList: directWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let directData of directWorkForceListContext) {\n      hours = hours + Number(directData.hh)\n      offered = offered + Number(directData.offeredNumber)\n      contracted = contracted + Number(directData.contractedNumber)\n      certified = certified + Number(directData.certified)\n      breaked = breaked + Number(directData.breakNumber)\n      workekd = workekd + Number(directData.workNumber)\n    }\n    setDirectAccumulatedHours(hours)\n    setDirectAccumulatedOffered(offered)\n    setDirectAccumulatedContracted(contracted)\n    setDirectAccumulatedCertified(certified)\n    setDirectAccumulatedBreaked(breaked)\n    setDirectAccumulatedWorked(workekd)\n    setDirectAccumulatedActual(\n      Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    )\n    const data = {\n      directSubtotalOfferedNumber: offered,\n      directSubtotalContractedNumber: contracted,\n      directSubtotalCertifiedNumber: certified,\n      directSubtotalBreakNumber: breaked,\n      directSubtotalWorkNumber: workekd,\n      directSubstotalHHNumber: hours,\n      directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n      directCurrentAccumulated:\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    }\n\n    setTotalDirectWorkForce(data)\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFront\"\n        label=\"Frente de trabajo\"\n        value={directDotationWorkForce.directWorkFront || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={directDotationWorkForce.directSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFrontCharge\"\n        value={directDotationWorkForce.directWorkFrontCharge || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={directDotationWorkForce.directWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n\n    // if (e.target.id === 'machineryWorkForce') {\n    //   setMachineryWorkForce(initialState) // Clear the object\n    //   setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    // }\n    // if (validate(e.target.value)) {\n    //   setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    // }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n\n    // const machineryWorkForceInitialState = {\n    //   id: uuidv4(),\n    //   machineryWorkForce: machineryWorkForce.machineryWorkForce,\n    //   machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n    //   actions: {\n    //     machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n    //     machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n    //     machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n    //     machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n    //     machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n    //     machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n    //     machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n    //   },\n    // }\n    // setMachineryWorkForce(initialState) // Clear the object\n    // setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, maquinaria y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"machineryWorkForce\"\n        value={machineryWorkForce.machineryWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machinerySubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={machineryWorkForce.machinerySubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkFrontCharge\"\n        value={machineryWorkForce.machineryWorkFrontCharge || ''}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"machineryWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={machineryWorkForce.machineryWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value=\"0\">Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n\n      // setEquipmentWorkForce(initialState) // Clear the object\n      // setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  // useEffect(() => {\n  //   let equipmentWorkForceTotalsCounter = {\n  //     equipmentWorkForceFront1: 0,\n  //     equipmentWorkForceFront2: 0,\n  //     equipmentWorkForceFront3: 0,\n  //     equipmentWorkForceFront4: 0,\n  //     equipmentWorkForceFront5: 0,\n  //     equipmentWorkForceFront6: 0,\n  //     equipmentWorkForceFront7: 0,\n  //   }\n\n  //   for (let data of equipmentWorkForceListContext) {\n  //     equipmentWorkForceTotalsCounter = {\n  //       equipmentWorkForceFront1:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n  //         Number(data.equipmentWorkForceFront1 ?? 0),\n  //       equipmentWorkForceFront2:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n  //         Number(data.equipmentWorkForceFront2 ?? 0),\n  //       equipmentWorkForceFront3:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n  //         Number(data.equipmentWorkForceFront3 ?? 0),\n  //       equipmentWorkForceFront4:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n  //         Number(data.equipmentWorkForceFront4 ?? 0),\n  //       equipmentWorkForceFront5:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n  //         Number(data.equipmentWorkForceFront5 ?? 0),\n  //       equipmentWorkForceFront6:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n  //         Number(data.equipmentWorkForceFront6 ?? 0),\n  //       equipmentWorkForceFront7:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n  //         Number(data.equipmentWorkForceFront7 ?? 0),\n  //     }\n  //   }\n  //   setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  // }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={equipmentWorkForce.equipmentSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkFrontCharge\"\n        value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n        label=\"Equipo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"equipmentWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"equipmentWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                      return charge.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteEquipmentWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        label=\"Vehículo\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el frente de trabajo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        label=\"Frente de trabajo\"\n        value={activity.activityFrontWork ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                // disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                value={activity.activityDiscipline ?? '0'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={'0'}>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Graphs = () => {\n  const { asarcoMachineryList: asarcoMachineryListContext } = useRegisterDailyReportCompany()\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryListContext) {\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CChart\n        type=\"pie\"\n        data={{\n          labels: [\n            'Tiempo Efectivo (Hrs)',\n            'Mantención Programada (Hrs)',\n            'Demora Programada (Hrs)',\n            'Perdida Operacional (Hrs)',\n            'Mantención No Programada (Hrs)',\n            'Demora No Programada (Hrs)',\n            'Reservas (Hrs)',\n          ],\n          datasets: [\n            {\n              labels: [\n                'Tiempo Efectivo (Hrs)',\n                'Mantención Programada (Hrs)',\n                'Demora Programada (Hrs)',\n                'Perdida Operacional (Hrs)',\n                'Mantención No Programada (Hrs)',\n                'Demora No Programada (Hrs)',\n                'Reservas (Hrs)',\n              ],\n              hoverOffset: 4,\n              backgroundColor: [\n                '#41B883',\n                '#E46651',\n                '#00D8FF',\n                '#DD1B16',\n                '#F41203',\n                '#002312',\n                '#A12942',\n              ],\n              data: [\n                // 1, 2, 3, 4, 5, 6, 7,\n                ((effectiveTime / totals) * 100).toFixed(2),\n                ((scheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((scheduleDelay / totals) * 100).toFixed(2),\n                ((opperationalLoss / totals) * 100).toFixed(2),\n                ((unscheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((unscheduleDelay / totals) * 100).toFixed(2),\n                ((reserves / totals) * 100).toFixed(2),\n              ],\n            },\n          ],\n        }}\n        // options={{\n        //   showAllTooltips: true,\n        //   interaction: {\n        //     intersect: false,\n        //     mode: 'index',\n        //   },\n        //   plugins: {\n        //     title: {\n        //       display: true,\n        //       // text: (ctx) => 'Tooltip position mode: ' + ctx.chart.options.plugins.tooltip.position,\n        //     },\n        //   },\n\n        //   //   plugins: {\n        //   //     legend: {\n        //   //       labels: {\n        //   //         color: getStyle('--cui-body-color'),\n        //   //       },\n        //   //     },\n        //   //   },\n        // }}\n      />\n    </div>\n  )\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe ingresar un incidente o una no conformidad para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        value={incident.incident}\n        text={`${incident.incident.length} de ${INCIDENT_LIMIT} caracteres`}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text={`${incident.nonConformity.length} de ${NON_CONFORMITY_LIMIT} caracteres`}\n        value={incident.nonConformity}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIncident()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIncident(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        value={directWorkForce.directWorkForce || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar la máquina y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Maquinaria\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"machineryPlate\"\n            value={asarcoMachinery.machineryPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"equipmentPlate\"\n            value={equipmentPlate.equipmentPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y la patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        label=\"Vehículo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"vehiclePlate\"\n            value={vehiclePlate.vehiclePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el aljibe y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Aljibe\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"aljibePlate\"\n            value={aljibe.aljibePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeOfferedNumber\"\n                value={aljibe.aljibeOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCertifiedNumber\"\n                value={aljibe.aljibeCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeWorkNumber\"\n                value={aljibe.aljibeWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Registro fotográfico diario</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <PhotoRecord />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","incident","removeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","company","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","projectId","id","contractId","CompanyReport","onChangeData","e","_jsx","className","children","_jsxs","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","disabled","value","name","CFormSelect","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","getData","useGetCachedQueryData","basicQuery","setIndirectWorkForce","useState","setIndirectWorkForceList","error","setError","indirectWorkForceListContext","target","useEffect","CToast","autohide","visible","color","onClose","CToastBody","indirectPersonal","map","indirectPersonalCached","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","item","index","charge","find","personal","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","hours","offered","contracted","breaked","workekd","indirectData","Number","data","indirectSubstotalHHNumber","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","directWorkForceListContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","directData","directSubstotalHHNumber","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","directDotationWorkForceListContext","selectedWorkFront","workFront","toString","hasSubFront","workfrontCached","_Fragment","directPersonal","directPersonalCached","CFormTextarea","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","actions","machineryCached","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","_item$machinerySubWor","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","vehicles","vehicleCached","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","vehic","deletevehicle","Activities","_activity$activityFro","_activity$activityDis","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","realHpurs","prevHours","previousHh","calc","toFixed","workFrontCached","registerActivity","activityInitialState","work","deleteActivity","Comments","setComments","rows","Graphs","asarcoMachineryListContext","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","asarcoData","asarcoMachineryEffectiveTime","asarcoMachineryScheduleMaintenance","asarcoMachineryScheduleDelay","asarcoMachineryOpperationalLoss","asarcoMachineryUnscheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","CChart","labels","datasets","hoverOffset","backgroundColor","Incidents","nonConformity","setIncident","incidentList","setIncidentList","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","asarcoMachineryHorometer","machineryPlate","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","selectedMachinery","mac","plate","asarcoMachineryTotalsCounter","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","selectedEquipment","equip","VehiclePlate","_vehiclePlate$vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","selectedVehicle","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","PhotoRecord","Array","from","_","i","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","queryClient","useQueryClient","key","getQueryData"],"sourceRoot":""}