{"version":3,"file":"static/js/406.e0a92928.chunk.js","mappings":"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","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el frente de trabajo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        label=\"Frente de trabajo\"\n        value={activity.activityFrontWork ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                // disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                value={activity.activityDiscipline ?? '0'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={'0'}>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar la máquina y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Maquinaria\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"machineryPlate\"\n            value={asarcoMachinery.machineryPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={currentLocation.includes('/edit')}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.id}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"1\">Calor moderado</option>\n              <option value=\"2\">Calor intenso</option>\n              <option value=\"3\">Frío moderado</option>\n              <option value=\"4\">Frío intenso</option>\n              <option value=\"5\">Lluvia débil</option>\n              <option value=\"6\">Lluvia moderada</option>\n              <option value=\"7\">Lluvia intensa</option>\n              <option value=\"8\">Viento débil</option>\n              <option value=\"9\">Viento moderado</option>\n              <option value=\"10\">Viento intenso</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"14x14\">14x14</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFront\"\n        label=\"Frente de trabajo\"\n        value={directDotationWorkForce.directWorkFront || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={directDotationWorkForce.directSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFrontCharge\"\n        value={directDotationWorkForce.directWorkFrontCharge || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={directDotationWorkForce.directWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    console.log('directWorkForceListContext', directWorkForceListContext)\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isEditMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value=\"0\">Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"equipmentPlate\"\n            value={equipmentPlate.equipmentPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n\n      // setEquipmentWorkForce(initialState) // Clear the object\n      // setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  // useEffect(() => {\n  //   let equipmentWorkForceTotalsCounter = {\n  //     equipmentWorkForceFront1: 0,\n  //     equipmentWorkForceFront2: 0,\n  //     equipmentWorkForceFront3: 0,\n  //     equipmentWorkForceFront4: 0,\n  //     equipmentWorkForceFront5: 0,\n  //     equipmentWorkForceFront6: 0,\n  //     equipmentWorkForceFront7: 0,\n  //   }\n\n  //   for (let data of equipmentWorkForceListContext) {\n  //     equipmentWorkForceTotalsCounter = {\n  //       equipmentWorkForceFront1:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n  //         Number(data.equipmentWorkForceFront1 ?? 0),\n  //       equipmentWorkForceFront2:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n  //         Number(data.equipmentWorkForceFront2 ?? 0),\n  //       equipmentWorkForceFront3:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n  //         Number(data.equipmentWorkForceFront3 ?? 0),\n  //       equipmentWorkForceFront4:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n  //         Number(data.equipmentWorkForceFront4 ?? 0),\n  //       equipmentWorkForceFront5:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n  //         Number(data.equipmentWorkForceFront5 ?? 0),\n  //       equipmentWorkForceFront6:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n  //         Number(data.equipmentWorkForceFront6 ?? 0),\n  //       equipmentWorkForceFront7:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n  //         Number(data.equipmentWorkForceFront7 ?? 0),\n  //     }\n  //   }\n  //   setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  // }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={equipmentWorkForce.equipmentSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkFrontCharge\"\n        value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n        label=\"Equipo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"equipmentWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"equipmentWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                      return charge.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteEquipmentWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Graphs = () => {\n  const { asarcoMachineryList: asarcoMachineryListContext } = useRegisterDailyReportCompany()\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryListContext) {\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CChart\n        type=\"pie\"\n        data={{\n          labels: [\n            'Tiempo Efectivo (Hrs)',\n            'Mantención Programada (Hrs)',\n            'Demora Programada (Hrs)',\n            'Perdida Operacional (Hrs)',\n            'Mantención No Programada (Hrs)',\n            'Demora No Programada (Hrs)',\n            'Reservas (Hrs)',\n          ],\n          datasets: [\n            {\n              labels: [\n                'Tiempo Efectivo (Hrs)',\n                'Mantención Programada (Hrs)',\n                'Demora Programada (Hrs)',\n                'Perdida Operacional (Hrs)',\n                'Mantención No Programada (Hrs)',\n                'Demora No Programada (Hrs)',\n                'Reservas (Hrs)',\n              ],\n              hoverOffset: 4,\n              backgroundColor: [\n                '#41B883',\n                '#E46651',\n                '#00D8FF',\n                '#DD1B16',\n                '#F41203',\n                '#002312',\n                '#A12942',\n              ],\n              data: [\n                // 1, 2, 3, 4, 5, 6, 7,\n                ((effectiveTime / totals) * 100).toFixed(2),\n                ((scheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((scheduleDelay / totals) * 100).toFixed(2),\n                ((opperationalLoss / totals) * 100).toFixed(2),\n                ((unscheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((unscheduleDelay / totals) * 100).toFixed(2),\n                ((reserves / totals) * 100).toFixed(2),\n              ],\n            },\n          ],\n        }}\n        options={{\n          showAllTooltips: true,\n          interaction: {\n            intersect: false,\n            mode: 'index',\n          },\n          plugins: {\n            title: {\n              display: true,\n              // text: (ctx) => 'Tooltip position mode: ' + ctx.chart.options.plugins.tooltip.position,\n            },\n          },\n\n          //   plugins: {\n          //     legend: {\n          //       labels: {\n          //         color: getStyle('--cui-body-color'),\n          //       },\n          //     },\n          //   },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe ingresar un incidente o una no conformidad para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        value={incident.incident}\n        text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n        value={incident.nonConformity}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIncident()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIncident(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el aljibe y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Aljibe\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"aljibePlate\"\n            value={aljibe.aljibePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeOfferedNumber\"\n                value={aljibe.aljibeOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCertifiedNumber\"\n                value={aljibe.aljibeCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeWorkNumber\"\n                value={aljibe.aljibeWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n\n    // if (e.target.id === 'machineryWorkForce') {\n    //   setMachineryWorkForce(initialState) // Clear the object\n    //   setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    // }\n    // if (validate(e.target.value)) {\n    //   setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    // }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n\n    // const machineryWorkForceInitialState = {\n    //   id: uuidv4(),\n    //   machineryWorkForce: machineryWorkForce.machineryWorkForce,\n    //   machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n    //   actions: {\n    //     machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n    //     machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n    //     machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n    //     machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n    //     machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n    //     machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n    //     machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n    //   },\n    // }\n    // setMachineryWorkForce(initialState) // Clear the object\n    // setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, maquinaria y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"machineryWorkForce\"\n        value={machineryWorkForce.machineryWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machinerySubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={machineryWorkForce.machinerySubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkFrontCharge\"\n        value={machineryWorkForce.machineryWorkFrontCharge || ''}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"machineryWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={machineryWorkForce.machineryWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce, directWorkForceList: directWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let directData of directWorkForceListContext) {\n      hours = hours + Number(directData.hh)\n      offered = offered + Number(directData.offeredNumber)\n      contracted = contracted + Number(directData.contractedNumber)\n      certified = certified + Number(directData.certified)\n      breaked = breaked + Number(directData.breakNumber)\n      workekd = workekd + Number(directData.workNumber)\n    }\n    setDirectAccumulatedHours(hours)\n    setDirectAccumulatedOffered(offered)\n    setDirectAccumulatedContracted(contracted)\n    setDirectAccumulatedCertified(certified)\n    setDirectAccumulatedBreaked(breaked)\n    setDirectAccumulatedWorked(workekd)\n    setDirectAccumulatedActual(\n      Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    )\n    const data = {\n      directSubtotalOfferedNumber: offered,\n      directSubtotalContractedNumber: contracted,\n      directSubtotalCertifiedNumber: certified,\n      directSubtotalBreakNumber: breaked,\n      directSubtotalWorkNumber: workekd,\n      directSubstotalHHNumber: hours,\n      directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n      directCurrentAccumulated:\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    }\n\n    setTotalDirectWorkForce(data)\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit')) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [totalIndirectWorkForceContext])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit')) {\n      storeTotalIndirectWorkForce(totalIndirectWorkForce)\n    }\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !currentLocation.includes('/edit')\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={currentLocation.includes('/edit')}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y la patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        label=\"Vehículo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"vehiclePlate\"\n            value={vehiclePlate.vehiclePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        label=\"Vehículo\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  // let iwfList = []\n  // let iwf = {}\n  // for (let indi of indirectWorkForceList) {\n  //   iwf = {}\n  //   iwf.indirectWorkForce = indi.indirectWorkForce\n  //   iwf.offeredNumber = indi.offeredNumber\n  //   iwf.contractedNumber = indi.contractedNumber\n  //   iwf.certified = indi.certified\n  //   iwf.breakNumber = indi.breakNumber\n  //   iwf.workNumber = indi.workNumber\n  //   iwf.hh = indi.indirectWorkForhhce\n  //   iwfList.push(iwf)\n  // }\n\n  // let dwfList = []\n  // let dwf = {}\n  // for (let direct of directWorkForceList) {\n  //   dwf = {}\n  //   dwf.indirectWorkForce = direct.indirectWorkForce\n  //   dwf.offeredNumber = direct.offeredNumber\n  //   dwf.contractedNumber = direct.contractedNumber\n  //   dwf.certified = direct.certified\n  //   dwf.breakNumber = direct.breakNumber\n  //   dwf.workNumber = direct.workNumber\n  //   dwf.hh = direct.indirectWorkForhhce\n  //   dwfList.push(dwf)\n  // }\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  // let ddwfList = []\n  // let ddwf = {}\n  // for (let directDotation of directDotationWorkForceList) {\n  //   ddwf = {}\n  //   ddwf.directDotationWorkForceObservation = directDotation.directDotationWorkForceObservation\n  //   ddwf.directWorkFront = directDotation.directWorkFront\n  //   ddwf.directSubWorkFront = directDotation.directSubWorkFront\n  //   ddwf.directWorkFrontCharge = directDotation.directWorkFrontCharge\n  //   ddwf.directWorkFrontQuantity = directDotation.directWorkFrontQuantity\n  //   ddwfList.push(ddwf)\n  // }\n\n  // let mwfList = []\n  // let mwf = {}\n  // for (let machineryWF of machineryWorkForceList) {\n  //   mwf = {}\n  //   mwf.machineryWorkForcebservation = machineryWF.machineryWorkForcebservation\n  //   mwf.machineryWorkForce = machineryWF.machineryWorkForce\n  //   mwf.machinerySubWorkFront = machineryWF.machinerySubWorkFront\n  //   mwf.machineryWorkFrontCharge = machineryWF.machineryWorkFrontCharge\n  //   mwf.machineryWorkFrontQuantity = machineryWF.machineryWorkFrontQuantity\n  //   mwfList.push(mwf)\n  // }\n\n  // let ewfList = []\n  // let ewf = {}\n  // for (let equipmentWF of equipmentWorkForceList) {\n  //   ewf = {}\n  //   ewf.equipmentWorkForce = equipmentWF.equipmentWorkForce\n  //   ewf.equipmentWorkForceObservation = equipmentWF.equipmentWorkForceObservation\n  //   ewf.equipmentSubWorkFront = equipmentWF.equipmentSubWorkFront\n  //   ewf.equipmentWorkFrontCharge = equipmentWF.equipmentWorkFrontCharge\n  //   ewf.equipmentWorkFrontQuantity = equipmentWF.equipmentWorkFrontQuantity\n  //   ewfList.push(ewf)\n  // }\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comment: comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","_jsxs","className","children","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","item","index","charge","find","work","newData","filter","deleteActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","selectedMachinery","mac","toString","plate","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","machineryCached","_Fragment","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","Comments","comment","setComment","storeComment","CFormTextarea","rows","CompanyReport","currentLocation","useLocation","pathname","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","includes","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","dailyReportDirectPersonalShift","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","dailyReportIndirectPersonalShift","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","DirectWorkForce","isEditMode","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","console","log","personal","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","selectedEquipment","equip","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","deleteEquipmentWorkForce","Graphs","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","asarcoData","CChart","labels","datasets","hoverOffset","backgroundColor","options","showAllTooltips","interaction","intersect","mode","plugins","title","display","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","deleteIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","_item$machinerySubWor","deleteMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForce","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","hours","offered","contracted","breaked","workekd","directData","directSubstotalHHNumber","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","projectLS","vehicleWorkForceList","comments","useContext","DailyReportContext","mutation","useMutation","mutationFn","newTodo","axios","post","equipList","eq","stringify","push","machinList","machin","ma","vehicList","ve","async","mutate","projectId","contractId","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}