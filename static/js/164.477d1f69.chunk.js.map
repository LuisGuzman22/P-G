{"version":3,"file":"static/js/164.477d1f69.chunk.js","mappings":"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","sources":["components/ContractList.jsx","components/ModalAddContract.jsx","pages/ContractAdministration.jsx"],"sourcesContent":["import React from 'react'\nimport {\n  CAccordion,\n  CAccordionItem,\n  CAccordionHeader,\n  CAccordionBody,\n  CRow,\n  CCol,\n  CButton,\n} from '@coreui/react'\nimport { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst ContractList = () => {\n  const fetchContracts = async () => {\n    const res = await axios.get('https://run.mocky.io/v3/9b3c50eb-0ea0-40b8-bf42-a6221aeab3da')\n    return res.data.data\n  }\n\n  const { data, isLoading } = useQuery({\n    queryKey: ['contracts'],\n    queryFn: async () => {\n      return fetchContracts()\n    },\n  })\n\n  return (\n    <>\n      <CRow>\n        <CCol>Nombre</CCol>\n        <CCol>Detalle</CCol>\n        <CCol>URL</CCol>\n        <CCol>Teléfono</CCol>\n        <CCol>Email</CCol>\n      </CRow>\n\n      <CAccordion className=\"contract-list\">\n        {!isLoading &&\n          data?.map((contract, index) => {\n            return (\n              <CAccordionItem itemKey={contract.id} key={contract.id}>\n                <CAccordionHeader>\n                  <CRow>\n                    <CCol>{contract.contractName}</CCol>\n                    <CCol>{contract.contractDetail}</CCol>\n                    <CCol>{contract.contractUrl}</CCol>\n                    <CCol>{contract.contractPhone}</CCol>\n                    <CCol>{contract.contractMail}</CCol>\n                  </CRow>\n                </CAccordionHeader>\n                <CAccordionBody>\n                  <CButton className=\"btn-project-action\">Editar</CButton>\n                  <CButton className=\"btn-project-action\">Curva S</CButton>\n                </CAccordionBody>\n              </CAccordionItem>\n            )\n          })}\n      </CAccordion>\n    </>\n  )\n}\n\nexport default ContractList\n","/* eslint-disable react/prop-types */\nimport { React, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormTextarea,\n  CFormCheck,\n} from '@coreui/react'\nconst ModalAddContract = (props) => {\n  const handleClick = () => {\n    props.sendDataToParent(false)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => handleClick()}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Añadir Contrato</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractName\"\n                label=\"Nombre\"\n                placeholder=\"Nombre\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n                onChange={(e) => {\n                  console.log(e.target.value)\n                }}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractDetail\"\n                label=\"Detalle\"\n                placeholder=\"Detalle\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractUrl\"\n                label=\"URL\"\n                placeholder=\"URL\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractPhone\"\n                label=\"Teléfono\"\n                placeholder=\"Teléfono\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />{' '}\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractMail\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => handleClick()}>\n          Cerrar\n        </CButton>\n        <CButton className=\"btn-add\">Añadir contrato</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalAddContract\n","import { React, useState } from 'react'\nimport { CCard, CCardBody, CButton } from '@coreui/react'\nimport ContractList from 'src/components/ContractList'\nimport ModalAddContract from 'src/components/ModalAddContract'\n\nconst ContractAdministration = () => {\n  const [visibleContract, setVisibleContract] = useState(false)\n\n  return (\n    <div className=\"contract-administration\">\n      <h2>Administrar Contratos</h2>\n\n      {visibleContract && (\n        <ModalAddContract\n          visible={true}\n          sendDataToParent={(data) => {\n            setVisibleContract(data)\n          }}\n        />\n      )}\n\n      <CCard className=\"action-buttons\">\n        <CCardBody>\n          <CButton onClick={() => setVisibleContract(!visibleContract)}>Añadir contrato</CButton>\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <ContractList />\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default ContractAdministration\n"],"names":["ContractList","data","isLoading","useQuery","queryKey","queryFn","async","axios","get","fetchContracts","_jsxs","_Fragment","children","CRow","_jsx","CCol","CAccordion","className","map","contract","index","CAccordionItem","itemKey","id","CAccordionHeader","contractName","contractDetail","contractUrl","contractPhone","contractMail","CAccordionBody","CButton","props","handleClick","sendDataToParent","CModal","scrollable","visible","onClose","size","CModalHeader","CModalTitle","CModalBody","CForm","sm","CFormInput","type","label","placeholder","text","onChange","e","console","log","target","value","CModalFooter","color","onClick","ContractAdministration","visibleContract","setVisibleContract","useState","ModalAddContract","CCard","CCardBody"],"sourceRoot":""}