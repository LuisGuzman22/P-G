{"version":3,"file":"static/js/728.c8f8f11d.chunk.js","mappings":"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","sources":["components/ModalAddContract.jsx","components/loading.jsx","hooks/useFetch.js","hooks/useGetCachedQueryData.js","hooks/useRegisterGeneralData.js","hooks/useGetContracts.js","pages/ContractSelector.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { React, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormTextarea,\n  CFormCheck,\n} from '@coreui/react'\nconst ModalAddContract = (props) => {\n  const handleClick = () => {\n    props.sendDataToParent(false)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => handleClick()}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Añadir Contrato</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractName\"\n                label=\"Nombre\"\n                placeholder=\"Nombre\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n                onChange={(e) => {}}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractDetail\"\n                label=\"Detalle\"\n                placeholder=\"Detalle\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractUrl\"\n                label=\"URL\"\n                placeholder=\"URL\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractPhone\"\n                label=\"Teléfono\"\n                placeholder=\"Teléfono\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />{' '}\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractMail\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => handleClick()}>\n          Cerrar\n        </CButton>\n        <CButton className=\"btn-add\">Añadir contrato</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalAddContract\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst fetchProducts = async (projectId) => {\n  const res = await axios.get('https://42c56e69edd041d8afddac6929f0ea8b.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchContracts = async (contractId) => {\n  const res = await axios.get('https://2b3570b8072a44e09ce5b5a80a4c8012.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchBasicData = async (contractId) => {\n  const res = await axios.get('https://07a397da689a439a8a9f86b1df79836e.api.mockbin.io/')\n  return res.data.data\n}\n\nexport const useFetchProyects = (projectId) => {\n  return useQuery({\n    queryKey: ['projects'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchProducts(projectId)\n    },\n  })\n}\n\nexport const useFetchContract = (contractId) => {\n  return useQuery({\n    queryKey: ['contracts'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchContracts(contractId)\n    },\n  })\n}\n\nexport const useFetchBasicData = (contractId) => {\n  return useQuery({\n    queryKey: ['basics'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchBasicData(contractId)\n    },\n  })\n}\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n","import { useEffect, useState } from 'react'\n\nconst useRegisterGeneralData = () => {\n  const saveProject = (data) => {\n    localStorage.setItem('project', JSON.stringify(data))\n  }\n  const saveContract = (data) => {\n    localStorage.setItem('contract', JSON.stringify(data))\n  }\n\n  const getProject = () => {\n    return localStorage.getItem('project')\n  }\n  const getContract = (data) => {\n    return localStorage.getItem('contract')\n  }\n\n  return { saveProject, saveContract, getProject, getContract }\n}\n\nexport default useRegisterGeneralData\n","import { useEffect, useState } from 'react'\nimport { useFetchContract } from './useFetch'\n\nconst useGetContracts = (contractId) => {\n  const { data, isLoading, error } = useFetchContract(contractId)\n\n  return { data, isLoading, error }\n}\n\nexport default useGetContracts\n","import { React, useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CWidgetStatsD,\n  CRow,\n  CCol,\n  CContainer,\n  CCard,\n  CCardBody,\n  CCardText,\n  CCardTitle,\n} from '@coreui/react'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\n\nimport CIcon from '@coreui/icons-react'\nimport useGetContracts from 'src/hooks/useGetContracts'\nimport Loading from 'src/components/loading'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport ModalAddContract from 'src/components/ModalAddContract'\n\nconst ContractSelector = () => {\n  const navigate = useNavigate()\n  const { getProject, saveContract } = useRegisterGeneralData()\n  const [selectedProject, setSelectedProject] = useState()\n  const [contractList, setContractList] = useState()\n  const { getData } = useGetCachedQueryData()\n\n  const projectsQuery = getData('projects')\n  const userType = localStorage.getItem('USER_TYPE')\n  const { data: contractData, isLoading, error } = useGetContracts(1)\n  const projectLS = JSON.parse(getProject())\n\n  const [visibleContract, setVisibleContract] = useState(false)\n\n  const onClickHandler = (contract) => {\n    if (userType !== 'admin') {\n      const data = {\n        name: contract.name,\n        id: contract.id,\n      }\n      saveContract(data)\n      navigate(`/dashboard`)\n    } else {\n      const data = {\n        name: contract.name,\n        id: contract.id,\n      }\n      saveContract(data)\n      navigate(`/project_selector`)\n    }\n  }\n\n  const onClickNewContract = () => {\n    setVisibleContract(!visibleContract)\n  }\n\n  useEffect(() => {\n    if (userType !== 'admin') {\n      if (projectLS && projectsQuery) {\n        const projectFinded = projectsQuery.projects.find((projectData) => {\n          return projectData.id === projectLS.id\n        })\n        setSelectedProject(projectFinded)\n        setContractList(projectFinded.contracts)\n      } else {\n        navigate(`/project_selector`)\n      }\n    }\n  }, [projectsQuery, projectLS])\n\n  useEffect(() => {\n    userType === 'admin' && contractData?.contract && setContractList(contractData.contract)\n  }, [contractData])\n\n  return (\n    <>\n      {visibleContract && (\n        <ModalAddContract\n          visible={true}\n          sendDataToParent={(data) => {\n            setVisibleContract(data)\n          }}\n        />\n      )}\n      <CCol sm={6} className=\"contract-selector-container\">\n        <CCard>\n          <CCardTitle>\n            <h3>Seleccion de Contrato</h3>\n          </CCardTitle>\n          <CCardBody>\n            <CCardText>\n              {contractList === undefined && <h3>No se encontraron contratos asociados</h3>}\n              {contractList &&\n                contractList?.map((contract, index) => {\n                  return (\n                    <CRow key={index}>\n                      <CCol>\n                        <CWidgetStatsD\n                          onClick={() => {\n                            onClickHandler(contract)\n                          }}\n                          className=\"mb-3\"\n                          icon={\n                            <CIcon\n                              className=\"my-4 text-white\"\n                              icon={\n                                'https://pgproject.cl/uploads/1705996608_a41c61e65ecf2a35c699.jpg'\n                              }\n                              height={52}\n                            />\n                          }\n                          chart={\n                            <CContainer className=\"project-selector-container\">\n                              <CRow>\n                                <span className=\"project-title\">{contract.name}</span>\n                              </CRow>\n                            </CContainer>\n                          }\n                          style={{ '--cui-card-cap-bg': '#1A4D55', cursor: 'pointer' }}\n                          values={[\n                            { title: 'Trisemanales', value: contract.trisemanal },\n                            { title: 'Avance', value: contract.progress },\n                          ]}\n                        />\n                      </CCol>\n                    </CRow>\n                  )\n                })}\n              <CRow key={0}>\n                <CCol>\n                  <CWidgetStatsD\n                    onClick={() => {\n                      onClickNewContract()\n                    }}\n                    className=\"mb-3\"\n                    icon={\n                      <CIcon\n                        className=\"my-4 text-white\"\n                        icon={'https://pgproject.cl/uploads/1705996608_a41c61e65ecf2a35c699.jpg'}\n                        height={52}\n                      />\n                    }\n                    chart={\n                      <CContainer className=\"project-selector-container\">\n                        <CRow>\n                          <span className=\"project-title\">Crear nuevo contrato</span>\n                        </CRow>\n                      </CContainer>\n                    }\n                    style={{ '--cui-card-cap-bg': '#1A4D55', cursor: 'pointer' }}\n                  />\n                </CCol>\n              </CRow>\n            </CCardText>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\n\nexport default ContractSelector\n"],"names":["props","handleClick","sendDataToParent","_jsxs","CModal","scrollable","visible","onClose","size","className","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","e","CModalFooter","CButton","color","onClick","Loading","Lottie","animationData","loadingjson","loop","width","useFetchProyects","projectId","useQuery","queryKey","refetchType","queryFn","async","axios","get","data","fetchProducts","useFetchContract","contractId","fetchContracts","useFetchBasicData","fetchBasicData","useGetCachedQueryData","queryClient","useQueryClient","getData","key","getQueryData","useRegisterGeneralData","saveProject","localStorage","setItem","JSON","stringify","saveContract","getProject","getItem","getContract","isLoading","error","ContractSelector","navigate","useNavigate","selectedProject","setSelectedProject","useState","contractList","setContractList","projectsQuery","userType","contractData","useGetContracts","projectLS","parse","visibleContract","setVisibleContract","useEffect","projectFinded","projects","find","projectData","contracts","contract","_Fragment","ModalAddContract","CCard","CCardTitle","CCardBody","CCardText","undefined","map","index","CWidgetStatsD","name","onClickHandler","icon","CIcon","height","chart","CContainer","style","cursor","values","title","value","trisemanal","progress"],"sourceRoot":""}