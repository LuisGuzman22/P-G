{"version":3,"file":"static/js/520.96dd26d8.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/photo-record.jsx","components/DailyReportCollapse.jsx","hooks/useGetCachedQueryData.js"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              label=\"Clima\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"1\">Calor moderado</option>\n              <option value=\"2\">Calor intenso</option>\n              <option value=\"3\">Frío moderado</option>\n              <option value=\"4\">Frío intenso</option>\n              <option value=\"5\">Lluvia débil</option>\n              <option value=\"6\">Lluvia moderada</option>\n              <option value=\"7\">Lluvia intensa</option>\n              <option value=\"8\">Viento débil</option>\n              <option value=\"9\">Viento moderado</option>\n              <option value=\"10\">Viento intenso</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      console.log('indirectWorkForceInitialState', indirectWorkForceInitialState)\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        label=\"Cargo\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n          return (\n            <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n              {indirectPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                console.log('item', item)\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce, indirectWorkForceList: indirectWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let indirectData of indirectWorkForceListContext) {\n      hours = hours + Number(indirectData.hh)\n      offered = offered + Number(indirectData.offeredNumber)\n      contracted = contracted + Number(indirectData.contractedNumber)\n      certified = certified + Number(indirectData.certified)\n      breaked = breaked + Number(indirectData.breakNumber)\n      workekd = workekd + Number(indirectData.workNumber)\n    }\n    setIndirectAccumulatedHours(hours)\n    setIndirectAccumulatedOffered(offered)\n    setIndirectAccumulatedContracted(contracted)\n    setIndirectAccumulatedCertified(certified)\n    setIndirectAccumulatedBreaked(breaked)\n    setIndirectAccumulatedWorked(workekd)\n    setIndirectAccumulatedActual(\n      Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n    )\n\n    const data = {\n      indirectSubtotalOfferedNumber: offered,\n      indirectSubtotalContractedNumber: contracted,\n      indirectSubtotalCertifiedNumber: certified,\n      indirectSubtotalBreakNumber: breaked,\n      indirectSubtotalWorkNumber: workekd,\n      indirectSubstotalHHNumber: hours,\n      indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n    }\n\n    setTotalIndirectWorkForce(data)\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce, directWorkForceList: directWorkForceListContext } =\n    useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    let hours = 0\n    let offered = 0\n    let contracted = 0\n    let certified = 0\n    let breaked = 0\n    let workekd = 0\n    for (let directData of directWorkForceListContext) {\n      hours = hours + Number(directData.hh)\n      offered = offered + Number(directData.offeredNumber)\n      contracted = contracted + Number(directData.contractedNumber)\n      certified = certified + Number(directData.certified)\n      breaked = breaked + Number(directData.breakNumber)\n      workekd = workekd + Number(directData.workNumber)\n    }\n    setDirectAccumulatedHours(hours)\n    setDirectAccumulatedOffered(offered)\n    setDirectAccumulatedContracted(contracted)\n    setDirectAccumulatedCertified(certified)\n    setDirectAccumulatedBreaked(breaked)\n    setDirectAccumulatedWorked(workekd)\n    setDirectAccumulatedActual(\n      Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n    )\n    const data = {\n      directSubtotalOfferedNumber: offered,\n      directSubtotalContractedNumber: contracted,\n      directSubtotalCertifiedNumber: certified,\n      directSubtotalBreakNumber: breaked,\n      directSubtotalWorkNumber: workekd,\n      directSubstotalHHNumber: hours,\n      directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n    }\n\n    setTotalDirectWorkForce(data)\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFront\"\n        label=\"Frente de trabajo\"\n        value={directDotationWorkForce.directWorkFront || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={directDotationWorkForce.directSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFrontCharge\"\n        value={directDotationWorkForce.directWorkFrontCharge || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={directDotationWorkForce.directWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n\n    // if (e.target.id === 'machineryWorkForce') {\n    //   setMachineryWorkForce(initialState) // Clear the object\n    //   setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    // }\n    // if (validate(e.target.value)) {\n    //   setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    // }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n\n    // const machineryWorkForceInitialState = {\n    //   id: uuidv4(),\n    //   machineryWorkForce: machineryWorkForce.machineryWorkForce,\n    //   machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n    //   actions: {\n    //     machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n    //     machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n    //     machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n    //     machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n    //     machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n    //     machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n    //     machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n    //   },\n    // }\n    // setMachineryWorkForce(initialState) // Clear the object\n    // setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, maquinaria y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"machineryWorkForce\"\n        value={machineryWorkForce.machineryWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machinerySubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={machineryWorkForce.machinerySubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkFrontCharge\"\n        value={machineryWorkForce.machineryWorkFrontCharge || ''}\n        label=\"Maquinaria\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"machineryWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={machineryWorkForce.machineryWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  console.log('item', item)\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipmentWorkForce') {\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentWorkForce({ ...equipmentWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.equipment.find((personal) => {\n                  return personal.id == item.equipmentWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activityFrontWork: activity.activityFrontWork,\n      primaveraId: activity.primaveraId,\n      activityName: activity.activityName,\n      activityDiscipline: activity.activityDiscipline,\n      activityTotalAmount: activity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: activity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n      activityUnit: activity.activityUnit,\n      activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n      activityHoursSpendShift: activity.activityHoursSpendShift,\n      activityHoursAccumulated: activity.activityHoursAccumulated,\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        value={activity.activityFrontWork}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}{' '}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        value={directWorkForce.directWorkForce || ''}\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      const selectedMachinery = basicQuery.machinery.find((mac) => {\n        return mac.id.toString() === e.target.value.toString()\n      })\n      setPlates(selectedMachinery.plate)\n    }\n    if (validate(e.target.value)) {\n      setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar la máquina y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Maquinaria\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"machineryPlate\"\n            value={asarcoMachinery.machineryPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      const selectedEquipment = basicQuery.equipment.find((equip) => {\n        return equip.id.toString() === e.target.value.toString()\n      })\n      setPlates(selectedEquipment.plate)\n    }\n    if (validate(e.target.value)) {\n      setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    setPlates()\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n      equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n      equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n      equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n      equipmentWaiting: equipmentPlate.equipmentWaiting,\n      equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n      equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n      equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      equipmentPlate: equipmentPlate.equipmentPlate,\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"equipmentPlate\"\n            value={equipmentPlate.equipmentPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n        return vehic.id.toString() === e.target.value.toString()\n      })\n      setPlates(selectedVehicle.plate)\n    }\n    if (validate(e.target.value)) {\n      setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    setPlates()\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n      vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n      vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n      vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n      vehicleWaiting: vehiclePlate.vehicleWaiting,\n      vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n      vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n      vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      vehiclePlate: vehiclePlate.vehiclePlate,\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"vehiclePlate\"\n            value={vehiclePlate.vehiclePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      const selectedAljibe = basicQuery.aljibe.find((alj) => {\n        return alj.id.toString() === e.target.value.toString()\n      })\n      setPlates(selectedAljibe.plate)\n    }\n    if (e.target.id === 'aljibeCachimbaName') {\n      setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registeraljibe = () => {\n    setPlates()\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      aljibeCachimbaName: aljibe.aljibeCachimbaName,\n      aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n      aljibeM3: aljibe.aljibeM3,\n      aljibePlate: aljibe.aljibePlate,\n      aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n      aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n      aljibeWorkNumber: aljibe.aljibeWorkNumber,\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"aljibePlate\"\n            value={aljibe.aljibePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeOfferedNumber\"\n                value={aljibe.aljibeOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCertifiedNumber\"\n                value={aljibe.aljibeCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeWorkNumber\"\n                value={aljibe.aljibeWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Registro fotográfico diario</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <PhotoRecord />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","company","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","projectId","id","contractId","CompanyReport","onChangeData","e","_jsx","className","children","_jsxs","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","CFormSelect","value","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","getData","useGetCachedQueryData","basicQuery","setIndirectWorkForce","useState","setIndirectWorkForceList","error","setError","indirectWorkForceListContext","target","useEffect","CToast","autohide","visible","color","onClose","CToastBody","indirectPersonal","map","indirectPersonalCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","console","log","length","item","index","charge","find","personal","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","hours","offered","contracted","breaked","workekd","indirectData","Number","data","indirectSubstotalHHNumber","disabled","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","directWorkForceListContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","directData","directSubstotalHHNumber","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","directDotationWorkForceListContext","selectedWorkFront","workFront","toString","hasSubFront","workfrontCached","_Fragment","directPersonal","directPersonalCached","CFormTextarea","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","actions","machineryCached","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","_item$machinerySubWor","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","vehicles","vehicleCached","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","vehic","deletevehicle","Activities","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","workFrontCached","registerActivity","activityInitialState","work","deleteActivity","Comments","setComments","rows","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","asarcoMachineryListContext","selectedMachinery","mac","plate","asarcoMachineryTotalsCounter","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","selectedEquipment","equip","VehiclePlate","_vehiclePlate$vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","selectedVehicle","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","PhotoRecord","Array","from","_","i","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","queryClient","useQueryClient","key","getQueryData"],"sourceRoot":""}