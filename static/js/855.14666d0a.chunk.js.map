{"version":3,"file":"static/js/855.14666d0a.chunk.js","mappings":"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","sources":["components/InformativePanel.jsx","components/DashboardPanel.jsx","components/ProjectDescription.jsx","components/Skynav.jsx","components/TechnicalDocumentation.jsx","components/TurnOverPackage.jsx","components/TeamChat.jsx","components/PIE.jsx","components/ProjectCollapse.jsx","hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/indirect-dotation-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/DailyReportCollapse.jsx","components/Project.jsx","pages/Dashboard.jsx","views/pages/page404/Page404.js"],"sourcesContent":["import React from 'react'\nimport { CCarousel, CCarouselItem, CImage, CButton } from '@coreui/react'\nconst InformativePanel = () => {\n  return (\n    <>\n      <CButton>Inicio seguro de SSO</CButton>\n\n      <CCarousel controls indicators>\n        <CCarouselItem>\n          <CImage\n            className=\"d-block w-100\"\n            src={'https://coreui.io/react/docs/static/angular-2f3764e2ec8b0b47ebe68f2f80260ef1.jpg'}\n            alt=\"slide 1\"\n          />\n        </CCarouselItem>\n        <CCarouselItem>\n          <CImage\n            className=\"d-block w-100\"\n            src={'https://coreui.io/react/docs/static/angular-2f3764e2ec8b0b47ebe68f2f80260ef1.jpg'}\n            alt=\"slide 2\"\n          />\n        </CCarouselItem>\n        <CCarouselItem>\n          <CImage\n            className=\"d-block w-100\"\n            src={'https://coreui.io/react/docs/static/angular-2f3764e2ec8b0b47ebe68f2f80260ef1.jpg'}\n            alt=\"slide 3\"\n          />\n        </CCarouselItem>\n      </CCarousel>\n      <CButton>Subir Imagen</CButton>\n    </>\n  )\n}\n\nexport default InformativePanel\n","import React from 'react'\nimport Accordion from 'src/components/Project'\n\nconst DashboardPanel = () => {\n  return <>DashboardPanel </>\n}\n\nexport default DashboardPanel\n","import React from 'react'\nimport { CCallout, CImage } from '@coreui/react'\nconst ProjectDescription = () => {\n  return (\n    <div className=\"project-description\">\n      <h2>Descripción del proyecto</h2>\n      <div className=\"project-img-container\">\n        <CImage fluid src=\"https://pgproject.cl/uploads/1705996608_a41c61e65ecf2a35c699.jpg\" />\n      </div>\n\n      <CCallout color=\"danger\">\n        Las estaciones de Bombeo EB-01, EB-02 y EB-03 incorporación de medidas de tensión para el\n        sistema de información en tiempo real (SITR), obteniendo valores de potencia activa,\n        potencia reactiva y frecuencia, datos que deben ser enviados al coordinador Eléctrico\n        Nacional (CEN) e incorporar un esquema de medida con fines de facturación para clientes\n        internos de MCEN y conectarlos a la red Ethernet existente. Las capacidades actuales de los\n        TT/CC de MCEN se encuentran copadas, no permitiendo su uso para los requerimientos de este\n        proyecto, además la clase de medida actual (0,6), no permite una medición confiable de los\n        parámetros del sistema como exige la Norma, la solución a este inconveniente se traduce en\n        la instalación de transformadores combinados de corriente y tensión.\n      </CCallout>\n    </div>\n  )\n}\n\nexport default ProjectDescription\n","import React from 'react'\nimport { CButton } from '@coreui/react'\nconst Skynav = () => {\n  return (\n    <div className=\"skynav\">\n      <CButton>Ir a SKYNAV</CButton>\n    </div>\n  )\n}\n\nexport default Skynav\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CButton,\n  CAccordion,\n  CAccordionItem,\n  CAccordionHeader,\n  CAccordionBody,\n} from '@coreui/react'\n\nconst TechnicalDocumentation = () => {\n  return (\n    <div className=\"technicalDocumentation\">\n      <h2>Documentación técnica</h2>\n\n      <CRow>\n        <CCol sm={8}>\n          <CCard>\n            <CCardBody>\n              <CCardText>\n                <CAccordion activeItemKey={1}>\n                  <CAccordionItem itemKey={1}>\n                    <CAccordionHeader>Ingeniería</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                  <CAccordionItem itemKey={2}>\n                    <CAccordionHeader>Planificación y control</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                  <CAccordionItem itemKey={3}>\n                    <CAccordionHeader>Contratos</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                </CAccordion>\n              </CCardText>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol sm={4}>\n          <CCard className=\"actions-card\">\n            <CCardBody>\n              <CCardTitle>Acciones</CCardTitle>\n              <CCardText>\n                <CRow>\n                  <CButton>Cargar adjunto</CButton>\n                </CRow>\n                <CRow>\n                  <CButton>Ir a ACONEX</CButton>\n                </CRow>\n              </CCardText>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default TechnicalDocumentation\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CButton,\n  CAccordion,\n  CAccordionItem,\n  CAccordionHeader,\n  CAccordionBody,\n} from '@coreui/react'\n\nconst TurnOverPackage = () => {\n  return (\n    <div className=\"turnOverPackage\">\n      <h2>Turn Over Package</h2>\n\n      <CRow>\n        <CCol sm={8}>\n          <CCard>\n            <CCardBody>\n              <CCardText>\n                <CAccordion activeItemKey={1}>\n                  <CAccordionItem itemKey={1}>\n                    <CAccordionHeader>Ingeniería</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                  <CAccordionItem itemKey={2}>\n                    <CAccordionHeader>Planificación y control</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                  <CAccordionItem itemKey={3}>\n                    <CAccordionHeader>Contratos</CAccordionHeader>\n                    <CAccordionBody>\n                      - Protocolo de Comunicación EB-01.jpeg (Documentación SSO)\n                    </CAccordionBody>\n                  </CAccordionItem>\n                </CAccordion>\n              </CCardText>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol sm={4}>\n          <CCard className=\"actions-card\">\n            <CCardBody>\n              <CCardTitle>Acciones</CCardTitle>\n              <CCardText>\n                <CRow>\n                  <CButton>Cargar adjunto</CButton>\n                </CRow>\n                <CRow>\n                  <CButton>Exportar adjunto</CButton>\n                </CRow>\n              </CCardText>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default TurnOverPackage\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CButton,\n  CAccordion,\n  CAccordionItem,\n  CAccordionHeader,\n  CAccordionBody,\n} from '@coreui/react'\n\nconst TeamChat = () => {\n  return (\n    <div className=\"teamChat\">\n      <h2>Chat de equipo</h2>\n    </div>\n  )\n}\n\nexport default TeamChat\n","import React from 'react'\nimport Accordion from 'src/components/Project'\n\nconst PIE = () => {\n  return <>P.I.E. </>\n}\n\nexport default PIE\n","import React, { useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\n\nimport DashboardPanel from './DashboardPanel'\nimport Page404 from 'src/views/pages/page404/Page404'\nimport ProjectDescription from './ProjectDescription'\nimport Skynav from './Skynav'\nimport TechnicalDocumentation from './TechnicalDocumentation'\nimport TurnOverPackage from './TurnOverPackage'\nimport TeamChat from './TeamChat'\nimport PIE from './PIE'\n\nconst ProjectCollapse = () => {\n  const [activeKey, setActiveKey] = useState(1)\n\n  return (\n    <>\n      <CNav variant=\"tabs\">\n        <CNavLink\n          active={activeKey === 1}\n          aria-selected={activeKey === 1}\n          onClick={() => {\n            setActiveKey(1)\n          }}\n        >\n          Dashboard\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 2}\n          aria-selected={activeKey === 2}\n          onClick={() => {\n            setActiveKey(2)\n          }}\n        >\n          Descripción del proyecto\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 3}\n          aria-selected={activeKey === 3}\n          onClick={() => {\n            setActiveKey(3)\n          }}\n        >\n          SKYNAV\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 4}\n          aria-selected={activeKey === 4}\n          onClick={() => {\n            setActiveKey(4)\n          }}\n        >\n          Documentación técnica\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 5}\n          aria-selected={activeKey === 5}\n          onClick={() => {\n            setActiveKey(5)\n          }}\n        >\n          Cumplimiento P.I.E.\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 6}\n          aria-selected={activeKey === 6}\n          onClick={() => {\n            setActiveKey(6)\n          }}\n        >\n          Turn Over Package\n        </CNavLink>\n        <CNavLink\n          active={activeKey === 7}\n          aria-selected={activeKey === 7}\n          onClick={() => {\n            setActiveKey(7)\n          }}\n        >\n          Chat de equipo\n        </CNavLink>\n      </CNav>\n      <CTabContent>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab-pane\" visible={activeKey === 1}>\n          <DashboardPanel />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"profile-tab-pane\" visible={activeKey === 2}>\n          <ProjectDescription />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab-pane\" visible={activeKey === 3}>\n          <Skynav />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab-pane\" visible={activeKey === 4}>\n          <TechnicalDocumentation />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab-pane\" visible={activeKey === 5}>\n          <PIE />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab-pane\" visible={activeKey === 6}>\n          <TurnOverPackage />\n        </CTabPane>\n        <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab-pane\" visible={activeKey === 7}>\n          <TeamChat />\n        </CTabPane>\n      </CTabContent>\n    </>\n  )\n}\n\nexport default ProjectCollapse\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReport = () => {\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comments,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('/prueba', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    console.log('🚀 ~ useRegisterDailyReport ~ company:', company)\n    console.log('🚀 ~ useRegisterDailyReport ~ indirectWorkForceList:', indirectWorkForceList)\n    console.log('🚀 ~ useRegisterDailyReport ~ directWorkForceList:', directWorkForceList)\n    console.log('🚀 ~ useRegisterDailyReport ~ totalIndirectWorkForce:', totalIndirectWorkForce)\n    console.log('🚀 ~ useRegisterDailyReport ~ totalDirectWorkForce:', totalDirectWorkForce)\n    console.log(\n      '🚀 ~ useRegisterDailyReport ~ indirectDotationWorkForceList:',\n      indirectDotationWorkForceList,\n    )\n    console.log(\n      '🚀 ~ useRegisterDailyReport ~ directDotationWorkForceList:',\n      directDotationWorkForceList,\n    )\n    console.log('🚀 ~ useRegisterDailyReport ~ machineryWorkForceList:', machineryWorkForceList)\n    console.log('🚀 ~ useRegisterDailyReport ~ equipmentWorkForceList:', equipmentWorkForceList)\n    console.log('🚀 ~ useRegisterDailyReport ~ vehicleWorkForceList:', vehicleWorkForceList)\n    console.log('🚀 ~ useRegisterDailyReport ~ incident:', incident)\n    console.log('🚀 ~ useRegisterDailyReport ~ comments:', comments)\n\n    mutation.mutate({\n      company,\n      indirectWorkForceList,\n      directWorkForceList,\n      totalIndirectWorkForce,\n      totalDirectWorkForce,\n      indirectDotationWorkForceList,\n      directDotationWorkForceList,\n      machineryWorkForceList,\n      equipmentWorkForceList,\n      vehicleWorkForceList,\n      incident,\n      comments,\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CButton } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              placeholder=\"Turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              placeholder=\"Jornada (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              placeholder=\"Turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              placeholder=\"Jornada (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n      </CForm>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        asd\n      </CButton>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndirectWorkForce = () => {\n  const initialStatee = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialStatee)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    // storeIndirectWorkForceData(e)\n    switch (e.target.id) {\n      case 'indirectWorkForce':\n        setIndirectWorkForce(initialStatee) // Clear the object\n        setIndirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorOfferedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorContractedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorCertified':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorBreakNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorWorkNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorHHNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialStatee) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalIndirectWorkForce = () => {\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalIndirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalDirectWorkForce = () => {\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalDirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"DirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormTextarea,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndirectDotationWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectDotationWorkForceObservation: undefined,\n    indirectWorkForceFront1: undefined,\n    indirectWorkForceFront2: undefined,\n    indirectWorkForceFront3: undefined,\n    indirectWorkForceFront4: undefined,\n    indirectWorkForceFront5: undefined,\n    indirectWorkForceFront6: undefined,\n    indirectWorkForceFront7: undefined,\n  }\n\n  const [indirectDotationWorkForce, setIndirectDotationWorkForce] = useState(initialState)\n  const [indirectDotationWorkForceList, setIndirectDotationWorkForceList] = useState([])\n\n  const {\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList: indirectDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    // storeIndirectWorkForceData(e)\n    switch (e.target.id) {\n      case 'indirectWorkForce':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForce: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront1':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront1: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront2':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront2: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront3':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront3: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront4':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront4: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront5':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront5: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront6':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront6: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront7':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront7: e.target.value,\n        })\n        break\n      case 'indirectDotationWorkForceObservation':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectDotationWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIndirectDotationWorkForce = () => {\n    const indirectDotationWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectDotationWorkForce.indirectWorkForce,\n      indirectDotationWorkForceObservation:\n        indirectDotationWorkForce.indirectDotationWorkForceObservation,\n      actions: {\n        indirectWorkForceFront1: indirectDotationWorkForce.indirectWorkForceFront1,\n        indirectWorkForceFront2: indirectDotationWorkForce.indirectWorkForceFront2,\n        indirectWorkForceFront3: indirectDotationWorkForce.indirectWorkForceFront3,\n        indirectWorkForceFront4: indirectDotationWorkForce.indirectWorkForceFront4,\n        indirectWorkForceFront5: indirectDotationWorkForce.indirectWorkForceFront5,\n        indirectWorkForceFront6: indirectDotationWorkForce.indirectWorkForceFront6,\n        indirectWorkForceFront7: indirectDotationWorkForce.indirectWorkForceFront7,\n      },\n    }\n    setIndirectDotationWorkForce(initialState) // Clear the object\n    setIndirectDotationWorkForceList([\n      ...indirectDotationWorkForceList,\n      indirectDotationWorkForceInitialState,\n    ])\n  }\n\n  const deleteIndirectDotationWorkForce = (id) => {\n    const newData = indirectDotationWorkForceList.filter((item) => item.id !== id)\n    setIndirectDotationWorkForceList(newData)\n\n    removeIndirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeIndirectDotationWorkForceData(indirectDotationWorkForceList)\n  }, [indirectDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront1\"\n                value={indirectDotationWorkForce.indirectWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront2\"\n                value={indirectDotationWorkForce.indirectWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront3\"\n                value={indirectDotationWorkForce.indirectWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront4\"\n                value={indirectDotationWorkForce.indirectWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront5\"\n                value={indirectDotationWorkForce.indirectWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront6\"\n                value={indirectDotationWorkForce.indirectWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront7\"\n                value={indirectDotationWorkForce.indirectWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectDotationWorkForceListContext.length > 0 &&\n        indirectDotationWorkForceListContext[0].indirectWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"indirectDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default IndirectDotationWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkForce: undefined,\n    directDotationWorkForceObservation: undefined,\n    directWorkForceFront1: undefined,\n    directWorkForceFront2: undefined,\n    directWorkForceFront3: undefined,\n    directWorkForceFront4: undefined,\n    directWorkForceFront5: undefined,\n    directWorkForceFront6: undefined,\n    directWorkForceFront7: undefined,\n  }\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectDotationWorkForce({ ...directDotationWorkForce, directWorkForce: e.target.value })\n        break\n      case 'directWorkForceFront1':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront1: e.target.value,\n        })\n        break\n      case 'directWorkForceFront2':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront2: e.target.value,\n        })\n        break\n      case 'directWorkForceFront3':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront3: e.target.value,\n        })\n        break\n      case 'directWorkForceFront4':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront4: e.target.value,\n        })\n        break\n      case 'directWorkForceFront5':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront5: e.target.value,\n        })\n        break\n      case 'directWorkForceFront6':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront6: e.target.value,\n        })\n        break\n      case 'directWorkForceFront7':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront7: e.target.value,\n        })\n        break\n      case 'directDotationWorkForceObservation':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directDotationWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directDotationWorkForce.directWorkForce,\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      actions: {\n        directWorkForceFront1: directDotationWorkForce.directWorkForceFront1,\n        directWorkForceFront2: directDotationWorkForce.directWorkForceFront2,\n        directWorkForceFront3: directDotationWorkForce.directWorkForceFront3,\n        directWorkForceFront4: directDotationWorkForce.directWorkForceFront4,\n        directWorkForceFront5: directDotationWorkForce.directWorkForceFront5,\n        directWorkForceFront6: directDotationWorkForce.directWorkForceFront6,\n        directWorkForceFront7: directDotationWorkForce.directWorkForceFront7,\n      },\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n        <option value=\"Maestro_Mayor_Mecánico\">Maestro Mayor Mecánico</option>\n        <option value=\"Maestro_Mayor_Piping\">Maestro Mayor Piping</option>\n        <option value=\"Maestro_Primera_Mecánico\">Maestro Primera Mecánico</option>\n        <option value=\"Soldador_HDPE\">Soldador HDPE</option>\n        <option value=\"Soldador_6G\">Soldador 6G</option>\n        <option value=\"Capataz_Eléctrico\">Capataz Eléctrico</option>\n        <option value=\"Maestro_Mayor_Eléctrico\">Maestro Mayor Eléctrico</option>\n        <option value=\"Maestro_Primera_Eléctrico\">Maestro Primera Eléctrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront1\"\n                value={directDotationWorkForce.directWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront2\"\n                value={directDotationWorkForce.directWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront3\"\n                value={directDotationWorkForce.directWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront4\"\n                value={directDotationWorkForce.directWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront5\"\n                value={directDotationWorkForce.directWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront6\"\n                value={directDotationWorkForce.directWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront7\"\n                value={directDotationWorkForce.directWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].directWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {directDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletedirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst DotationWorkForce = () => {\n  const initialState = {\n    workforceDotationPersonalFront1: undefined,\n    workforceDotationPersonalFront2: undefined,\n    workforceDotationPersonalFront3: undefined,\n    workforceDotationPersonalFront4: undefined,\n    workforceDotationPersonalFront5: undefined,\n    workforceDotationPersonalFront6: undefined,\n    workforceDotationPersonalFront7: undefined,\n    workforceDotationObservation: undefined,\n  }\n\n  const [workforceDotation, setWorkforceDotation] = useState(initialState)\n\n  const { storeDotationWorkfoce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'workforceDotationPersonalFront1':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront1: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront2':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront2: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront3':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront3: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront4':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront4: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront5':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront5: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront6':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront6: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront7':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront7: e.target.value,\n        })\n        break\n      case 'workforceDotationObservation':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    storeDotationWorkfoce(workforceDotation)\n  }, [workforceDotation])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">N° de personal</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CFormTextarea\n        id=\"workforceDotationObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n    machineryEffectiveTime: undefined,\n    machineryUnscheduleMaintenance: undefined,\n    machineryScheduleMaintenance: undefined,\n    machineryUnscheduleDelay: undefined,\n    machineryReserves: undefined,\n    machineryHorometer: undefined,\n    machineryOpperationalLoss: undefined,\n    machineryScheduleDelay: undefined,\n  }\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    setMachinery({ ...machinery, [e.target.id]: e.target.value })\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n        machineryEffectiveTime: machinery.machineryEffectiveTime,\n        machineryUnscheduleMaintenance: machinery.machineryUnscheduleMaintenance,\n        machineryScheduleMaintenance: machinery.machineryScheduleMaintenance,\n        machineryUnscheduleDelay: machinery.machineryUnscheduleDelay,\n        machineryReserves: machinery.machineryReserves,\n        machineryHorometer: machinery.machineryHorometer,\n        machineryOpperationalLoss: machinery.machineryOpperationalLoss,\n        machineryScheduleDelay: machinery.machineryScheduleDelay,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryEffectiveTime\"\n                value={machinery.machineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryUnscheduleMaintenance\"\n                value={machinery.machineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryScheduleMaintenance\"\n                value={machinery.machineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryUnscheduleDelay\"\n                value={machinery.machineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryReserves\"\n                value={machinery.machineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryHorometer\"\n                value={machinery.machineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOpperationalLoss\"\n                value={machinery.machineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryScheduleDelay\"\n                value={machinery.machineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'machineryWorkForce':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n        break\n      case 'machineryWorkForceFront1':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront1: e.target.value })\n        break\n      case 'machineryWorkForceFront2':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront2: e.target.value })\n        break\n      case 'machineryWorkForceFront3':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront3: e.target.value })\n        break\n      case 'machineryWorkForceFront4':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront4: e.target.value })\n        break\n      case 'machineryWorkForceFront5':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront5: e.target.value })\n        break\n      case 'machineryWorkForceFront6':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront6: e.target.value })\n        break\n      case 'machineryWorkForceFront7':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront7: e.target.value })\n        break\n      case 'machineryWorkForceObservation':\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          machineryWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.machineryWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Equipmentequipment = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    setEquipment({ ...equipment, [e.target.id]: e.target.value })\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n        equipmentEffectiveTime: equipment.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipment.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipment.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipment.equipmentOutOfService,\n        equipmentWaiting: equipment.equipmentWaiting,\n        equipmentNoOperator: equipment.equipmentNoOperator,\n        equipmentInitialHorometer: equipment.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipment.equipmentFinalHorometer,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipment.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipment.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipment.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipment.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipment.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipment.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipment.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipment.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Equipmentequipment\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'equipmentWorkForce':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n        break\n      case 'equipmentWorkForceObservation':\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          equipmentWorkForceObservation: e.target.value,\n        })\n        break\n      case 'equipmentWorkForceFront1':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront1: e.target.value })\n        break\n      case 'equipmentWorkForceFront2':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront2: e.target.value })\n        break\n      case 'equipmentWorkForceFront3':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront3: e.target.value })\n        break\n      case 'equipmentWorkForceFront4':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront4: e.target.value })\n        break\n      case 'equipmentWorkForceFront5':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront5: e.target.value })\n        break\n      case 'equipmentWorkForceFront6':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront6: e.target.value })\n        break\n      case 'equipmentWorkForceFront7':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1</option>\n        <option value=\"equipo_2\">Equipo 2</option>\n        <option value=\"equipo_3\">Equipo 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.equipmentWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        vehicleEffectiveTime: vehicle.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehicle.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehicle.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehicle.vehicleOutOfService,\n        vehicleWaiting: vehicle.vehicleWaiting,\n        vehicleNoOperator: vehicle.vehicleNoOperator,\n        vehicleInitialHorometer: vehicle.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehicle.vehicleFinalHorometer,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehicle.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehicle.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehicle.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehicle.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehicle.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehicle.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehicle.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehicle.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'vehicleWorkForce':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForce: e.target.value })\n        break\n      case 'vehicleWorkForceObservation':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceObservation: e.target.value })\n        break\n      case 'vehicleWorkForceFront1':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront1: e.target.value })\n        break\n      case 'vehicleWorkForceFront2':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront2: e.target.value })\n        break\n      case 'vehicleWorkForceFront3':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront3: e.target.value })\n        break\n      case 'vehicleWorkForceFront4':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront4: e.target.value })\n        break\n      case 'vehicleWorkForceFront5':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront5: e.target.value })\n        break\n      case 'vehicleWorkForceFront6':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront6: e.target.value })\n        break\n      case 'vehicleWorkForceFront7':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1</option>\n        <option value=\"vehiculo_2\">Vehículo 2</option>\n        <option value=\"vehiculo_3\">Vehículo 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.vehicleWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Activities = () => {\n  const initialState = {\n    activity: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activity') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    setActivity({ ...activity, [e.target.id]: e.target.value })\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activity: activity.activity,\n      actions: {\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      },\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activity\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"frente_1\">Frente de trabajo 1</option>\n        <option value=\"frente_2\">Frente de trabajo 2</option>\n        <option value=\"frente_3\">Frente de trabajo 3</option>\n        <option value=\"frente_4\">Frente de trabajo 4</option>\n        <option value=\"frente_5\">Frente de trabajo 5</option>\n        <option value=\"frente_6\">Frente de trabajo 6</option>\n        <option value=\"frente_7\">Frente de trabajo 7</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                // value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                // value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                // value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                // value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                // value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                // value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                // value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                // value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                // value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                // value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n\n      <CFormInput\n        type=\"file\"\n        id=\"inputGroupFile03\"\n        aria-describedby=\"inputGroupFileAddon03\"\n        label=\"Fotografía\"\n        aria-label=\"Upload\"\n      />\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectWorkForce(initialStatee) // Clear the object\n        setDirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceOfferedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceContractedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceCertifiedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceBreakNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceWorkNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceHHNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import React from 'react'\nimport { CAccordion, CAccordionBody, CAccordionHeader, CAccordionItem } from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nconst DailyReportCollapse = () => {\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>Equipos y maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>Equipos, maquinarias y vehiculos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>\n            Equipos, maquinarias y vehiculos menores por frente de trabajo\n          </CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import React, { useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport InformativePanel from 'src/components/InformativePanel'\nimport ProjectCollapse from 'src/components/ProjectCollapse'\nimport DailyReportCollapse from 'src/components/DailyReportCollapse'\n\nconst Project = () => {\n  return (\n    <CAccordion className=\"project-accordion\" activeItemKey={1}>\n      <CAccordionItem itemKey={1}>\n        <CAccordionHeader>Panel Informativo</CAccordionHeader>\n        <CAccordionBody className=\"informative-panel-accordion\">\n          <InformativePanel />\n        </CAccordionBody>\n      </CAccordionItem>\n      <CAccordionItem itemKey={2} onClick={console.log('click accordion')}>\n        <CAccordionHeader className=\"nav-accordion\">Proyecto</CAccordionHeader>\n        <CAccordionBody>\n          <ProjectCollapse />\n        </CAccordionBody>\n      </CAccordionItem>\n      <CAccordionItem itemKey={3}>\n        <CAccordionHeader>Informe Diario</CAccordionHeader>\n        <CAccordionBody>\n          <DailyReportCollapse />\n        </CAccordionBody>\n      </CAccordionItem>\n      <CAccordionItem itemKey={4}>\n        <CAccordionHeader>Actividades Trisemanal</CAccordionHeader>\n        <CAccordionBody>\n          <>\n            <CRow>\n              <CCol sm={1}>ID</CCol>\n              <CCol sm={3}>Actividad</CCol>\n              <CCol sm={2}>Inicio</CCol>\n              <CCol sm={2}>Termino</CCol>\n              <CCol sm={1}>Suministro</CCol>\n              <CCol sm={1}>Avance</CCol>\n              <CCol sm={1}>Protocolo</CCol>\n              <CCol sm={1}>Detalle</CCol>\n            </CRow>\n            <CRow>\n              <CCol sm={12}>###</CCol>\n            </CRow>\n            <CRow>\n              <CCol sm={1}>1</CCol>\n              <CCol sm={3}>Cumplimiento Normati</CCol>\n            </CRow>\n            <CRow>\n              <CCol sm={1}>2</CCol>\n              <CCol sm={3}>Hitos</CCol>\n            </CRow>\n            <CRow>\n              <CCol sm={1}></CCol>\n              <CCol sm={3}>Hitos muro sur</CCol>\n            </CRow>\n            <CRow>\n              <CCol sm={1}></CCol>\n              <CCol sm={3}>Inicio Excavación Zona 1 (P1-22)</CCol>\n              <CCol sm={2}>05-01-2024 08:00:00</CCol>\n              <CCol sm={2}>05-01-2024 08:00:00</CCol>\n            </CRow>\n          </>\n        </CAccordionBody>\n      </CAccordionItem>\n      <CAccordionItem itemKey={5}>\n        <CAccordionHeader>Carta Gantt</CAccordionHeader>\n        <CAccordionBody>\n          <></>\n        </CAccordionBody>\n      </CAccordionItem>\n      <CAccordionItem itemKey={6}>\n        <CAccordionHeader>Detalles de avance</CAccordionHeader>\n        <CAccordionBody>\n          <></>\n        </CAccordionBody>\n      </CAccordionItem>\n    </CAccordion>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport Project from 'src/components/Project'\n\nconst Dashboard = () => {\n  return (\n    <>\n      <Project />\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMagnifyingGlass } from '@coreui/icons'\n\nconst Page404 = () => {\n  return (\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={6}>\n            <div className=\"clearfix\">\n              <h1 className=\"float-start display-3 me-4\">404</h1>\n              <h4 className=\"pt-3\">Oops! You{\"'\"}re lost.</h4>\n              <p className=\"text-body-secondary float-start\">\n                The page you are looking for was not found.\n              </p>\n            </div>\n            <CInputGroup className=\"input-prepend\">\n              <CInputGroupText>\n                <CIcon icon={cilMagnifyingGlass} />\n              </CInputGroupText>\n              <CFormInput type=\"text\" placeholder=\"What are you looking for?\" />\n              <CButton color=\"info\">Search</CButton>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Page404\n"],"names":["InformativePanel","_jsxs","_Fragment","children","_jsx","CButton","CCarousel","controls","indicators","CCarouselItem","CImage","className","src","alt","DashboardPanel","ProjectDescription","fluid","CCallout","color","Skynav","TechnicalDocumentation","CRow","CCol","sm","CCard","CCardBody","CCardText","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","CCardTitle","TurnOverPackage","TeamChat","PIE","ProjectCollapse","activeKey","setActiveKey","useState","CNav","variant","CNavLink","active","onClick","CTabContent","CTabPane","role","visible","useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","storeTotalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","useContext","DailyReportContext","useRegisterDailyReport","company","totalIndirectWorkForce","totalDirectWorkForce","incident","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","console","log","mutate","CompanyReport","onChangeData","e","CForm","CFormInput","type","id","label","placeholder","text","onChange","IndirectWorkForce","initialStatee","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","setIndirectWorkForceList","indirectWorkForceListContext","target","value","useEffect","CFormSelect","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","map","item","index","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","colSpan","TotalDirectWorkForce","IndirectDotationWorkForce","initialState","indirectDotationWorkForceObservation","indirectWorkForceFront1","indirectWorkForceFront2","indirectWorkForceFront3","indirectWorkForceFront4","indirectWorkForceFront5","indirectWorkForceFront6","indirectWorkForceFront7","indirectDotationWorkForce","setIndirectDotationWorkForce","setIndirectDotationWorkForceList","indirectDotationWorkForceListContext","registerIndirectDotationWorkForce","indirectDotationWorkForceInitialState","deleteIndirectDotationWorkForce","CFormTextarea","DirectDotationWorkForce","directWorkForce","directDotationWorkForceObservation","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationWorkForceListContext","registerDirectDotationWorkForce","directDotationWorkForceInitialState","deletedirectDotationWorkForce","DotationWorkForce","workforceDotationPersonalFront1","workforceDotationPersonalFront2","workforceDotationPersonalFront3","workforceDotationPersonalFront4","workforceDotationPersonalFront5","workforceDotationPersonalFront6","workforceDotationPersonalFront7","workforceDotationObservation","workforceDotation","setWorkforceDotation","Machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","machineryEffectiveTime","machineryUnscheduleMaintenance","machineryScheduleMaintenance","machineryUnscheduleDelay","machineryReserves","machineryHorometer","machineryOpperationalLoss","machineryScheduleDelay","setMachinery","setMachineryList","machineryListContext","registerMachinery","machineryInitialState","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","Equipmentequipment","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","setEquipment","setEquipmentList","equipmentListContext","registerEquipment","equipmentInitialState","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","setVehicle","setVehicleList","vehicleListContext","registerVehicle","vehicleInitialState","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","vehicleWorkForceObservation","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activity","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","setActivity","setActivityList","activityListContext","disabled","registerActivity","activityInitialState","Comments","setComments","rows","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","DailyReportCollapse","EquipmentMachinery","Project","Dashboard","Page404","CContainer","md","CInputGroup","CInputGroupText","CIcon","icon","cilMagnifyingGlass"],"sourceRoot":""}