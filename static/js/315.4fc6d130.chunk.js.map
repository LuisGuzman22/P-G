{"version":3,"file":"static/js/315.4fc6d130.chunk.js","mappings":"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EAAmB,oBACnBwK,EAAmB,qBACnBC,EAAoB,mBACpBH,EAAkB,kBAClByR,EAAiB,mBACjBC,GAAkB,iBAClBH,GAAgB,YAChBlJ,GAAW,aACXC,GAAY,WACZL,GAAU,aACV+M,KACEC,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,MAAO,CACLld,UACAD,mBACAoO,6BACA1J,uBACAC,wBACAH,sBACA0J,wBACAG,0BACAgJ,8BACAC,yBACAtC,4BACAtL,uBACA+U,qCACAC,kCACAC,gCACA3b,mCACAC,gCACAL,8BACAgc,wBACAxM,yBACAE,0BACAC,2BACAtJ,0BACAC,2BACAH,yBACA8V,wBACAC,yBACA9B,uBACAtd,eACAF,UACA0N,gBACAL,WACAM,iBACAoG,iBACAC,kBACAL,gBACA9M,iBACAC,kBACAL,gBACAuV,eACAC,gBACAL,cACApiB,gBACAC,iBACAL,eACAqF,uBACAC,wBACAP,sBACAwK,sBACAC,uBACAH,qBACAyR,oBACAC,sBACAH,oBACAlJ,eACAC,gBACAL,cACA+M,gBACD,C,mCC5HI,MAAMxjB,EAAYslB,GAEhBA,EAAEC,MADC,oB","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    <option value=\"Obras_civiles\">Obras Civiles</option>\n                    <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAcvancePercent\"\n                    value={activity.activityAccumulatedAcvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isEditMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        disabled={isEditMode}\n        value={isEditMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={currentLocation.includes('/edit')}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteEquipmentWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import React, { useEffect, useState } from 'react'\nimport { CChart } from '@coreui/react-chartjs'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { getStyle } from '@coreui/utils'\n\nconst Graphs = () => {\n  const {\n    asarcoMachineryList: asarcoMachineryListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryListContext) {\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryListContext])\n\n  useEffect(() => {\n    setTotalPlanedDotation(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n    setTotalWorkDotation(totalDirectWorkForceContext.directSubtotalWorkNumber)\n  }, [totalDirectWorkForceContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {asarcoMachineryListContext && asarcoMachineryListContext.length > 0 && (\n        <>\n          <CChart\n            type=\"pie\"\n            data={{\n              labels: [\n                'Tiempo Efectivo (Hrs)',\n                'Mantención Programada (Hrs)',\n                'Demora Programada (Hrs)',\n                'Perdida Operacional (Hrs)',\n                'Mantención No Programada (Hrs)',\n                'Demora No Programada (Hrs)',\n                'Reservas (Hrs)',\n              ],\n              datasets: [\n                {\n                  labels: [\n                    'Tiempo Efectivo (Hrs)',\n                    'Mantención Programada (Hrs)',\n                    'Demora Programada (Hrs)',\n                    'Perdida Operacional (Hrs)',\n                    'Mantención No Programada (Hrs)',\n                    'Demora No Programada (Hrs)',\n                    'Reservas (Hrs)',\n                  ],\n                  hoverOffset: 4,\n                  backgroundColor: [\n                    '#41B883',\n                    '#E46651',\n                    '#00D8FF',\n                    '#DD1B16',\n                    '#F41203',\n                    '#002312',\n                    '#A12942',\n                  ],\n                  data: [\n                    // 1, 2, 3, 4, 5, 6, 7,\n                    ((effectiveTime / totals) * 100).toFixed(2),\n                    ((scheduleMaintimeTime / totals) * 100).toFixed(2),\n                    ((scheduleDelay / totals) * 100).toFixed(2),\n                    ((opperationalLoss / totals) * 100).toFixed(2),\n                    ((unscheduleMaintimeTime / totals) * 100).toFixed(2),\n                    ((unscheduleDelay / totals) * 100).toFixed(2),\n                    ((reserves / totals) * 100).toFixed(2),\n                  ],\n                },\n              ],\n            }}\n            options={{\n              showAllTooltips: true,\n              interaction: {\n                intersect: false,\n                mode: 'index',\n              },\n              plugins: {\n                title: {\n                  display: true,\n                  // text: (ctx) => 'Tooltip position mode: ' + ctx.chart.options.plugins.tooltip.position,\n                },\n              },\n\n              //   plugins: {\n              //     legend: {\n              //       labels: {\n              //         color: getStyle('--cui-body-color'),\n              //       },\n              //     },\n              //   },\n            }}\n          />\n        </>\n      )}\n      {totalDirectWorkForceContext && (\n        <>\n          <CChart\n            type=\"bar\"\n            data={{\n              labels: ['Dotación Planeada Directos Total', 'Dotación Directos Obra Total'],\n              datasets: [\n                {\n                  label: 'Dotación Directa Total',\n                  backgroundColor: ['rgba(0,103,102,255)', 'rgba(239,132,60,255)'],\n                  borderColor: 'rgb(255, 99, 132)',\n                  data: [totalPlanedDotation, totalWorkDotation],\n                },\n              ],\n            }}\n            labels=\"Dotación Directa Total\"\n            options={{\n              plugins: {\n                legend: {\n                  labels: {\n                    color: getStyle('--cui-body-color'),\n                  },\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    color: getStyle('--cui-border-color-translucent'),\n                  },\n                  ticks: {\n                    color: getStyle('--cui-body-color'),\n                  },\n                },\n                y: {\n                  grid: {\n                    color: getStyle('--cui-border-color-translucent'),\n                  },\n                  ticks: {\n                    color: getStyle('--cui-body-color'),\n                  },\n                },\n              },\n            }}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIncident(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeOfferedNumber\"\n                    value={aljibe.aljibeOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCertifiedNumber\"\n                    value={aljibe.aljibeCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeWorkNumber\"\n                    value={aljibe.aljibeWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    if (!isEditMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isEditMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isEditMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isEditMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit')) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit') && total > 0)\n      storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !currentLocation.includes('/edit')\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={currentLocation.includes('/edit')}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","isEditMode","useLocation","pathname","includes","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","item","index","charge","find","work","newData","filter","deleteActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","selectedMachinery","mac","toString","plate","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","currentLocation","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","dailyReportIndirectPersonalShift","indirect_staff_shift","indirect_staf","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","personal","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","selectedEquipment","equip","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","deleteEquipmentWorkForce","Graphs","totalDirectWorkForce","totalDirectWorkForceContext","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","asarcoData","directSubtotalOfferedNumber","directSubtotalWorkNumber","CChart","labels","datasets","hoverOffset","backgroundColor","options","showAllTooltips","interaction","intersect","mode","plugins","title","display","borderColor","legend","getStyle","scales","x","grid","ticks","y","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","deleteIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","deleteMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","offered","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","Loading","Lottie","animationData","loadingjson","loop","width","projectLS","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","onSuccess","onError","err","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}