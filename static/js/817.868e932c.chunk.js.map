{"version":3,"file":"static/js/817.868e932c.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/DailyReportCollapse.jsx","hooks/useGetCachedQueryData.js"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialState) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n          return (\n            <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n              {indirectPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({ ...totalIndirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalContractedNumber || ''}\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalCertifiedNumber || ''}\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalBreakNumber || ''}\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalWorkNumber || ''}\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalHHNumber || ''}\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={totalIndirectWorkForce.indirectCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={totalDirectWorkForce.directSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={totalDirectWorkForce.directSubtotalContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={totalDirectWorkForce.directSubtotalCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={totalDirectWorkForce.directSubtotalBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={totalDirectWorkForce.directSubtotalWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={totalDirectWorkForce.directSubtotalHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={totalDirectWorkForce.directCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n  }\n\n  const directDotationTotalsInitialState = {\n    directWorkForceFront1: 0,\n    directWorkForceFront2: 0,\n    directWorkForceFront3: 0,\n    directWorkForceFront4: 0,\n    directWorkForceFront5: 0,\n    directWorkForceFront6: 0,\n    directWorkForceFront7: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [directDotationTotals, setDirectDotationTotals] = useState(directDotationTotalsInitialState)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      directWorkFront: directDotationWorkForce.directWorkFront,\n      directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n      directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n      directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  useEffect(() => {\n    //   let directDotationTotalsCounter = {\n    //     directWorkForceFront1: 0,\n    //     directWorkForceFront2: 0,\n    //     directWorkForceFront3: 0,\n    //     directWorkForceFront4: 0,\n    //     directWorkForceFront5: 0,\n    //     directWorkForceFront6: 0,\n    //     directWorkForceFront7: 0,\n    //   }\n    //   for (let data of directDotationWorkForceListContext) {\n    //     directDotationTotalsCounter = {\n    //       directWorkForceFront1:\n    //         Number(directDotationTotalsCounter.directWorkForceFront1) +\n    //         Number(data.actions.directWorkForceFront1 ?? 0),\n    //       directWorkForceFront2:\n    //         Number(directDotationTotalsCounter.directWorkForceFront2) +\n    //         Number(data.actions.directWorkForceFront2 ?? 0),\n    //       directWorkForceFront3:\n    //         Number(directDotationTotalsCounter.directWorkForceFront3) +\n    //         Number(data.actions.directWorkForceFront3 ?? 0),\n    //       directWorkForceFront4:\n    //         Number(directDotationTotalsCounter.directWorkForceFront4) +\n    //         Number(data.actions.directWorkForceFront4 ?? 0),\n    //       directWorkForceFront5:\n    //         Number(directDotationTotalsCounter.directWorkForceFront5) +\n    //         Number(data.actions.directWorkForceFront5 ?? 0),\n    //       directWorkForceFront6:\n    //         Number(directDotationTotalsCounter.directWorkForceFront6) +\n    //         Number(data.actions.directWorkForceFront6 ?? 0),\n    //       directWorkForceFront7:\n    //         Number(directDotationTotalsCounter.directWorkForceFront7) +\n    //         Number(data.actions.directWorkForceFront7 ?? 0),\n    //     }\n    //   }\n    //   setDirectDotationTotals(directDotationTotalsCounter)\n  }, [directDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFront\"\n        label=\"Frente de trabajo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workfrontCached) => {\n          return (\n            <option key={workfrontCached.id} value={workfrontCached.id}>\n              {workfrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directSubWorkFront\"\n        label=\"SubFrente de trabajo\"\n        value={directDotationWorkForce.directSubWorkFront || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkFrontCharge\"\n        label=\"Cargo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n      <CFormInput\n        type=\"text\"\n        id=\"directWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={directDotationWorkForce.directWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n\n          // <CTable className=\"resume-table\">\n          //   <CTableHead>\n          //     <CTableRow>\n          //       <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          //       <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n          //     </CTableRow>\n          //   </CTableHead>\n          //   <CTableBody>\n          //     {directDotationWorkForceListContext.map((item, index) => {\n          //       const charge = basicQuery.directPersonal.find((personal) => {\n          //         return personal.id == item.directWorkForce\n          //       })\n          //       return (\n          //         <CTableRow key={index}>\n          //           <CTableDataCell>{charge.name}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront1 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront2 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront3 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront4 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront5 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront6 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>{item.actions.directWorkForceFront7 ?? 0}</CTableDataCell>\n          //           <CTableDataCell>\n          //             <CButton\n          //               className=\"btn-project-action\"\n          //               onClick={() => {\n          //                 deletedirectDotationWorkForce(item.id)\n          //               }}\n          //             >\n          //               eliminar\n          //             </CButton>\n          //           </CTableDataCell>\n          //         </CTableRow>\n          //       )\n          //     })}\n          //     <CTableRow key={'total'}>\n          //       <CTableDataCell>Total</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront1}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront2}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront3}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront4}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront5}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront6}</CTableDataCell>\n          //       <CTableDataCell>{directDotationTotals.directWorkForceFront7}</CTableDataCell>\n          //     </CTableRow>\n          //   </CTableBody>\n          // </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machineryWorkForce') {\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.machinery.find((machinery) => {\n                  return machinery.id == item.machineryWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipmentWorkForce') {\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentWorkForce({ ...equipmentWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.equipment.find((personal) => {\n                  return personal.id == item.equipmentWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicleWorkForce') {\n      setVehicleWorkForce(initialState) // Clear the object\n      setVehicleWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicleWorkForce({ ...vehicleWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.vehicles.find((vehic) => {\n                  return vehic.id == item.vehicleWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activityFrontWork: activity.activityFrontWork,\n      primaveraId: activity.primaveraId,\n      activityName: activity.activityName,\n      activityDiscipline: activity.activityDiscipline,\n      activityTotalAmount: activity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: activity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n      activityUnit: activity.activityUnit,\n      activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n      activityHoursSpendShift: activity.activityHoursSpendShift,\n      activityHoursAccumulated: activity.activityHoursAccumulated,\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        value={activity.activityFrontWork}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}{' '}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const MAX_IMAGES = 10\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    const asarcoMachineryInitialState = {\n      id: uuidv4(),\n      machinery: asarcoMachinery.machinery,\n      actions: {\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n      },\n    }\n    setAsarcoMachinery(initialState) // Clear the object\n    setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.actions.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.actions.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.actions.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.actions.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.actions.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.actions.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.actions.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.actions.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>\n                    {item.actions.asarcoMachineryUnscheduleMaintenance}\n                  </CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      actions: {\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      },\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      actions: {\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      },\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registeraljibe = () => {\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      actions: {\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n      },\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeCachimbaName: 0,\n      aljibeQuantityTurns: 0,\n      aljibeM3: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeCachimbaName:\n          Number(aljibeTotalsCounter.aljibeCachimbaName) +\n          Number(data.actions.aljibeCachimbaName ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) +\n          Number(data.actions.aljibeQuantityTurns ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.actions.aljibeM3 ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const charge = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCachimbaName ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>18) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","company","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","projectId","id","contractId","CompanyReport","onChangeData","e","_jsxs","className","children","_jsx","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","CFormSelect","value","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","getData","useGetCachedQueryData","basicQuery","setIndirectWorkForce","useState","setIndirectWorkForceList","indirectWorkForceListContext","target","useEffect","indirectPersonal","map","indirectPersonalCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","item","index","charge","find","personal","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","setTotalDirectWorkForce","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationTotals","setDirectDotationTotals","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForceListContext","workFront","workfrontCached","directPersonal","directPersonalCached","CFormTextarea","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_Fragment","selectedWorkFront","workF","selectedCharge","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","data","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","Number","machineryCached","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","vehicles","vehicleCached","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","vehic","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","workFrontCached","disabled","registerActivity","activityInitialState","work","deleteActivity","Comments","setComments","rows","Array","from","_","i","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","asarcoMachineryListContext","asarcoMachineryTotalsCounter","_data$actions$asarcoM","_data$actions$asarcoM2","_data$actions$asarcoM3","_data$actions$asarcoM4","_data$actions$asarcoM5","_data$actions$asarcoM6","_data$actions$asarcoM7","_data$actions$asarcoM8","registerAsarcoMachinery","asarcoMachineryInitialState","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","VehiclePlate","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","registerVehiclePlate","vehiclePlateInitialState","_item$actions$vehicle4","_item$actions$vehicle5","_item$actions$vehicle6","_item$actions$vehicle7","_item$actions$vehicle8","deletevehiclePlate","IndustrialWaterControl","_aljibeTotals$aljibeC","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","aljibeTotalsCounter","_data$actions$aljibeC","_data$actions$aljibeQ","_data$actions$aljibeM","aljibeCached","registeraljibe","aljibeInitialState","_item$actions$aljibeC","_item$actions$aljibeQ","_item$actions$aljibeM","alj","deletealjibe","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","queryClient","useQueryClient","key","getQueryData"],"sourceRoot":""}