{"version":3,"file":"static/js/446.f94e45b8.chunk.js","mappings":"oHAEA,MAkBA,EAlB+BA,KAetB,CAAEC,YAdYC,IACnBC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUJ,GAAM,EAajCK,aAXAL,IACpBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,GAAM,EAUpBM,WAPjBA,IACVL,aAAaM,QAAQ,WAMkBC,YAJ3BR,GACZC,aAAaM,QAAQ,a,2ECZhC,MAAME,EAAYC,EAAAA,MAAW,IAAM,6FAC7BC,EAAcD,EAAAA,MAAW,IAAM,mFAC/BE,EAASF,EAAAA,MAAW,IAAM,6FAC1BG,EAAQH,EAAAA,MAAW,IAAM,6FACzBI,EAAUJ,EAAAA,MAAW,IAAM,6FAC3BK,EAAmBL,EAAAA,MAAW,IAAM,iCACpCM,EAAaN,EAAAA,MAAW,IAAM,iCAuHpC,EA/De,CACb,CAAEO,KAAM,IAAKC,KAAM,SACnB,CAAED,KAAM,SAAUC,KAAM,SACxB,CAAED,KAAM,aAAcC,KAAM,YAAaC,QAASV,GAClD,CAAEQ,KAAM,cAAeC,KAAM,aAAcC,QAASH,GACpD,CAAEC,KAAM,qBAAsBC,KAAM,oBAAqBC,QAASJ,GAClE,CAAEE,KAAM,YAAaC,KAAM,WAAYC,QAASL,GAChD,CAAEG,KAAM,kBAAmBC,KAAM,iBAAkBC,QAASR,GAC5D,CAAEM,KAAM,cAAeC,KAAM,yBAA0BC,QAASH,GAChE,CAAEC,KAAM,eAAgBC,KAAM,cAAeC,QAASN,GACtD,CAAEI,KAAM,UAAWC,KAAM,qBAAsBC,QAASP,GACxD,CAAEK,KAAM,yBAA0BC,KAAM,wBAAyBC,QA/DrCT,EAAAA,MAAW,IAAM,2EAiE7C,CACEO,KAAM,yBACNC,KAAM,wBACNC,QAnE2BT,EAAAA,MAAW,IAAM,4EAqE9C,CAAEO,KAAM,aAAcC,KAAM,YAAaC,QApE9BT,EAAAA,MAAW,IAAM,mC,gDCN9B,MAAMU,EAAgBA,KACpB,MAAMC,GAAkBC,EAAAA,EAAAA,MAAcC,UAChC,WAAEjB,EAAU,YAAEE,IAAgBV,EAAAA,EAAAA,KAC9B0B,EAAYrB,KAAKsB,MAAMnB,KACvBoB,EAAavB,KAAKsB,MAAMjB,KAuBxBmB,EAhBkBC,KACtB,MAAMD,EAAc,GAYpB,OAXAC,EAASC,MAAM,KAAKC,QAAO,CAACC,EAAMC,EAAMC,EAAOC,KAC7C,MAAMC,EAAe,GAAAC,OAAML,EAAI,KAAAK,OAAIJ,GAC7BK,EATWC,EAACf,EAAUgB,KAC9B,MAAMC,EAAeD,EAAOE,MAAMC,GAAUA,EAAMzB,OAASM,IAC3D,QAAOiB,GAAeA,EAAatB,IAAY,EAO3BoB,CAAaH,EAAiBI,GAOhD,OANAF,GACEV,EAAYgB,KAAK,CACfpB,SAAUY,EACVjB,KAAMmB,EACNO,OAAQX,EAAQ,IAAMC,EAAMW,SAEzBV,CAAe,IAEjBR,CAAW,EAGAmB,CAAezB,GAEnC,OACE0B,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,UAAU,OAAMC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAK,eAAcH,SAAC,SACpCvB,EAAY2B,KAAI,CAACC,EAAYtB,KAE1BuB,EAAAA,EAAAA,eAACJ,EAAAA,EAAe,IACTG,EAAWX,OAAS,CAAEA,QAAQ,GAAS,CAAES,KAAME,EAAWhC,UAC/DkC,IAAKxB,GAEJsB,EAAWrC,SAIlBiC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACR,QAAQ,EAAKM,SAAW,OAAT1B,QAAS,IAATA,OAAS,EAATA,EAAWN,QAC3CiC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACR,QAAQ,EAAKM,SAAY,OAAVxB,QAAU,IAAVA,OAAU,EAAVA,EAAYR,SAChC,EAIlB,EAAeR,EAAAA,KAAWU,G,yBCjD1B,MAAMsC,EAAaA,KAEfP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACV,UAAU,OAAOW,IAAE,EAAAV,UAC7BC,EAAAA,EAAAA,KAACU,EAAAA,SAAQ,CAACC,UAAUX,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,MAAM,YAAad,UAC/CH,EAAAA,EAAAA,MAACkB,EAAAA,GAAM,CAAAf,SAAA,CACJX,EAAOe,KAAI,CAACZ,EAAOwB,IAEhBxB,EAAMvB,UACJgC,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAEJlD,KAAMyB,EAAMzB,KACZmD,MAAO1B,EAAM0B,MACblD,KAAMwB,EAAMxB,KACZC,SAASgC,EAAAA,EAAAA,KAACT,EAAMvB,QAAO,KAJlB+C,MASbf,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAAClD,KAAK,IAAIE,SAASgC,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACC,GAAG,QAAQC,SAAO,aAO/D,EAAe7D,EAAAA,KAAWgD,G,eC7B1B,MAAMc,EAAYA,KAEdrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACxB,UAAU,OAAMC,UACvBC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,qFAQ/B,EAAexC,EAAAA,KAAW8D,G,6JCS1B,MC6EA,EAvEkBE,KAChB,MAAMC,GAAYC,EAAAA,EAAAA,WACZ,UAAEC,EAAS,aAAEC,IAAiBC,EAAAA,EAAAA,GAAc,SAE5CC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,cASjD,OAPAG,EAAAA,EAAAA,YAAU,KACRC,SAASC,iBAAiB,UAAU,KAClCZ,EAAUa,SACRb,EAAUa,QAAQC,UAAUC,OAAO,YAAaJ,SAASK,gBAAgBC,UAAY,EAAE,GACzF,GACD,KAGD7C,EAAAA,EAAAA,MAAC8C,EAAAA,EAAO,CAACC,SAAS,SAAS7C,UAAU,WAAW8C,IAAKpB,EAAUzB,SAAA,EAC7DH,EAAAA,EAAAA,MAACY,EAAAA,EAAU,CAACV,UAAU,qBAAqB+C,OAAK,EAAA9C,SAAA,EAC9CC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAc,CACbC,QAASA,IAAMlB,EAAS,CAAEmB,KAAM,MAAOjB,aAAcA,IACrDkB,MAAO,CAAEC,kBAAmB,SAAUnD,UAEtCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAASC,KAAK,UAG7B1D,EAAAA,EAAAA,MAAC2D,EAAAA,EAAU,CAAAxD,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+CAEjBF,EAAAA,EAAAA,MAAC4D,EAAAA,EAAS,CAACC,QAAQ,WAAWC,UAAU,aAAY3D,SAAA,EAClDC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAe,CAACC,OAAO,EAAM7D,SACb,SAAd2B,GACC1B,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMS,EAAAA,EAASP,KAAK,OACX,SAAd5B,GACF1B,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMU,EAAAA,EAAaR,KAAK,QAE/BtD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMW,EAAAA,EAAQT,KAAK,UAG9B1D,EAAAA,EAAAA,MAACoE,EAAAA,EAAa,CAAAjE,SAAA,EACZH,EAAAA,EAAAA,MAACqE,EAAAA,EAAa,CACZxE,OAAsB,UAAdiC,EACR5B,UAAU,4BACVoE,GAAG,SACHlB,KAAK,SACLD,QAASA,IAAMpB,EAAa,SAAS5B,SAAA,EAErCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACrD,UAAU,OAAOsD,KAAMW,EAAAA,EAAQT,KAAK,OAAO,aAEpD1D,EAAAA,EAAAA,MAACqE,EAAAA,EAAa,CACZxE,OAAsB,SAAdiC,EACR5B,UAAU,4BACVoE,GAAG,SACHlB,KAAK,SACLD,QAASA,IAAMpB,EAAa,QAAQ5B,SAAA,EAEpCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACrD,UAAU,OAAOsD,KAAMS,EAAAA,EAASP,KAAK,OAAO,kBAIzDtD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAIrBE,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACV,UAAU,OAAO+C,OAAK,EAAA9C,UAChCC,EAAAA,EAAAA,KAAC/B,EAAa,QAER,E,0HC3FP,MAAMkG,EAAgBC,IAAgB,IAAf,MAAEC,GAAOD,GACpBjG,EAAAA,EAAAA,OACAmG,EAAAA,EAAAA,MADjB,MAGMC,EAAU,SAACxG,EAAMqF,EAAMoB,GAA2B,IAApBC,EAAMC,UAAAhF,OAAA,QAAAiF,IAAAD,UAAA,IAAAA,UAAA,GACxC,OACE9E,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA7E,SAAA,CACGqD,GAEGqB,IACEzE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,WAAUC,UACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sBAGvB/B,GAAQA,EACRyG,IACCxE,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,CAAChE,MAAO2D,EAAM3D,MAAOf,UAAU,UAASC,SAC5CyE,EAAMM,SAKjB,EAEMC,EAAU,SAACC,EAAMlG,GAA2B,IAApB2F,EAAMC,UAAAhF,OAAA,QAAAiF,IAAAD,UAAA,IAAAA,UAAA,GAClC,MAAM,UAAEO,EAAS,KAAElH,EAAI,MAAEyG,EAAK,KAAEpB,KAAS8B,GAASF,EAC5CG,EAAYF,EAClB,OACEjF,EAAAA,EAAAA,KAACmF,EAAS,CAACjB,GAAG,MAAKnE,SAChBmF,EAAK/D,IAAM+D,EAAKhF,MACfF,EAAAA,EAAAA,KAACoF,EAAAA,EAAQ,IAAMF,EAAK/D,IAAM,CAAE+C,GAAImB,EAAAA,OAAgBH,EAAInF,SACjDwE,EAAQxG,EAAMqF,EAAMoB,EAAOC,KAG9BF,EAAQxG,EAAMqF,EAAMoB,EAAOC,IANN3F,EAU7B,EAEMwG,EAAWA,CAACN,EAAMlG,KAAW,IAADyG,EAChC,MAAM,UAAEN,EAAS,KAAElH,EAAI,KAAEqF,EAAI,MAAEiB,EAAK,GAAElD,KAAO+D,GAASF,EAChDG,EAAYF,EAClB,OACEjF,EAAAA,EAAAA,KAACmF,EAAS,CAACK,SAAO,EAACtB,GAAG,MAAkBuB,QAASlB,EAAQxG,EAAMqF,MAAW8B,EAAInF,SACjE,QADiEwF,EAC3EP,EAAKX,aAAK,IAAAkB,OAAA,EAAVA,EAAYpF,KAAI,CAAC6E,EAAMlG,IACtBkG,EAAKX,MAAQiB,EAASN,EAAMlG,GAASiG,EAAQC,EAAMlG,GAAO,MAF7BA,EAIrB,EAIhB,OACEkB,EAAAA,EAAAA,KAAC0F,EAAAA,EAAW,CAACxB,GAAIyB,EAAAA,EAAU5F,SACxBsE,GACCA,EAAMlE,KAAI,CAAC6E,EAAMlG,IAAWkG,EAAKX,MAAQiB,EAASN,EAAMlG,GAASiG,EAAQC,EAAMlG,MACrE,E,4JC/ClB,MAqFA,GArFa,CACX,CACEmG,UAAWW,GAAAA,EACX7H,KAAM,aAER,CACEkH,UAAWY,GAAAA,EACX9H,KAAM,YACNoD,GAAI,QACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAM0C,EAAAA,EAAcC,gBAAgB,aACjD1B,MAAO,CACL,CACEY,UAAWe,GAAAA,EACXjI,KAAM,SACNoD,GAAI,aACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAM6C,GAAAA,EAASF,gBAAgB,cAE9C,CACEd,UAAWe,GAAAA,EACXjI,KAAM,oBACNoD,GAAI,qBACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAM8C,GAAAA,EAASH,gBAAgB,cAE9C,CACEd,UAAWe,GAAAA,EACXjI,KAAM,WACNoD,GAAI,YACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAM+C,GAAAA,EAAcJ,gBAAgB,cAEnD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,iBACNoD,GAAI,kBACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMgD,GAAAA,EAAYL,gBAAgB,cAEjD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,yBACNoD,GAAI,cACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMiD,GAAAA,EAAgBN,gBAAgB,cAErD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,cACNoD,GAAI,eACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMkD,GAAAA,EAAaP,gBAAgB,cAElD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,qBACNoD,GAAI,UACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMmD,GAAAA,EAAUR,gBAAgB,gBAUnD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,wBACNoD,GAAI,yBACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMoD,GAAAA,EAAWT,gBAAgB,cAEhD,CACEd,UAAWe,GAAAA,EACXjI,KAAM,wBACNoD,GAAI,yBACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMoD,GAAAA,EAAWT,gBAAgB,cAEhD,CACEd,UAAWW,GAAAA,EACX7H,KAAM,YAER,CACEkH,UAAWe,GAAAA,EACXjI,KAAM,YACNoD,GAAI,aACJiC,MAAMpD,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACC,KAAMoD,GAAAA,EAAWT,gBAAgB,eCzE5CU,GAAaA,KACjB,MAAM5E,GAAWC,EAAAA,EAAAA,MACX4E,GAAa1E,EAAAA,EAAAA,KAAaC,GAAUA,EAAM0E,oBAC1C5E,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,cAEjD,OACEnC,EAAAA,EAAAA,MAACgH,EAAAA,EAAQ,CACP9G,UAAU,aACV+G,YAAY,QACZlE,SAAS,QACT+D,WAAYA,EACZI,QAAS/E,EACTgF,gBAAkBD,IAChBjF,EAAS,CAAEmB,KAAM,MAAOjB,YAAa+E,GAAU,EAC/C/G,SAAA,EAEFH,EAAAA,EAAAA,MAACoH,EAAAA,EAAc,CAAClH,UAAU,gBAAeC,SAAA,EACvCC,EAAAA,EAAAA,KAACiH,EAAAA,EAAa,CAAC9F,GAAG,IAAGpB,UAGnBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,2BAERC,EAAAA,EAAAA,KAACkH,EAAAA,EAAY,CACXpH,UAAU,YACVqH,MAAI,EACJpE,QAASA,IAAMlB,EAAS,CAAEmB,KAAM,MAAOjB,aAAa,UAIxD/B,EAAAA,EAAAA,KAAC0F,EAAAA,EAAW,CAAA3F,UACVC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAAA5F,UACRC,EAAAA,EAAAA,KAACmE,EAAa,CAACE,MAAO+C,UAG1BpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAc,CAACvH,UAAU,8BAA6BC,UACrDC,EAAAA,EAAAA,KAACsH,EAAAA,EAAe,CACdvE,QAASA,IAAMlB,EAAS,CAAEmB,KAAM,MAAO2D,mBAAoBD,UAGtD,EAIf,GAAenJ,EAAAA,KAAWkJ,IChD1B,GAfsBc,KAElB3H,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACyG,GAAU,KACX7G,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACuB,EAAS,KACVvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACO,EAAU,OAEbP,EAAAA,EAAAA,KAACqB,EAAS,S","sources":["hooks/useRegisterGeneralData.js","routes.js","components/AppBreadcrumb.jsx","components/AppContent.jsx","components/AppFooter.jsx","components/header/AppHeaderDropdown.jsx","components/AppHeader.jsx","components/AppSidebarNav.jsx","_nav.js","components/AppSidebar.jsx","layout/DefaultLayout.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useRegisterGeneralData = () => {\n  const saveProject = (data) => {\n    localStorage.setItem('project', JSON.stringify(data))\n  }\n  const saveContract = (data) => {\n    localStorage.setItem('contract', JSON.stringify(data))\n  }\n\n  const getProject = () => {\n    return localStorage.getItem('project')\n  }\n  const getContract = (data) => {\n    return localStorage.getItem('contract')\n  }\n\n  return { saveProject, saveContract, getProject, getContract }\n}\n\nexport default useRegisterGeneralData\n","import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./pages/Dashboard'))\nconst DailyReport = React.lazy(() => import('./pages/DailyReportPage'))\nconst Detail = React.lazy(() => import('./pages/DetailPage'))\nconst Gantt = React.lazy(() => import('./pages/GanttPage'))\nconst Project = React.lazy(() => import('./pages/ProjectPage'))\nconst InformativePanel = React.lazy(() => import('./pages/InformativePanelPage'))\nconst Trisemanal = React.lazy(() => import('./pages/TrisemanalPage'))\n// const ProjectSelector = React.lazy(() => import('./pages/ProjectSelector'))\n// const ContractSelector = React.lazy(() => import('./pages/ContractSelector'))\n// const Login = React.lazy(() => import('./pages/Login'))\nconst ProjectAdministration = React.lazy(() => import('./pages/ProjectAdministration'))\nconst ContractAdministration = React.lazy(() => import('./pages/ContractAdministration'))\nconst User = React.lazy(() => import('./pages/User'))\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'))\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// // Base\n// const Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'))\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'))\n// const Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\n// const Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\n// const Progress = React.lazy(() => import('./views/base/progress/Progress'))\n// const Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'))\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// // Buttons\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\n// const Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n// //Forms\n// const ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\n// const FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\n// const FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\n// const InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\n// const Layout = React.lazy(() => import('./views/forms/layout/Layout'))\n// const Range = React.lazy(() => import('./views/forms/range/Range'))\n// const Select = React.lazy(() => import('./views/forms/select/Select'))\n// const Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\n// const Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// // Icons\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'))\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// // Notifications\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\n// const Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\nconst routes = [\n  { path: '/', name: 'Login' },\n  { path: '/login', name: 'Login' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/trisemanal', name: 'Trisemanal', element: Trisemanal },\n  { path: '/panel-informativo', name: 'Panel Informativo', element: InformativePanel },\n  { path: '/proyecto', name: 'Proyecto', element: Project },\n  { path: '/informe-diario', name: 'Informe Diario', element: DailyReport },\n  { path: '/trisemanal', name: 'Actividades Trisemanal', element: Trisemanal },\n  { path: '/carta-gantt', name: 'Carta Gantt', element: Gantt },\n  { path: '/avance', name: 'Detalles de avance', element: Detail },\n  { path: '/administrar_proyectos', name: 'Administrar Proyectos', element: ProjectAdministration },\n\n  {\n    path: '/administrar_contratos',\n    name: 'Administrar Contratos',\n    element: ContractAdministration,\n  },\n  { path: '/mis_datos', name: 'Mis datos', element: User },\n  // { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  // { path: '/theme/colors', name: 'Colors', element: Colors },\n  // { path: '/theme/typography', name: 'Typography', element: Typography },\n  // { path: '/base', name: 'Base', element: Cards, exact: true },\n  // { path: '/base/accordion', name: 'Accordion', element: Accordion },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n  // { path: '/base/cards', name: 'Cards', element: Cards },\n  // { path: '/base/carousels', name: 'Carousel', element: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', element: Collapses },\n  // { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n  // { path: '/base/navs', name: 'Navs', element: Navs },\n  // { path: '/base/paginations', name: 'Paginations', element: Paginations },\n  // { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n  // { path: '/base/popovers', name: 'Popovers', element: Popovers },\n  // { path: '/base/progress', name: 'Progress', element: Progress },\n  // { path: '/base/spinners', name: 'Spinners', element: Spinners },\n  // { path: '/base/tables', name: 'Tables', element: Tables },\n  // { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n  // { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n  // { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n  // { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n  // { path: '/charts', name: 'Charts', element: Charts },\n  // { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  // { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  // { path: '/forms/select', name: 'Select', element: Select },\n  // { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n  // { path: '/forms/range', name: 'Range', element: Range },\n  // { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  // { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n  // { path: '/forms/layout', name: 'Layout', element: Layout },\n  // { path: '/forms/validation', name: 'Validation', element: Validation },\n  // { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', element: Flags },\n  // { path: '/icons/brands', name: 'Brands', element: Brands },\n  // { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n  // { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', element: Badges },\n  // { path: '/notifications/modals', name: 'Modals', element: Modals },\n  // { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n  // { path: '/widgets', name: 'Widgets', element: Widgets },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"my-0\">\n      <CBreadcrumbItem href=\"/#/dashboard\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n      <CBreadcrumbItem active={true}>{projectLS?.name}</CBreadcrumbItem>\n      <CBreadcrumbItem active={true}>{contractLS?.name}</CBreadcrumbItem>\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer className=\"px-4\" lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"login\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter className=\"px-4\">\n      <div>\n        <span className=\"ms-1\">\n          Copyright © 2023 P&G PROJECT CONTROL ESTRATEGICO. All rights reserved.\n        </span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nconst AppHeaderDropdown = () => {\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0 pe-0\" caret={false}></CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-body-secondary fw-semibold mb-2\">Account</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-body-secondary fw-semibold my-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React, { useEffect, useRef } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CHeader,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilContrast,\n  cilEnvelopeOpen,\n  cilList,\n  cilMenu,\n  cilMoon,\n  cilSun,\n} from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('color')\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderToggler\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n          style={{ marginInlineStart: '-14px' }}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n\n        <CHeaderNav>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n            <CDropdownToggle caret={false}>\n              {colorMode === 'dark' ? (\n                <CIcon icon={cilMoon} size=\"lg\" />\n              ) : colorMode === 'auto' ? (\n                <CIcon icon={cilContrast} size=\"lg\" />\n              ) : (\n                <CIcon icon={cilSun} size=\"lg\" />\n              )}\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <CDropdownItem\n                active={colorMode === 'light'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('light')}\n              >\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'dark'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('dark')}\n              >\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\n              </CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n        </CHeaderNav>\n      </CContainer>\n      <CContainer className=\"px-4\" fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\nimport SimpleBar from 'simplebar-react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const navLink = (name, icon, badge, indent = false) => {\n    return (\n      <>\n        {icon\n          ? icon\n          : indent && (\n              <span className=\"nav-icon\">\n                <span className=\"nav-icon-bullet\"></span>\n              </span>\n            )}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index, indent = false) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component as=\"div\" key={index}>\n        {rest.to || rest.href ? (\n          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>\n            {navLink(name, icon, badge, indent)}\n          </CNavLink>\n        ) : (\n          navLink(name, icon, badge, indent)\n        )}\n      </Component>\n    )\n  }\n\n  const navGroup = (item, index) => {\n    const { component, name, icon, items, to, ...rest } = item\n    const Component = component\n    return (\n      <Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index, true),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <CSidebarNav as={SimpleBar}>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </CSidebarNav>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBarChart,\n  cilPencil,\n  cilClipboard,\n  cilHome,\n  cilInfo,\n  cilBriefcase,\n  cilStorage,\n  cilAlignCenter,\n  cilGraph,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle, CNavGroup } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: 'Proyectos',\n  },\n  {\n    component: CNavGroup,\n    name: 'Dashboard',\n    to: '/base',\n    icon: <CIcon icon={cilClipboard} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Inicio',\n        to: '/dashboard',\n        icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Panel Informativo',\n        to: '/panel-informativo',\n        icon: <CIcon icon={cilInfo} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Proyecto',\n        to: '/proyecto',\n        icon: <CIcon icon={cilBriefcase} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Informe diario',\n        to: '/informe-diario',\n        icon: <CIcon icon={cilStorage} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Actividades Trisemanal',\n        to: '/trisemanal',\n        icon: <CIcon icon={cilAlignCenter} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Carta Gantt',\n        to: '/carta-gantt',\n        icon: <CIcon icon={cilBarChart} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Detalles de avance',\n        to: '/avance',\n        icon: <CIcon icon={cilGraph} customClassName=\"nav-icon\" />,\n      },\n    ],\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Proyectos en curso',\n  //   to: '/dashboard',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  {\n    component: CNavItem,\n    name: 'Administrar Proyectos',\n    to: '/administrar_proyectos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar Contratos',\n    to: '/administrar_contratos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Usuarios',\n  },\n  {\n    component: CNavItem,\n    name: 'Mis datos',\n    to: '/mis_datos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CCloseButton,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarFooter,\n  CSidebarHeader,\n  CSidebarNav,\n  CSidebarToggler,\n} from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport CIcon from '@coreui/icons-react'\nimport { cilClipboard } from '@coreui/icons'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      className=\"border-end\"\n      colorScheme=\"light\"\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"border-bottom\">\n        <CSidebarBrand to=\"/\">\n          {/* <CIcon customClassName=\"sidebar-brand-full\" icon={cilClipboard} height={32} /> */}\n          {/* <CIcon customClassName=\"sidebar-brand-narrow\" icon={cilClipboard} height={32} /> */}\n          <span>P&G Project Control</span>\n        </CSidebarBrand>\n        <CCloseButton\n          className=\"d-lg-none\"\n          dark\n          onClick={() => dispatch({ type: 'set', sidebarShow: false })}\n        />\n      </CSidebarHeader>\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\n        <CSidebarToggler\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebarFooter>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\n        <AppHeader />\n        <div className=\"body flex-grow-1\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["useRegisterGeneralData","saveProject","data","localStorage","setItem","JSON","stringify","saveContract","getProject","getItem","getContract","Dashboard","React","DailyReport","Detail","Gantt","Project","InformativePanel","Trisemanal","path","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","projectLS","parse","contractLS","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","getRouteName","routes","currentRoute","find","route","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","href","map","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","exact","Navigate","to","replace","AppFooter","CFooter","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderToggler","onClick","type","style","marginInlineStart","CIcon","icon","cilMenu","size","CHeaderNav","CDropdown","variant","placement","CDropdownToggle","caret","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","as","AppSidebarNav","_ref","items","useNavigate","navLink","badge","indent","arguments","undefined","_Fragment","CBadge","text","navItem","item","component","rest","Component","CNavLink","NavLink","navGroup","_item$items","compact","toggler","CSidebarNav","SimpleBar","CNavTitle","CNavGroup","cilClipboard","customClassName","CNavItem","cilHome","cilInfo","cilBriefcase","cilStorage","cilAlignCenter","cilBarChart","cilGraph","cilPencil","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","colorScheme","visible","onVisibleChange","CSidebarHeader","CSidebarBrand","CCloseButton","dark","navigation","CSidebarFooter","CSidebarToggler","DefaultLayout"],"sourceRoot":""}