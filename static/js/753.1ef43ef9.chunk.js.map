{"version":3,"file":"static/js/753.1ef43ef9.chunk.js","mappings":"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","sources":["components/loading.jsx","../node_modules/@coreui/react/src/components/card/CCardGroup.tsx","../node_modules/@coreui/icons/src/free/cil-user.ts","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","hooks/useLogin.js","pages/Login.jsx","utils/regex.js","../node_modules/@coreui/react/src/components/form/CInputGroup.tsx","../node_modules/@coreui/react/src/components/form/CInputGroupText.tsx","../node_modules/axios/index.js"],"sourcesContent":["import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardGroup = forwardRef<HTMLDivElement, CCardGroupProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-group', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardGroup.displayName = 'CCardGroup'\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios, { HttpStatusCode } from 'axios'\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\n\nconst useLogin = () => {\n  const [error, setError] = useState()\n  const [isError, setIsError] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const queryClient = useQueryClient()\n  const navigate = useNavigate()\n\n  const mutation = useMutation({\n    mutationFn: async (newTodo) => {\n      setError('')\n      setIsLoading(true)\n      return await axios\n        .post('https://pyg-production.up.railway.app/api/v1/login', newTodo)\n        .then((res) => {\n          if (res.status === HttpStatusCode.Ok) {\n            // console.log('res', res.data.data)\n            localStorage.setItem('token', res.data.data.token)\n            setIsLoading(false)\n            setIsError(false)\n            navigate(`/project_selector`)\n            return res.ok\n          } else {\n            setError('Usuario / contrase単a incorrecto')\n            setIsError(true)\n            setIsLoading(false)\n\n            return false\n          }\n        })\n        .catch((err) => {\n          setError('Usuario / contrase単a incorrecto')\n          setIsError(true)\n          setIsLoading(false)\n          return false\n        })\n    },\n    onSuccess: (suc) => {\n      queryClient.invalidateQueries({ queryKey: ['projects'] })\n      setIsLoading(false)\n    },\n    onError: (err) => {\n      setError('Usuario / contrase単a incorrecto')\n      setIsError(true)\n      setIsLoading(false)\n      return false\n    },\n  })\n\n  const trueLogin = async (data) => {\n    const { user, password } = data\n\n    const loginData = {\n      email: user,\n      password,\n    }\n    const response = await mutation.mutate(loginData)\n    return response\n  }\n\n  const login = (data) => {\n    const { user, password } = data\n\n    if (user === 'prueba@gmail.com' && password === 'prueba#12345') {\n      setError()\n      navigate(`/project_selector`)\n      localStorage.setItem('USER_TYPE', 'basic')\n      return true\n    } else if (user === 'asd2@asd.cl' && password === '12345') {\n      navigate(`/contrato`)\n      localStorage.setItem('USER_TYPE', 'admin')\n      return true\n    } else {\n      setError('Usuario y/o contrase単a incorrecto')\n      return false\n    }\n  }\n\n  return { login, trueLogin, error, isLoading }\n}\n\nexport default useLogin\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport useLogin from 'src/hooks/useLogin'\nimport { useQueryClient } from '@tanstack/react-query'\nimport { regex } from 'src/utils/regex'\nimport Loading from 'src/components/loading'\n\nconst Login = () => {\n  const queryClient = useQueryClient()\n  const [errorUser, setErrorUser] = useState(false)\n  const [user, setUser] = useState('')\n  const [password, setPassword] = useState('')\n  const { login, error, trueLogin, isLoading } = useLogin()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'user':\n        setUser(e.target.value)\n        break\n      case 'password':\n        setPassword(e.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    localStorage.removeItem('project')\n    localStorage.removeItem('contract')\n    localStorage.removeItem('USER_TYPE')\n    localStorage.removeItem('REACT_QUERY_OFFLINE_CACHE')\n    localStorage.setItem('color', 'light')\n    localStorage.removeItem('token')\n\n    // localStorage.clear()\n    queryClient.clear()\n  }, [])\n\n  const onClickHandler = async () => {\n    await trueLogin({ user, password })\n  }\n\n  return (\n    <div className=\"min-vh-100 d-flex flex-row align-items-center login-container\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <h1 className=\"login-title\">P&G PROJECT CONTROL ESTRATEGICO</h1>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <p className=\"text-body-secondary\">Inicia sesi坦n</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        invalid={errorUser}\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        id=\"user\"\n                        feedback=\"Error al ingresar el correo\"\n                        onBlur={(e) => {\n                          if (user.match(regex)) {\n                            setErrorUser(false)\n                          } else {\n                            setErrorUser(true)\n                          }\n                        }}\n                        onChange={(e) => {\n                          onChangeData(e)\n                        }}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={(e) => {\n                          onChangeData(e)\n                        }}\n                      />\n                    </CInputGroup>\n                    {error && <>{error}</>}\n                    {isLoading && <Loading />}\n                    <CRow>\n                      <CCol xs={12}>\n                        <CButton\n                          className=\"px-4 login-button\"\n                          disabled={isLoading}\n                          onClick={() => {\n                            onClickHandler()\n                            // htmlToImageConvert()\n                          }}\n                        >\n                          Ingresar\n                        </CButton>\n                      </CCol>\n                      {/* <CCol xs={12} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol> */}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export const regex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CInputGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n}\n\nexport const CInputGroup = forwardRef<HTMLDivElement, CInputGroupProps>(\n  ({ children, className, size, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'input-group',\n          {\n            [`input-group-${size}`]: size,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCInputGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n}\n\nCInputGroup.displayName = 'CInputGroup'\n","import React, { ElementType, forwardRef, LabelHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CInputGroupTextProps\n  extends LabelHTMLAttributes<HTMLLabelElement | HTMLSpanElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CInputGroupText: PolymorphicRefForwardingComponent<'span', CInputGroupTextProps> =\n  forwardRef<HTMLLabelElement | HTMLSpanElement, CInputGroupTextProps>(\n    ({ children, as: Component = 'span', className, ...rest }, ref) => {\n      return (\n        <Component className={classNames('input-group-text', className)} {...rest} ref={ref}>\n          {children}\n        </Component>\n      )\n    },\n  )\n\nCInputGroupText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCInputGroupText.displayName = 'CInputGroupText'\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n"],"names":["Loading","_jsx","Lottie","animationData","loadingjson","loop","width","className","CCardGroup","forwardRef","_a","ref","children","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","cilUser","cilLockLocked","useLogin","error","setError","useState","isError","setIsError","isLoading","setIsLoading","queryClient","useQueryClient","navigate","useNavigate","mutation","useMutation","mutationFn","async","axios","post","newTodo","then","res","status","HttpStatusCode","Ok","localStorage","setItem","data","token","ok","catch","err","onSuccess","suc","invalidateQueries","queryKey","onError","login","user","password","trueLogin","loginData","email","mutate","Login","errorUser","setErrorUser","setUser","setPassword","onChangeData","e","target","id","value","useEffect","removeItem","clear","CContainer","CRow","_jsxs","CCol","md","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","CFormInput","invalid","placeholder","type","autoComplete","feedback","onBlur","match","regex","onChange","_Fragment","xs","CButton","disabled","onClick","onClickHandler","size","_b","concat","as","Component","Axios","AxiosError","CanceledError","isCancel","CancelToken","VERSION","all","Cancel","isAxiosError","spread","toFormData","AxiosHeaders","formToJSON","getAdapter","mergeConfig"],"sourceRoot":""}