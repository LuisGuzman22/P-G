{"version":3,"file":"static/js/196.9f0242cd.chunk.js","mappings":"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","sources":["hooks/useFetch.js","hooks/useGetBasicData.js","pages/Dashboard.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst fetchProducts = async (projectId) => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/projects', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst fetchUsers = async () => {\n  const res = await axios.get('https://b4b07e25f42d4135b6fc3791a6e1d1f8.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchContracts = async (contractId) => {\n  const res = await axios.get('https://2b3570b8072a44e09ce5b5a80a4c8012.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchBasicData = async (contractId) => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/basicData', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst testToken = async () => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/test', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nexport const fetchReportsData = async () => {\n  // const res = await axios.get(\n  //   `https://pyg-production.up.railway.app/api/v1/reports/search?contract_id=${contractId}&project_id=${projectId}`,\n  //   {\n  const res = await axios.get(`https://pyg-production.up.railway.app/api/v1/reports`, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nexport const fetchReportDataByReportId = async (reportId) => {\n  const res = await axios.get(`https://pyg-production.up.railway.app/api/v1/reports/${reportId}`, {\n    // const res = await axios.get(`https://pyg-production.up.railway.app/api/v1/reports`, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst userType = localStorage.getItem('USER_TYPE')\n\nexport const useFetchProyects = (projectId) => {\n  return useQuery({\n    queryKey: ['projects'],\n    refetchType: 'all',\n    // refetchInterval: 10000,\n    refetchOnWindowFocus: true,\n    queryFn: async () => {\n      return fetchProducts(projectId)\n    },\n  })\n}\n\nexport const useFetchContract = (contractId) => {\n  return useQuery({\n    queryKey: ['contracts'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchContracts(contractId)\n    },\n  })\n}\n\nexport const useFetchBasicData = (contractId) => {\n  return useQuery({\n    queryKey: ['basics'],\n    staleTime: 0,\n    gcTime: 2147483647,\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchBasicData(contractId)\n    },\n  })\n}\n\nexport const useFetchUserList = () => {\n  return useQuery({\n    queryKey: ['users'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchUsers()\n    },\n  })\n}\n\nexport const useFetchReportsData = () => {\n  return useQuery({\n    queryKey: ['reports'],\n    staleTime: 0,\n    gcTime: 2147483647,\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchReportsData()\n    },\n  })\n}\n\nexport const useFetchReportData = (reportId) => {\n  return useQuery({\n    queryKey: ['selectedReport'],\n    staleTime: 0,\n    gcTime: 2147483647,\n    refetchType: 'all',\n    queryFn: async () => {\n      return reportId ? fetchReportDataByReportId(reportId) : undefined\n    },\n  })\n}\n","import { useFetchBasicData } from './useFetch'\n\nconst useGetBasicData = (contractId) => {\n  const { data, isLoading, error } = useFetchBasicData(contractId)\n  return { data, isLoading, error }\n}\n\nexport default useGetBasicData\n","import React, { useEffect } from 'react'\nimport InformativePanel from 'src/components/InformativePanel'\nimport { CCard, CCardHeader, CButton, CCardBody, CCardText, CRow, CCol } from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport ProjectCollapse from 'src/components/ProjectCollapse'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useFetchReportsData } from 'src/hooks/useFetch'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport useGetBasicData from 'src/hooks/useGetBasicData'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport Chart from 'react-google-charts'\nimport Skeleton from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\n\nconst Dashboard = () => {\n  let navigate = useNavigate()\n  const { getProject, getContract } = useRegisterGeneralData()\n  const { clearData } = useRegisterDailyReport()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { data, isLoading, error } = useGetBasicData(contractLS.id)\n  const { getData } = useGetCachedQueryData()\n\n  const { isFetching } = useFetchReportsData()\n  const reportsQuery = getData('reports')\n\n  useEffect(() => {\n    localStorage.removeItem('daily_report')\n    clearData()\n  }, [])\n\n  useEffect(() => {\n    if (!projectLS || !contractLS) {\n      navigate(`/project_selector`)\n    }\n  }, [projectLS, contractLS])\n\n  const redirectTo = (url) => {\n    navigate(url)\n  }\n\n  const datagraph = [\n    ['Element', 'Density', { role: 'style' }],\n    ['Copper', 8.94, '#b87333'], // RGB value\n    ['Silver', 10.49, 'silver'], // English color name\n    ['Gold', 19.3, 'gold'],\n    ['Platinum', 21.45, 'color: #e5e4e2'], // CSS-style declaration\n  ]\n  return (\n    <div className=\"dashboard\">\n      <div style={{ display: 'none' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={datagraph} />\n      </div>\n\n      <CCard>\n        <CCardHeader>Panel Informativo</CCardHeader>\n        <CCardBody>\n          <CCardText>\n            <InformativePanel />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n      {reportsQuery && reportsQuery.length > 0 && (\n        <>\n          <br />\n          <CCard>\n            <CCardBody>\n              {!isFetching ? (\n                <CCardText>\n                  <>\n                    <span>Tienes {reportsQuery.length} informes diarios generados.</span>\n                    <CRow>\n                      {reportsQuery\n                        .sort((a, b) => b.id - a.id)\n                        .map((report) => {\n                          return (\n                            <>\n                              <CCol>\n                                <CButton\n                                  className=\"dashboard-button\"\n                                  onClick={() => {\n                                    localStorage.setItem('daily_report', report.id)\n                                    redirectTo('/informe-diario/view')\n                                  }}\n                                >\n                                  {report.id}\n                                </CButton>\n                              </CCol>\n                            </>\n                          )\n                        })}\n                    </CRow>\n                  </>\n                </CCardText>\n              ) : (\n                <Skeleton count={2} />\n              )}\n            </CCardBody>\n          </CCard>\n        </>\n      )}\n\n      <br />\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <ProjectCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n      <br />\n      <CCard>\n        <CCardBody>\n          {!isFetching ? (\n            <CCardText>\n              <div>\n                <CRow>\n                  <CCol sm={4}>\n                    <CButton\n                      className=\"dashboard-button\"\n                      onClick={() => {\n                        redirectTo('/informe-diario')\n                      }}\n                    >\n                      Informe Diario\n                    </CButton>\n                  </CCol>\n                  <CCol sm={4}>\n                    <CButton\n                      className=\"dashboard-button\"\n                      onClick={() => {\n                        redirectTo('/trisemanal')\n                      }}\n                    >\n                      Trisemanal\n                    </CButton>\n                  </CCol>\n                  <CCol sm={4}>\n                    <CButton\n                      className=\"dashboard-button\"\n                      onClick={() => {\n                        redirectTo('/carta-gantt')\n                      }}\n                    >\n                      Carta Gantt\n                    </CButton>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol sm={4}>\n                    <CButton\n                      className=\"dashboard-button\"\n                      onClick={() => {\n                        redirectTo('/avance')\n                      }}\n                    >\n                      Avance\n                    </CButton>\n                  </CCol>\n                  <CCol sm={4}>\n                    <CButton className=\"dashboard-button\">TOP NO+PAPEL</CButton>\n                  </CCol>\n                  <CCol sm={4}>\n                    {/* <CButton className=\"dashboard-button\">Carta Gantt</CButton> */}\n                  </CCol>\n                </CRow>\n              </div>\n            </CCardText>\n          ) : (\n            <Skeleton count={2} />\n          )}\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default Dashboard\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["localStorage","getItem","useFetchProyects","projectId","useQuery","queryKey","refetchType","refetchOnWindowFocus","queryFn","async","axios","get","headers","Authorization","data","fetchProducts","useFetchContract","contractId","fetchContracts","useFetchBasicData","staleTime","gcTime","fetchBasicData","useFetchUserList","fetchUsers","useFetchReportsData","fetchReportsData","isLoading","error","Dashboard","navigate","useNavigate","getProject","getContract","useRegisterGeneralData","clearData","useRegisterDailyReport","projectLS","JSON","parse","contractLS","useGetBasicData","id","getData","useGetCachedQueryData","isFetching","reportsQuery","useEffect","removeItem","redirectTo","url","_jsxs","className","children","_jsx","style","display","Chart","chartType","width","height","role","CCard","CCardHeader","CCardBody","CCardText","InformativePanel","length","_Fragment","Skeleton","count","CRow","sort","a","b","map","report","CCol","CButton","onClick","setItem","ProjectCollapse","sm","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","_ref","baseColor","highlightColor","borderRadius","circle","direction","duration","enableAnimation","concat","_ref2","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}