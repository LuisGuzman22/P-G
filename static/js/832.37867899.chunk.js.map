{"version":3,"file":"static/js/832.37867899.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/indirect-dotation-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/DailyReportCollapse.jsx"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReport = () => {\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('/prueba', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndirectWorkForce = () => {\n  const initialStatee = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialStatee)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    // storeIndirectWorkForceData(e)\n    switch (e.target.id) {\n      case 'indirectWorkForce':\n        setIndirectWorkForce(initialStatee) // Clear the object\n        setIndirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorOfferedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorContractedNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorCertified':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorBreakNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorWorkNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'contractAdministratorHHNumber':\n        setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialStatee) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalIndirectWorkForce = () => {\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalIndirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst TotalDirectWorkForce = () => {\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    storeTotalDirectWorkForce(e)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"DirectSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormTextarea,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndirectDotationWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectDotationWorkForceObservation: undefined,\n    indirectWorkForceFront1: undefined,\n    indirectWorkForceFront2: undefined,\n    indirectWorkForceFront3: undefined,\n    indirectWorkForceFront4: undefined,\n    indirectWorkForceFront5: undefined,\n    indirectWorkForceFront6: undefined,\n    indirectWorkForceFront7: undefined,\n  }\n\n  const indirectDotationTotalsInitialState = {\n    indirectWorkForceFront1: 0,\n    indirectWorkForceFront2: 0,\n    indirectWorkForceFront3: 0,\n    indirectWorkForceFront4: 0,\n    indirectWorkForceFront5: 0,\n    indirectWorkForceFront6: 0,\n    indirectWorkForceFront7: 0,\n  }\n\n  const [indirectDotationWorkForce, setIndirectDotationWorkForce] = useState(initialState)\n  const [indirectDotationWorkForceList, setIndirectDotationWorkForceList] = useState([])\n  const [indirectDotationTotals, setIndirectDotationTotals] = useState(\n    indirectDotationTotalsInitialState,\n  )\n\n  const {\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList: indirectDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'indirectWorkForce':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForce: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront1':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront1: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront2':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront2: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront3':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront3: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront4':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront4: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront5':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront5: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront6':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront6: e.target.value,\n        })\n        break\n      case 'indirectWorkForceFront7':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectWorkForceFront7: e.target.value,\n        })\n        break\n      case 'indirectDotationWorkForceObservation':\n        setIndirectDotationWorkForce({\n          ...indirectDotationWorkForce,\n          indirectDotationWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIndirectDotationWorkForce = () => {\n    const indirectDotationWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectDotationWorkForce.indirectWorkForce,\n      indirectDotationWorkForceObservation:\n        indirectDotationWorkForce.indirectDotationWorkForceObservation,\n      actions: {\n        indirectWorkForceFront1: indirectDotationWorkForce.indirectWorkForceFront1,\n        indirectWorkForceFront2: indirectDotationWorkForce.indirectWorkForceFront2,\n        indirectWorkForceFront3: indirectDotationWorkForce.indirectWorkForceFront3,\n        indirectWorkForceFront4: indirectDotationWorkForce.indirectWorkForceFront4,\n        indirectWorkForceFront5: indirectDotationWorkForce.indirectWorkForceFront5,\n        indirectWorkForceFront6: indirectDotationWorkForce.indirectWorkForceFront6,\n        indirectWorkForceFront7: indirectDotationWorkForce.indirectWorkForceFront7,\n      },\n    }\n    setIndirectDotationWorkForce(initialState) // Clear the object\n    setIndirectDotationWorkForceList([\n      ...indirectDotationWorkForceList,\n      indirectDotationWorkForceInitialState,\n    ])\n  }\n\n  const deleteIndirectDotationWorkForce = (id) => {\n    const newData = indirectDotationWorkForceList.filter((item) => item.id !== id)\n    setIndirectDotationWorkForceList(newData)\n\n    removeIndirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeIndirectDotationWorkForceData(indirectDotationWorkForceList)\n  }, [indirectDotationWorkForceList])\n\n  useEffect(() => {\n    let indirectDotationTotalsCounter = {\n      indirectWorkForceFront1: 0,\n      indirectWorkForceFront2: 0,\n      indirectWorkForceFront3: 0,\n      indirectWorkForceFront4: 0,\n      indirectWorkForceFront5: 0,\n      indirectWorkForceFront6: 0,\n      indirectWorkForceFront7: 0,\n    }\n\n    for (let data of indirectDotationWorkForceListContext) {\n      indirectDotationTotalsCounter = {\n        indirectWorkForceFront1:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront1) +\n          Number(data.actions.indirectWorkForceFront1 ?? 0),\n        indirectWorkForceFront2:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront2) +\n          Number(data.actions.indirectWorkForceFront2 ?? 0),\n        indirectWorkForceFront3:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront3) +\n          Number(data.actions.indirectWorkForceFront3 ?? 0),\n        indirectWorkForceFront4:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront4) +\n          Number(data.actions.indirectWorkForceFront4 ?? 0),\n        indirectWorkForceFront5:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront5) +\n          Number(data.actions.indirectWorkForceFront5 ?? 0),\n        indirectWorkForceFront6:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront6) +\n          Number(data.actions.indirectWorkForceFront6 ?? 0),\n        indirectWorkForceFront7:\n          Number(indirectDotationTotalsCounter.indirectWorkForceFront7) +\n          Number(data.actions.indirectWorkForceFront7 ?? 0),\n      }\n    }\n    setIndirectDotationTotals(indirectDotationTotalsCounter)\n  }, [indirectDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Administrador_de_contrato\">Administrador de contrato</option>\n        <option value=\"Jefe_de_Oficina_Técnica\">Jefe de Oficina Técnica</option>\n        <option value=\"Jefe_de_Terreno\">Jefe de Terreno</option>\n        <option value=\"Jefe_de_Calidad\">Jefe de Calidad</option>\n        <option value=\"Jefe_HSEC\">Jefe HSEC</option>\n        <option value=\"Ingeniero_Costos\">Ingeniero Costos</option>\n        <option value=\"Ingeniero_Programación_y_Control\">Ingeniero Programación y Control</option>\n        <option value=\"Encargado_Control_Documentos\">Encargado Control Documentos</option>\n        <option value=\"Asistente_Oficina_Técnica\">Asistente Oficina Técnica</option>\n        <option value=\"Asesor_HSEC\">Asesor HSEC</option>\n        <option value=\"Topógrafo\">Topógrafo</option>\n        <option value=\"Alarife\">Alarife</option>\n        <option value=\"Supervisor_Logística\">Supervisor Logística</option>\n        <option value=\"Supervisor_Bodega\">Supervisor Bodega</option>\n        <option value=\"Bodeguero\">Bodeguero</option>\n        <option value=\"Jefe_de_Área\">Jefe de Área</option>\n        <option value=\"Supervisor_Civil_v_Estructura\">Supervisor Civil v Estructura</option>\n        <option value=\"Supervisor_Mecánico_y_Piping\">Supervisor Mecánico y Piping</option>\n        <option value=\"Supervisor_Elétrico\">Supervisor Elétrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront1\"\n                value={indirectDotationWorkForce.indirectWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront2\"\n                value={indirectDotationWorkForce.indirectWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront3\"\n                value={indirectDotationWorkForce.indirectWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront4\"\n                value={indirectDotationWorkForce.indirectWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront5\"\n                value={indirectDotationWorkForce.indirectWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront6\"\n                value={indirectDotationWorkForce.indirectWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectWorkForceFront7\"\n                value={indirectDotationWorkForce.indirectWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectDotationWorkForceListContext.length > 0 &&\n        indirectDotationWorkForceListContext[0].indirectWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront1 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront2 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront3 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront4 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront5 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront6 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.indirectWorkForceFront7 ?? 0}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{indirectDotationTotals.indirectWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"indirectDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default IndirectDotationWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkForce: undefined,\n    directDotationWorkForceObservation: undefined,\n    directWorkForceFront1: undefined,\n    directWorkForceFront2: undefined,\n    directWorkForceFront3: undefined,\n    directWorkForceFront4: undefined,\n    directWorkForceFront5: undefined,\n    directWorkForceFront6: undefined,\n    directWorkForceFront7: undefined,\n  }\n\n  const directDotationTotalsInitialState = {\n    directWorkForceFront1: 0,\n    directWorkForceFront2: 0,\n    directWorkForceFront3: 0,\n    directWorkForceFront4: 0,\n    directWorkForceFront5: 0,\n    directWorkForceFront6: 0,\n    directWorkForceFront7: 0,\n  }\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [directDotationTotals, setDirectDotationTotals] = useState(directDotationTotalsInitialState)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectDotationWorkForce({ ...directDotationWorkForce, directWorkForce: e.target.value })\n        break\n      case 'directWorkForceFront1':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront1: e.target.value,\n        })\n        break\n      case 'directWorkForceFront2':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront2: e.target.value,\n        })\n        break\n      case 'directWorkForceFront3':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront3: e.target.value,\n        })\n        break\n      case 'directWorkForceFront4':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront4: e.target.value,\n        })\n        break\n      case 'directWorkForceFront5':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront5: e.target.value,\n        })\n        break\n      case 'directWorkForceFront6':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront6: e.target.value,\n        })\n        break\n      case 'directWorkForceFront7':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directWorkForceFront7: e.target.value,\n        })\n        break\n      case 'directDotationWorkForceObservation':\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          directDotationWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directDotationWorkForce.directWorkForce,\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      actions: {\n        directWorkForceFront1: directDotationWorkForce.directWorkForceFront1,\n        directWorkForceFront2: directDotationWorkForce.directWorkForceFront2,\n        directWorkForceFront3: directDotationWorkForce.directWorkForceFront3,\n        directWorkForceFront4: directDotationWorkForce.directWorkForceFront4,\n        directWorkForceFront5: directDotationWorkForce.directWorkForceFront5,\n        directWorkForceFront6: directDotationWorkForce.directWorkForceFront6,\n        directWorkForceFront7: directDotationWorkForce.directWorkForceFront7,\n      },\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  useEffect(() => {\n    let directDotationTotalsCounter = {\n      directWorkForceFront1: 0,\n      directWorkForceFront2: 0,\n      directWorkForceFront3: 0,\n      directWorkForceFront4: 0,\n      directWorkForceFront5: 0,\n      directWorkForceFront6: 0,\n      directWorkForceFront7: 0,\n    }\n\n    for (let data of directDotationWorkForceListContext) {\n      directDotationTotalsCounter = {\n        directWorkForceFront1:\n          Number(directDotationTotalsCounter.directWorkForceFront1) +\n          Number(data.actions.directWorkForceFront1 ?? 0),\n        directWorkForceFront2:\n          Number(directDotationTotalsCounter.directWorkForceFront2) +\n          Number(data.actions.directWorkForceFront2 ?? 0),\n        directWorkForceFront3:\n          Number(directDotationTotalsCounter.directWorkForceFront3) +\n          Number(data.actions.directWorkForceFront3 ?? 0),\n        directWorkForceFront4:\n          Number(directDotationTotalsCounter.directWorkForceFront4) +\n          Number(data.actions.directWorkForceFront4 ?? 0),\n        directWorkForceFront5:\n          Number(directDotationTotalsCounter.directWorkForceFront5) +\n          Number(data.actions.directWorkForceFront5 ?? 0),\n        directWorkForceFront6:\n          Number(directDotationTotalsCounter.directWorkForceFront6) +\n          Number(data.actions.directWorkForceFront6 ?? 0),\n        directWorkForceFront7:\n          Number(directDotationTotalsCounter.directWorkForceFront7) +\n          Number(data.actions.directWorkForceFront7 ?? 0),\n      }\n    }\n    setDirectDotationTotals(directDotationTotalsCounter)\n  }, [directDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n        <option value=\"Maestro_Mayor_Mecánico\">Maestro Mayor Mecánico</option>\n        <option value=\"Maestro_Mayor_Piping\">Maestro Mayor Piping</option>\n        <option value=\"Maestro_Primera_Mecánico\">Maestro Primera Mecánico</option>\n        <option value=\"Soldador_HDPE\">Soldador HDPE</option>\n        <option value=\"Soldador_6G\">Soldador 6G</option>\n        <option value=\"Capataz_Eléctrico\">Capataz Eléctrico</option>\n        <option value=\"Maestro_Mayor_Eléctrico\">Maestro Mayor Eléctrico</option>\n        <option value=\"Maestro_Primera_Eléctrico\">Maestro Primera Eléctrico</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront1\"\n                value={directDotationWorkForce.directWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront2\"\n                value={directDotationWorkForce.directWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront3\"\n                value={directDotationWorkForce.directWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront4\"\n                value={directDotationWorkForce.directWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront5\"\n                value={directDotationWorkForce.directWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront6\"\n                value={directDotationWorkForce.directWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront7\"\n                value={directDotationWorkForce.directWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].directWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {directDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront1 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront2 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront3 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront4 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront5 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront6 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront7 ?? 0}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletedirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst DotationWorkForce = () => {\n  const initialState = {\n    workforceDotationPersonalFront1: undefined,\n    workforceDotationPersonalFront2: undefined,\n    workforceDotationPersonalFront3: undefined,\n    workforceDotationPersonalFront4: undefined,\n    workforceDotationPersonalFront5: undefined,\n    workforceDotationPersonalFront6: undefined,\n    workforceDotationPersonalFront7: undefined,\n    workforceDotationObservation: undefined,\n  }\n\n  const [workforceDotation, setWorkforceDotation] = useState(initialState)\n\n  const { storeDotationWorkfoce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'workforceDotationPersonalFront1':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront1: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront2':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront2: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront3':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront3: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront4':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront4: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront5':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront5: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront6':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront6: e.target.value,\n        })\n        break\n      case 'workforceDotationPersonalFront7':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationPersonalFront7: e.target.value,\n        })\n        break\n      case 'workforceDotationObservation':\n        setWorkforceDotation({\n          ...workforceDotation,\n          workforceDotationObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    storeDotationWorkfoce(workforceDotation)\n  }, [workforceDotation])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">N° de personal</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CFormTextarea\n        id=\"workforceDotationObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    setMachinery({ ...machinery, [e.target.id]: e.target.value })\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'machineryWorkForce':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n        break\n      case 'machineryWorkForceFront1':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront1: e.target.value })\n        break\n      case 'machineryWorkForceFront2':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront2: e.target.value })\n        break\n      case 'machineryWorkForceFront3':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront3: e.target.value })\n        break\n      case 'machineryWorkForceFront4':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront4: e.target.value })\n        break\n      case 'machineryWorkForceFront5':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront5: e.target.value })\n        break\n      case 'machineryWorkForceFront6':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront6: e.target.value })\n        break\n      case 'machineryWorkForceFront7':\n        setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForceFront7: e.target.value })\n        break\n      case 'machineryWorkForceObservation':\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          machineryWorkForceObservation: e.target.value,\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.machineryWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    setEquipment({ ...equipment, [e.target.id]: e.target.value })\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'equipmentWorkForce':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n        break\n      case 'equipmentWorkForceObservation':\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          equipmentWorkForceObservation: e.target.value,\n        })\n        break\n      case 'equipmentWorkForceFront1':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront1: e.target.value })\n        break\n      case 'equipmentWorkForceFront2':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront2: e.target.value })\n        break\n      case 'equipmentWorkForceFront3':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront3: e.target.value })\n        break\n      case 'equipmentWorkForceFront4':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront4: e.target.value })\n        break\n      case 'equipmentWorkForceFront5':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront5: e.target.value })\n        break\n      case 'equipmentWorkForceFront6':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront6: e.target.value })\n        break\n      case 'equipmentWorkForceFront7':\n        setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1</option>\n        <option value=\"equipo_2\">Equipo 2</option>\n        <option value=\"equipo_3\">Equipo 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.equipmentWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'vehicleWorkForce':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForce: e.target.value })\n        break\n      case 'vehicleWorkForceObservation':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceObservation: e.target.value })\n        break\n      case 'vehicleWorkForceFront1':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront1: e.target.value })\n        break\n      case 'vehicleWorkForceFront2':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront2: e.target.value })\n        break\n      case 'vehicleWorkForceFront3':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront3: e.target.value })\n        break\n      case 'vehicleWorkForceFront4':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront4: e.target.value })\n        break\n      case 'vehicleWorkForceFront5':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront5: e.target.value })\n        break\n      case 'vehicleWorkForceFront6':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront6: e.target.value })\n        break\n      case 'vehicleWorkForceFront7':\n        setVehicleWorkForce({ ...vehicleWorkForce, vehicleWorkForceFront7: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1</option>\n        <option value=\"vehiculo_2\">Vehículo 2</option>\n        <option value=\"vehiculo_3\">Vehículo 3</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.vehicleWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Activities = () => {\n  const initialState = {\n    activity: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activity') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    setActivity({ ...activity, [e.target.id]: e.target.value })\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activity: activity.activity,\n      actions: {\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      },\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activity\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"frente_1\">Frente de trabajo 1</option>\n        <option value=\"frente_2\">Frente de trabajo 2</option>\n        <option value=\"frente_3\">Frente de trabajo 3</option>\n        <option value=\"frente_4\">Frente de trabajo 4</option>\n        <option value=\"frente_5\">Frente de trabajo 5</option>\n        <option value=\"frente_6\">Frente de trabajo 6</option>\n        <option value=\"frente_7\">Frente de trabajo 7</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                // value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                // value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                // value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                // value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                // value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                // value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                // value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                // value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                // value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                // value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const MAX_IMAGES = 10\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'directWorkForce':\n        setDirectWorkForce(initialStatee) // Clear the object\n        setDirectWorkForce({ [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceOfferedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceContractedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceCertifiedNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceBreakNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceWorkNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      case 'directWorkForceHHNumber':\n        setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"Capataz_Civil_y_Estructuras\">Capataz Civil y Estructuras</option>\n        <option value=\"Maestro_Primera_Civil\">Maestro Primera Civil</option>\n        <option value=\"Capataz_Mecánico_y_Piping\">Capataz Mecánico y Piping</option>\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n  }\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n    }\n    setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n  }\n\n  const registerAsarcoMachinery = () => {\n    const asarcoMachineryInitialState = {\n      id: uuidv4(),\n      machinery: asarcoMachinery.machinery,\n      actions: {\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n      },\n    }\n    setAsarcoMachinery(initialState) // Clear the object\n    setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.actions.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.actions.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.actions.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.actions.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.actions.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.actions.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.actions.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.actions.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"maquina_1\">Maquina 1</option>\n        <option value=\"maquina_2\">Maquina 2</option>\n        <option value=\"maquina_3\">Maquina 3</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>\n                    {item.actions.asarcoMachineryUnscheduleMaintenance}\n                  </CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n    }\n    setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      actions: {\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      },\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        <option value=\"equipo_1\">Equipo 1 + Patente</option>\n        <option value=\"equipo_2\">Equipo 2 + Patente</option>\n        <option value=\"equipo_3\">Equipo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n    }\n    setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n  }\n\n  const registerVehiclePlate = () => {\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      actions: {\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      },\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"vehiculo_1\">Vehículo 1 + Patente</option>\n        <option value=\"vehiculo_2\">Vehículo 2 + Patente</option>\n        <option value=\"vehiculo_3\">Vehículo 3 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n  }\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n    }\n    setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n  }\n\n  const registeraljibe = () => {\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      actions: {\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n      },\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeCachimbaName: 0,\n      aljibeQuantityTurns: 0,\n      aljibeM3: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeCachimbaName:\n          Number(aljibeTotalsCounter.aljibeCachimbaName) +\n          Number(data.actions.aljibeCachimbaName ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) +\n          Number(data.actions.aljibeQuantityTurns ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.actions.aljibeM3 ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        <option value=\"aljibe_1\">Aljibe 1 + Patente</option>\n        <option value=\"aljibe_2\">Aljibe 2 + Patente</option>\n        <option value=\"aljibe_3\">Aljibe 3 + Patente</option>\n        <option value=\"aljibe_4\">Aljibe 4 + Patente</option>\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.aljibe}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCachimbaName ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>18) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={23}>\n          <CAccordionHeader>23) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","storeTotalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","company","totalIndirectWorkForce","totalDirectWorkForce","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","CompanyReport","onChangeData","e","_jsxs","className","children","_jsx","CForm","CRow","CCol","sm","CFormInput","type","id","label","placeholder","text","onChange","CFormSelect","value","IndirectWorkForce","initialStatee","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","useState","setIndirectWorkForceList","indirectWorkForceListContext","target","useEffect","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","map","item","index","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","colSpan","TotalDirectWorkForce","IndirectDotationWorkForce","initialState","indirectDotationWorkForceObservation","indirectWorkForceFront1","indirectWorkForceFront2","indirectWorkForceFront3","indirectWorkForceFront4","indirectWorkForceFront5","indirectWorkForceFront6","indirectWorkForceFront7","indirectDotationWorkForce","setIndirectDotationWorkForce","setIndirectDotationWorkForceList","indirectDotationTotals","setIndirectDotationTotals","indirectDotationWorkForceListContext","indirectDotationTotalsCounter","data","_data$actions$indirec","_data$actions$indirec2","_data$actions$indirec3","_data$actions$indirec4","_data$actions$indirec5","_data$actions$indirec6","_data$actions$indirec7","Number","registerIndirectDotationWorkForce","indirectDotationWorkForceInitialState","_item$actions$indirec","_item$actions$indirec2","_item$actions$indirec3","_item$actions$indirec4","_item$actions$indirec5","_item$actions$indirec6","_item$actions$indirec7","deleteIndirectDotationWorkForce","CFormTextarea","DirectDotationWorkForce","directWorkForce","directDotationWorkForceObservation","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationTotals","setDirectDotationTotals","directDotationWorkForceListContext","directDotationTotalsCounter","_data$actions$directW","_data$actions$directW2","_data$actions$directW3","_data$actions$directW4","_data$actions$directW5","_data$actions$directW6","_data$actions$directW7","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$actions$directW","_item$actions$directW2","_item$actions$directW3","_item$actions$directW4","_item$actions$directW5","_item$actions$directW6","_item$actions$directW7","deletedirectDotationWorkForce","DotationWorkForce","workforceDotationPersonalFront1","workforceDotationPersonalFront2","workforceDotationPersonalFront3","workforceDotationPersonalFront4","workforceDotationPersonalFront5","workforceDotationPersonalFront6","workforceDotationPersonalFront7","workforceDotationObservation","setWorkforceDotation","disabled","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","vehicleWorkForceObservation","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activity","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","setActivity","setActivityList","activityListContext","registerActivity","activityInitialState","Comments","setComments","rows","Array","from","_","i","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","asarcoMachineryListContext","asarcoMachineryTotalsCounter","_data$actions$asarcoM","_data$actions$asarcoM2","_data$actions$asarcoM3","_data$actions$asarcoM4","_data$actions$asarcoM5","_data$actions$asarcoM6","_data$actions$asarcoM7","_data$actions$asarcoM8","registerAsarcoMachinery","asarcoMachineryInitialState","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","VehiclePlate","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","registerVehiclePlate","vehiclePlateInitialState","_item$actions$vehicle4","_item$actions$vehicle5","_item$actions$vehicle6","_item$actions$vehicle7","_item$actions$vehicle8","deletevehiclePlate","IndustrialWaterControl","_aljibeTotals$aljibeC","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","aljibeTotalsCounter","_data$actions$aljibeC","_data$actions$aljibeQ","_data$actions$aljibeM","registeraljibe","aljibeInitialState","_item$actions$aljibeC","_item$actions$aljibeQ","_item$actions$aljibeM","deletealjibe","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","_Fragment"],"sourceRoot":""}