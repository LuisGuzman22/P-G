{"version":3,"file":"static/js/406.4730de70.chunk.js","mappings":"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,EAAqB,oBACrBP,EAAmB,oBACnBgK,EAAmB,qBACnBC,EAAoB,mBACpBH,EAAkB,kBAClByQ,EAAiB,mBACjBC,EAAkB,iBAClBH,GAAgB,YAChBnJ,GAAW,aACXC,GAAY,WACZL,KACEsM,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,MAAO,CACL/a,UACAD,mBACA2M,6BACAzI,uBACAC,wBACAH,sBACAyI,wBACAG,0BACAiJ,8BACAC,yBACAtC,4BACAC,uBACA2I,qCACAC,kCACAC,gCACA9Z,mCACAC,gCACAL,8BACAma,wBACA9L,yBACAE,0BACAC,2BACAnI,0BACAC,2BACAH,yBACAiU,wBACAC,yBACA3B,uBACAnb,eACA8L,gBACAL,WACAM,iBACAmG,iBACAC,kBACAL,gBACA5L,iBACAC,kBACAL,gBACAuU,eACAC,gBACAL,cACA/gB,gBACAC,iBACAL,eACAwF,uBACAC,wBACAP,sBACAgK,sBACAC,uBACAH,qBACAyQ,oBACAC,qBACAH,oBACAnJ,eACAC,gBACAL,cACD,C,mCCxHI,MAAMnV,EAAYojB,GAEhBA,EAAEC,MADC,oB","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityList, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el frente de trabajo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        label=\"Frente de trabajo\"\n        value={activity.activityFrontWork ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                // disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                value={activity.activityDiscipline ?? '0'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={'0'}>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                disabled\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={currentLocation.includes('/edit')}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.id}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"1\">Calor moderado</option>\n              <option value=\"2\">Calor intenso</option>\n              <option value=\"3\">Frío moderado</option>\n              <option value=\"4\">Frío intenso</option>\n              <option value=\"5\">Lluvia débil</option>\n              <option value=\"6\">Lluvia moderada</option>\n              <option value=\"7\">Lluvia intensa</option>\n              <option value=\"8\">Viento débil</option>\n              <option value=\"9\">Viento moderado</option>\n              <option value=\"10\">Viento intenso</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"14x14\">14x14</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"4x3\">4x3</option>\n              <option value=\"5x2\">5x2</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={currentLocation.includes('/edit')}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceList,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deletedirectDotationWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"equipmentPlate\"\n            value={equipmentPlate.equipmentPlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n\n      // setEquipmentWorkForce(initialState) // Clear the object\n      // setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  // useEffect(() => {\n  //   let equipmentWorkForceTotalsCounter = {\n  //     equipmentWorkForceFront1: 0,\n  //     equipmentWorkForceFront2: 0,\n  //     equipmentWorkForceFront3: 0,\n  //     equipmentWorkForceFront4: 0,\n  //     equipmentWorkForceFront5: 0,\n  //     equipmentWorkForceFront6: 0,\n  //     equipmentWorkForceFront7: 0,\n  //   }\n\n  //   for (let data of equipmentWorkForceListContext) {\n  //     equipmentWorkForceTotalsCounter = {\n  //       equipmentWorkForceFront1:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n  //         Number(data.equipmentWorkForceFront1 ?? 0),\n  //       equipmentWorkForceFront2:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n  //         Number(data.equipmentWorkForceFront2 ?? 0),\n  //       equipmentWorkForceFront3:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n  //         Number(data.equipmentWorkForceFront3 ?? 0),\n  //       equipmentWorkForceFront4:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n  //         Number(data.equipmentWorkForceFront4 ?? 0),\n  //       equipmentWorkForceFront5:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n  //         Number(data.equipmentWorkForceFront5 ?? 0),\n  //       equipmentWorkForceFront6:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n  //         Number(data.equipmentWorkForceFront6 ?? 0),\n  //       equipmentWorkForceFront7:\n  //         Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n  //         Number(data.equipmentWorkForceFront7 ?? 0),\n  //     }\n  //   }\n  //   setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  // }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n              personal\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Frente de trabajo\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {enableSubFrontWork && (\n        <>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentSubWorkFront\"\n            label=\"SubFrente de trabajo\"\n            value={equipmentWorkForce.equipmentSubWorkFront || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n        </>\n      )}\n\n      <br />\n\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkFrontCharge\"\n        value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n        label=\"Equipo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={'0'}>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <br />\n\n      <CFormInput\n        type=\"text\"\n        id=\"equipmentWorkFrontQuantity\"\n        label=\"Cantidad\"\n        value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      />\n      <br />\n\n      <CFormTextarea\n        id=\"equipmentWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                      return charge.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteEquipmentWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Graphs = () => {\n  const { asarcoMachineryList: asarcoMachineryListContext } = useRegisterDailyReportCompany()\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryListContext) {\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CChart\n        type=\"pie\"\n        data={{\n          labels: [\n            'Tiempo Efectivo (Hrs)',\n            'Mantención Programada (Hrs)',\n            'Demora Programada (Hrs)',\n            'Perdida Operacional (Hrs)',\n            'Mantención No Programada (Hrs)',\n            'Demora No Programada (Hrs)',\n            'Reservas (Hrs)',\n          ],\n          datasets: [\n            {\n              labels: [\n                'Tiempo Efectivo (Hrs)',\n                'Mantención Programada (Hrs)',\n                'Demora Programada (Hrs)',\n                'Perdida Operacional (Hrs)',\n                'Mantención No Programada (Hrs)',\n                'Demora No Programada (Hrs)',\n                'Reservas (Hrs)',\n              ],\n              hoverOffset: 4,\n              backgroundColor: [\n                '#41B883',\n                '#E46651',\n                '#00D8FF',\n                '#DD1B16',\n                '#F41203',\n                '#002312',\n                '#A12942',\n              ],\n              data: [\n                // 1, 2, 3, 4, 5, 6, 7,\n                ((effectiveTime / totals) * 100).toFixed(2),\n                ((scheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((scheduleDelay / totals) * 100).toFixed(2),\n                ((opperationalLoss / totals) * 100).toFixed(2),\n                ((unscheduleMaintimeTime / totals) * 100).toFixed(2),\n                ((unscheduleDelay / totals) * 100).toFixed(2),\n                ((reserves / totals) * 100).toFixed(2),\n              ],\n            },\n          ],\n        }}\n        options={{\n          showAllTooltips: true,\n          interaction: {\n            intersect: false,\n            mode: 'index',\n          },\n          plugins: {\n            title: {\n              display: true,\n              // text: (ctx) => 'Tooltip position mode: ' + ctx.chart.options.plugins.tooltip.position,\n            },\n          },\n\n          //   plugins: {\n          //     legend: {\n          //       labels: {\n          //         color: getStyle('--cui-body-color'),\n          //       },\n          //     },\n          //   },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentList, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentList.filter((item) => item.id !== id)\n    setIncident(newData)\n    removeIncident(id)\n  }\n\n  useEffect(() => {\n    storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe ingresar un incidente o una no conformidad para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        value={incident.incident}\n        text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n        value={incident.nonConformity}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n      <br />\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIncident()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIncident(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeList, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el aljibe y su patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        label=\"Aljibe\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"aljibePlate\"\n            value={aljibe.aljibePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeOfferedNumber\"\n                value={aljibe.aljibeOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCertifiedNumber\"\n                value={aljibe.aljibeCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeWorkNumber\"\n                value={aljibe.aljibeWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar el personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteMachineryWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryList, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isEditMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isEditMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    if (!isEditMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      for (let directData of directWorkForceListContext) {\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [totalDirectWorkForceContext])\n\n  useEffect(() => {\n    if (!isEditMode) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isEditMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isEditMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit')) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [totalIndirectWorkForceContext])\n\n  useEffect(() => {\n    if (!currentLocation.includes('/edit')) {\n      storeTotalIndirectWorkForce(totalIndirectWorkForce)\n    }\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !currentLocation.includes('/edit')\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={currentLocation.includes('/edit')}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>\n              Debe seleccionar el equipo y la patente para generar el registro\n            </CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        label=\"Vehículo\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      {plates && (\n        <>\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Patente\"\n            id=\"vehiclePlate\"\n            value={vehiclePlate.vehiclePlate ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {plates.map((plate) => {\n              return (\n                <option key={plate.id} value={plate.id}>\n                  {plate.label}\n                </option>\n              )\n            })}\n          </CFormSelect>\n        </>\n      )}\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleList, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {error && (\n        <CToast\n          autohide={true}\n          visible={error}\n          color=\"danger\"\n          onClose={() => {\n            setError(false)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n          </div>\n        </CToast>\n      )}\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        label=\"Vehículo\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo)\n    },\n  })\n\n  // let iwfList = []\n  // let iwf = {}\n  // for (let indi of indirectWorkForceList) {\n  //   iwf = {}\n  //   iwf.indirectWorkForce = indi.indirectWorkForce\n  //   iwf.offeredNumber = indi.offeredNumber\n  //   iwf.contractedNumber = indi.contractedNumber\n  //   iwf.certified = indi.certified\n  //   iwf.breakNumber = indi.breakNumber\n  //   iwf.workNumber = indi.workNumber\n  //   iwf.hh = indi.indirectWorkForhhce\n  //   iwfList.push(iwf)\n  // }\n\n  // let dwfList = []\n  // let dwf = {}\n  // for (let direct of directWorkForceList) {\n  //   dwf = {}\n  //   dwf.indirectWorkForce = direct.indirectWorkForce\n  //   dwf.offeredNumber = direct.offeredNumber\n  //   dwf.contractedNumber = direct.contractedNumber\n  //   dwf.certified = direct.certified\n  //   dwf.breakNumber = direct.breakNumber\n  //   dwf.workNumber = direct.workNumber\n  //   dwf.hh = direct.indirectWorkForhhce\n  //   dwfList.push(dwf)\n  // }\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  // let ddwfList = []\n  // let ddwf = {}\n  // for (let directDotation of directDotationWorkForceList) {\n  //   ddwf = {}\n  //   ddwf.directDotationWorkForceObservation = directDotation.directDotationWorkForceObservation\n  //   ddwf.directWorkFront = directDotation.directWorkFront\n  //   ddwf.directSubWorkFront = directDotation.directSubWorkFront\n  //   ddwf.directWorkFrontCharge = directDotation.directWorkFrontCharge\n  //   ddwf.directWorkFrontQuantity = directDotation.directWorkFrontQuantity\n  //   ddwfList.push(ddwf)\n  // }\n\n  // let mwfList = []\n  // let mwf = {}\n  // for (let machineryWF of machineryWorkForceList) {\n  //   mwf = {}\n  //   mwf.machineryWorkForcebservation = machineryWF.machineryWorkForcebservation\n  //   mwf.machineryWorkForce = machineryWF.machineryWorkForce\n  //   mwf.machinerySubWorkFront = machineryWF.machinerySubWorkFront\n  //   mwf.machineryWorkFrontCharge = machineryWF.machineryWorkFrontCharge\n  //   mwf.machineryWorkFrontQuantity = machineryWF.machineryWorkFrontQuantity\n  //   mwfList.push(mwf)\n  // }\n\n  // let ewfList = []\n  // let ewf = {}\n  // for (let equipmentWF of equipmentWorkForceList) {\n  //   ewf = {}\n  //   ewf.equipmentWorkForce = equipmentWF.equipmentWorkForce\n  //   ewf.equipmentWorkForceObservation = equipmentWF.equipmentWorkForceObservation\n  //   ewf.equipmentSubWorkFront = equipmentWF.equipmentSubWorkFront\n  //   ewf.equipmentWorkFrontCharge = equipmentWF.equipmentWorkFrontCharge\n  //   ewf.equipmentWorkFrontQuantity = equipmentWF.equipmentWorkFrontQuantity\n  //   ewfList.push(ewf)\n  // }\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","_jsxs","className","children","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","item","index","charge","find","work","newData","filter","deleteActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","isEditMode","useLocation","pathname","includes","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","selectedMachinery","mac","toString","plate","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","_Fragment","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","deleteAsarcoMachinery","Comments","comment","setComment","storeComment","CFormTextarea","rows","CompanyReport","currentLocation","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","dailyReportDirectPersonalShift","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","dailyReportIndirectPersonalShift","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","deletedirectDotationWorkForce","DirectWorkForce","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","personal","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","selectedEquipment","equip","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","deleteEquipmentWorkForce","Graphs","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","asarcoData","CChart","labels","datasets","hoverOffset","backgroundColor","options","showAllTooltips","interaction","intersect","mode","plugins","title","display","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","concat","registerIncident","incidentInitialState","deleteIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","deleteIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","deletealjibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","_item$machinerySubWor","deleteMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","directSubstotalHHNumber","hours","offered","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","deletevehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","projectLS","vehicleWorkForceList","useContext","DailyReportContext","mutation","useMutation","mutationFn","newTodo","axios","post","equipList","eq","stringify","push","machinList","machin","ma","vehicList","ve","async","mutate","projectId","contractId","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}