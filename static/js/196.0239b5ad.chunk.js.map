{"version":3,"file":"static/js/196.0239b5ad.chunk.js","mappings":"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","sources":["hooks/useFetch.js","hooks/useGetBasicData.js","pages/Dashboard.jsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst fetchProducts = async (projectId) => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/projects', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst fetchUsers = async () => {\n  const res = await axios.get('https://b4b07e25f42d4135b6fc3791a6e1d1f8.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchContracts = async (contractId) => {\n  const res = await axios.get('https://2b3570b8072a44e09ce5b5a80a4c8012.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchBasicData = async (contractId) => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/basicData', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst testToken = async () => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/test', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nexport const fetchReportsData = async () => {\n  const res = await axios.get('https://pyg-production.up.railway.app/api/v1/reports', {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    },\n  })\n  return res.data.data\n}\n\nconst userType = localStorage.getItem('USER_TYPE')\n\nexport const useFetchProyects = (projectId) => {\n  return useQuery({\n    queryKey: ['projects'],\n    refetchType: 'all',\n    // refetchInterval: 10000,\n    refetchOnWindowFocus: true,\n    queryFn: async () => {\n      return fetchProducts(projectId)\n    },\n  })\n}\n\nexport const useFetchContract = (contractId) => {\n  return useQuery({\n    queryKey: ['contracts'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchContracts(contractId)\n    },\n  })\n}\n\nexport const useFetchBasicData = (contractId) => {\n  return useQuery({\n    queryKey: ['basics'],\n    staleTime: 0,\n    gcTime: 2147483647,\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchBasicData(contractId)\n    },\n  })\n}\n\nexport const useFetchUserList = () => {\n  return useQuery({\n    queryKey: ['users'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchUsers()\n    },\n  })\n}\n\nexport const useFetchReportsData = () => {\n  return useQuery({\n    queryKey: ['reports'],\n    staleTime: 0,\n    gcTime: 2147483647,\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchReportsData()\n    },\n  })\n}\n","import { useFetchBasicData } from './useFetch'\n\nconst useGetBasicData = (contractId) => {\n  const { data, isLoading, error } = useFetchBasicData(contractId)\n  return { data, isLoading, error }\n}\n\nexport default useGetBasicData\n","import React, { useEffect } from 'react'\nimport InformativePanel from 'src/components/InformativePanel'\nimport { CCard, CCardHeader, CButton, CCardBody, CCardText, CRow, CCol } from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport ProjectCollapse from 'src/components/ProjectCollapse'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useFetchReportsData } from 'src/hooks/useFetch'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport useGetBasicData from 'src/hooks/useGetBasicData'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst Dashboard = () => {\n  let navigate = useNavigate()\n  const { getProject, getContract } = useRegisterGeneralData()\n  const { clearData } = useRegisterDailyReport()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { data, isLoading, error } = useGetBasicData(contractLS.id)\n  const { getData } = useGetCachedQueryData()\n\n  useFetchReportsData()\n  const reportsQuery = getData('reports')\n\n  useEffect(() => {\n    localStorage.removeItem('daily_report')\n    clearData()\n  }, [])\n\n  useEffect(() => {\n    if (!projectLS || !contractLS) {\n      navigate(`/project_selector`)\n    }\n  }, [projectLS, contractLS])\n\n  const redirectTo = (url) => {\n    navigate(url)\n  }\n  return (\n    <div className=\"dashboard\">\n      <CCard>\n        <CCardHeader>Panel Informativo</CCardHeader>\n        <CCardBody>\n          <CCardText>\n            <InformativePanel />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n      {\n        /*localStorage.getItem('USER_TYPE') === 'admin' &&*/ reportsQuery &&\n          reportsQuery.length > 0 && (\n            <>\n              <br />\n              <CCard>\n                <CCardBody>\n                  <CCardText>\n                    <>\n                      <span>Tienes {reportsQuery.length} informes diarios generados.</span>\n                      <CRow>\n                        {reportsQuery.map((report) => {\n                          return (\n                            <>\n                              <CCol>\n                                <CButton\n                                  className=\"dashboard-button\"\n                                  onClick={() => {\n                                    localStorage.setItem('daily_report', report.id)\n                                    redirectTo('/informe-diario/edit')\n                                  }}\n                                >\n                                  {report.id}\n                                </CButton>\n                              </CCol>\n                            </>\n                          )\n                        })}\n                      </CRow>\n                    </>\n                  </CCardText>\n                </CCardBody>\n              </CCard>\n            </>\n          )\n      }\n\n      <br />\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <ProjectCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n      <br />\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <div>\n              <CRow>\n                <CCol sm={4}>\n                  <CButton\n                    className=\"dashboard-button\"\n                    onClick={() => {\n                      redirectTo('/informe-diario')\n                    }}\n                  >\n                    Informe Diario\n                  </CButton>\n                </CCol>\n                <CCol sm={4}>\n                  <CButton\n                    className=\"dashboard-button\"\n                    onClick={() => {\n                      redirectTo('/trisemanal')\n                    }}\n                  >\n                    Trisemanal\n                  </CButton>\n                </CCol>\n                <CCol sm={4}>\n                  <CButton\n                    className=\"dashboard-button\"\n                    onClick={() => {\n                      redirectTo('/carta-gantt')\n                    }}\n                  >\n                    Carta Gantt\n                  </CButton>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol sm={4}>\n                  <CButton\n                    className=\"dashboard-button\"\n                    onClick={() => {\n                      redirectTo('/avance')\n                    }}\n                  >\n                    Avance\n                  </CButton>\n                </CCol>\n                <CCol sm={4}>\n                  <CButton className=\"dashboard-button\">TOP NO+PAPEL</CButton>\n                </CCol>\n                <CCol sm={4}>\n                  {/* <CButton className=\"dashboard-button\">Carta Gantt</CButton> */}\n                </CCol>\n              </CRow>\n            </div>\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"names":["localStorage","getItem","useFetchProyects","projectId","useQuery","queryKey","refetchType","refetchOnWindowFocus","queryFn","async","axios","get","headers","Authorization","data","fetchProducts","useFetchContract","contractId","fetchContracts","useFetchBasicData","staleTime","gcTime","fetchBasicData","useFetchUserList","fetchUsers","useFetchReportsData","fetchReportsData","isLoading","error","Dashboard","navigate","useNavigate","getProject","getContract","useRegisterGeneralData","clearData","useRegisterDailyReport","projectLS","JSON","parse","contractLS","useGetBasicData","id","getData","useGetCachedQueryData","reportsQuery","useEffect","removeItem","redirectTo","url","_jsxs","className","children","CCard","_jsx","CCardHeader","CCardBody","CCardText","InformativePanel","length","_Fragment","CRow","map","report","CCol","CButton","onClick","setItem","ProjectCollapse","sm"],"sourceRoot":""}