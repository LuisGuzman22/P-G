{"version":3,"file":"static/js/315.a6d5875b.chunk.js","mappings":"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c,EAAgC,8BAChCC,EAA6B,4BAC7BL,EAA2B,sBAC3Bod,EAAqB,uBACrB/O,EAAsB,wBACtBE,EAAuB,yBACvBC,EAAwB,wBACxB9G,EAAuB,yBACvBC,EAAwB,uBACxBH,EAAsB,sBACtB6V,EAAqB,uBACrBC,EAAsB,qBACtB/B,EAAoB,aACpB/f,EAAY,QACZF,EAAO,cACPwN,EAAa,SACbL,EAAQ,eACRM,EAAc,eACd2G,EAAc,gBACdC,EAAe,cACfL,EAAa,eACb1K,EAAc,gBACdC,EAAe,cACfL,EAAa,aACbwV,EAAY,cACZC,EAAa,YACbL,EAAW,cACXnnB,EAAa,eACbC,EAAc,aACdL,EAAY,qBACZ4G,EAAoB,sBACpBC,EAAqB,oBACrB1B,EAAmB,oBACnBoP,EAAmB,qBACnBC,GAAoB,mBACpBH,GAAkB,kBAClBsR,GAAiB,mBACjBC,GAAkB,iBAClBH,GAAgB,YAChBzL,GAAW,aACXC,GAAY,WACZL,GAAU,aACVuP,GAAY,YACZpiB,GAAW,UACXqiB,GAAS,UACThL,GAAS,WACTE,GAAU,YACVC,KACE8K,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,MAAO,CACL5f,UACAF,mBACAI,0BACAD,4BACAF,2BACAoO,6BACAxH,uBACAC,wBACAZ,sBACAiI,wBACAG,0BACAyL,8BACAV,yBACA7B,4BACAV,uBACAsK,qCACAC,kCACAC,gCACA/c,mCACAC,gCACAL,8BACAod,wBACA/O,yBACAE,0BACAC,2BACA9G,0BACAC,2BACAH,yBACA6V,wBACAC,yBACA/B,uBACA/f,eACAF,UACAwN,gBACAL,WACAM,iBACA2G,iBACAC,kBACAL,gBACA1K,iBACAC,kBACAL,gBACAwV,eACAC,gBACAL,cACAnnB,gBACAC,iBACAL,eACA4G,uBACAC,wBACA1B,sBACAoP,sBACAC,wBACAH,sBACAsR,qBACAC,sBACAH,oBACAzL,eACAC,gBACAL,cACAuP,gBACApiB,eACAqiB,aACAhL,aACAE,cACAC,eACD,C,mCC5II,MAAM1d,EAAYqqB,GAEhBA,EAAEC,MADC,oB","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAdvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAdvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAdvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAdvancePercent: activity.activityAccumulatedAdvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityListContext, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityListContext.filter((item) => item.id !== id)\n    setActivityList(newData)\n    removeActivity(id)\n  }\n\n  const editActivity = (id) => {\n    const selectedActivity = activityListContext.find((item) => item.id === id)\n    setActivity({\n      activityFrontWork: selectedActivity.activityFrontWork,\n      primaveraId: selectedActivity.primaveraId,\n      activityName: selectedActivity.activityName,\n      activityDiscipline: selectedActivity.activityDiscipline,\n      activityTotalAmount: selectedActivity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: selectedActivity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: selectedActivity.activityActualShiftQuantity,\n      activityAccumulatedAdvancePercent: selectedActivity.activityAccumulatedAdvancePercent,\n      activityUnit: selectedActivity.activityUnit,\n      activityHoursSpendPrevius: selectedActivity.activityHoursSpendPrevius,\n      activityHoursSpendShift: selectedActivity.activityHoursSpendShift,\n      activityHoursAccumulated: selectedActivity.activityHoursAccumulated,\n    })\n\n    deleteActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    <option value=\"Obras_civiles\">Obras Civiles</option>\n                    <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAdvancePercent\"\n                    value={activity.activityAccumulatedAdvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAdvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteActivity(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editActivity(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useRef, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const pieChartElement = useRef(null)\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const [isInView, setIsInView] = useState(false)\n\n  const checkInView = () => {\n    const rect = pieChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  useEffect(() => {\n    document.addEventListener('scroll', checkInView)\n    return () => {\n      document.removeEventListener('scroll', checkInView)\n    }\n  }, [])\n\n  const [imagenPieChart, setImagenPieChart] = useState()\n  const [pieChartData, setPieChartData] = useState([\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', 0],\n    ['Mantención Programada (Hrs)', 0],\n    ['Demora Programada (Hrs)', 0],\n    ['Perdida Operacional (Hrs)', 0],\n    ['Mantención No Programada (Hrs)', 0],\n    ['Demora No Programada (Hrs)', 0],\n    ['Reservas (Hrs)', 0],\n  ])\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryListContext, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryListContext.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  const editAsarcoMachinery = (id) => {\n    const selectedAsarcoMachinery = asarcoMachineryListContext.find((item) => item.id === id)\n\n    const selectedMachinery = basicQuery.machinery.find((mac) => {\n      return mac.id.toString() === selectedAsarcoMachinery.machinery.toString()\n    })\n    setPlates(selectedMachinery.plate)\n\n    setAsarcoMachinery({\n      machinery: selectedAsarcoMachinery.machinery,\n      asarcoMachineryEffectiveTime: selectedAsarcoMachinery.asarcoMachineryEffectiveTime,\n      asarcoMachineryUnscheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n      asarcoMachineryScheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryScheduleMaintenance,\n      asarcoMachineryUnscheduleDelay: selectedAsarcoMachinery.asarcoMachineryUnscheduleDelay,\n      asarcoMachineryReserves: selectedAsarcoMachinery.asarcoMachineryReserves,\n      asarcoMachineryHorometer: selectedAsarcoMachinery.asarcoMachineryHorometer,\n      asarcoMachineryOpperationalLoss: selectedAsarcoMachinery.asarcoMachineryOpperationalLoss,\n      asarcoMachineryScheduleDelay: selectedAsarcoMachinery.asarcoMachineryScheduleDelay,\n      machineryPlate: selectedAsarcoMachinery.machineryPlate,\n    })\n    deleteAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  const convertAsarcoChart = () => {\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenPieChart(dataUrl)\n        }\n        // storeGraphs({ asarcoChart: dataUrl })\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  useEffect(() => {\n    setPieChartData([\n      ['Task', 'Hours per Day'],\n      ['Tiempo Efectivo (Hrs)', asarcoMachineryTotals.asarcoMachineryEffectiveTime],\n      ['Mantención Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleMaintenance],\n      ['Demora Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleDelay],\n      ['Perdida Operacional (Hrs)', asarcoMachineryTotals.asarcoMachineryOpperationalLoss],\n      [\n        'Mantención No Programada (Hrs)',\n        asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance,\n      ],\n      ['Demora No Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryUnscheduleDelay],\n      ['Reservas (Hrs)', asarcoMachineryTotals.asarcoMachineryReserves],\n    ])\n  }, [asarcoMachineryTotals])\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [pieChartData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'asarcoChart', value: imagenPieChart })\n  }, [imagenPieChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteAsarcoMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAsarcoMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n      <div ref={pieChartElement}>\n        <Chart chartType=\"PieChart\" data={pieChartData} width={'100%'} height={'300px'} />\n      </div>\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isViewMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        disabled={isViewMode}\n        value={isViewMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { Button } from '@coreui/coreui'\nimport { validate } from 'src/utils/validate'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const {\n    storeCompanyData,\n    storeIndirectCompanyTurn,\n    company,\n    removeIndirectCompanyTurn,\n    indirectCompanyTurnList: indirectCompanyTurnListContext,\n  } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const initialState = {\n    dailyReportIndirectPersonalShift: undefined,\n    dailyReportIndirectPersonalHours: undefined,\n    dailyReportIndirectPersonalJourney: undefined,\n  }\n\n  const [indirectPersonalList, setIndirectPersonalList] = useState([])\n  const [indirectPersonal, setIndirectPersonal] = useState(initialState)\n  const [error, setError] = useState(false)\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  const onChangeIndirectPersonal = (e) => {\n    if (validate(e.target.value)) {\n      setIndirectPersonal({ ...indirectPersonal, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectTurn = () => {\n    if (\n      !indirectPersonal.dailyReportIndirectPersonalShift ||\n      !indirectPersonal.dailyReportIndirectPersonalHours ||\n      !indirectPersonal.dailyReportIndirectPersonalJourney\n    ) {\n      setError(true)\n    } else {\n      const indirectPersonalInitialState = {\n        id: uuidv4(),\n        dailyReportIndirectPersonalShift: indirectPersonal.dailyReportIndirectPersonalShift,\n        dailyReportIndirectPersonalHours: indirectPersonal.dailyReportIndirectPersonalHours,\n        dailyReportIndirectPersonalJourney: indirectPersonal.dailyReportIndirectPersonalJourney,\n      }\n      setIndirectPersonal(initialState) // Clear the object\n      setIndirectPersonalList([...indirectCompanyTurnListContext, indirectPersonalInitialState])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectCompanyTurn(indirectPersonalList)\n  }, [indirectPersonalList])\n\n  const deleteIndirectCompanyTurn = (id) => {\n    const newData = indirectCompanyTurnListContext.filter((item) => item.id !== id)\n    setIndirectPersonalList(newData)\n    removeIndirectCompanyTurn(id)\n  }\n\n  const editIndirectCompanyTurn = (id) => {\n    const newData = indirectCompanyTurnListContext.find((item) => item.id === id)\n    setIndirectPersonal({\n      dailyReportIndirectPersonalShift: newData.dailyReportIndirectPersonalShift,\n      dailyReportIndirectPersonalHours: newData.dailyReportIndirectPersonalHours,\n      dailyReportIndirectPersonalJourney: newData.dailyReportIndirectPersonalJourney,\n    })\n    deleteIndirectCompanyTurn(id)\n  }\n\n  console.log('indirectCompanyTurnListContext', indirectCompanyTurnListContext)\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={isViewMode}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={isViewMode}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || projectLS.manager}\n              text=\"\"\n              disabled\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={indirectPersonal.dailyReportIndirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeIndirectPersonal(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <CButton\n              onClick={() => {\n                registerIndirectTurn()\n              }}\n            >\n              Registrar turno personal indirecto\n            </CButton>\n          </CCol>\n        </CRow>\n        {indirectCompanyTurnListContext &&\n          indirectCompanyTurnListContext.length > 0 &&\n          indirectCompanyTurnListContext[0].dailyReportIndirectPersonalShift && (\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Turno (Personal indirecto)</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Horas turno (Personal indirecto)</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Jornada (Personal indirecto)</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {indirectCompanyTurnListContext.map((item, index) => {\n                  const selectedJourney = basicQuery?.shifts.find(\n                    (shift) => shift.id == item.dailyReportIndirectPersonalJourney,\n                  )\n\n                  const selectedShift = basicQuery?.indirect_staff_shift.find(\n                    (turn) => turn.id == item.dailyReportIndirectPersonalShift,\n                  )\n\n                  return (\n                    <CTableRow key={index}>\n                      <CTableDataCell>{selectedShift?.name ?? ''}</CTableDataCell>\n                      <CTableDataCell>{item.dailyReportIndirectPersonalHours ?? 0}</CTableDataCell>\n                      <CTableDataCell>{selectedJourney?.name ?? ''}</CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteIndirectCompanyTurn(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editIndirectCompanyTurn(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  useEffect(() => {\n    setDirectDotationWorkForce({\n      ...directDotationWorkForce,\n      directSubWorkFront: enableSubFrontWork\n        ? directDotationWorkForce.directSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceListContext,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceListContext.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  const editDirectDotationWorkForce = (id) => {\n    const selectDirectDotationWorkForce = directDotationWorkForceListContext.find(\n      (item) => item.id === id,\n    )\n    if (selectDirectDotationWorkForce.directSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setDirectDotationWorkForce({\n      directWorkFront: selectDirectDotationWorkForce.directWorkFront,\n      directDotationWorkForceObservation:\n        selectDirectDotationWorkForce.directDotationWorkForceObservation,\n      directSubWorkFront: selectDirectDotationWorkForce.directSubWorkFront,\n      directWorkFrontCharge: selectDirectDotationWorkForce.directWorkFrontCharge,\n      directWorkFrontQuantity: selectDirectDotationWorkForce.directWorkFrontQuantity,\n    })\n    deletedirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deletedirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editDirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const columnChartElement = useRef(null)\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [isInView, setIsInView] = useState(false)\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [barGraphData, setBarGraphData] = useState([\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', 0, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', 0, 'silver'], // English color name\n  ])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceListContext, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceListContext.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  const editDirectWorkForce = (id) => {\n    const selectedDirectWorkForce = directWorkForceListContext.find((item) => item.id === id)\n\n    setDirectWorkForce({\n      directWorkForce: selectedDirectWorkForce.directWorkForce,\n      directWorkForceOfferedNumber: selectedDirectWorkForce.offeredNumber,\n      directWorkForceContractedNumber: selectedDirectWorkForce.contractedNumber,\n      directWorkForceCertifiedNumber: selectedDirectWorkForce.certified,\n      directWorkForceBreakNumber: selectedDirectWorkForce.breakNumber,\n      directWorkForceWorkNumber: selectedDirectWorkForce.workNumber,\n      directWorkForceHHNumber: selectedDirectWorkForce.hh,\n    })\n    deleteDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  useEffect(() => {\n    let offered = 0\n    let worked = 0\n    directWorkForceListContext.map((data) => {\n      offered = offered + Number(data.offeredNumber)\n      worked = worked + Number(data.workNumber)\n    })\n    setTotalPlanedDotation(offered)\n    setTotalWorkDotation(worked)\n    // convertDotationChart()\n  }, [directWorkForceListContext])\n\n  const convertDotationChart = () => {\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenColumnChart(dataUrl)\n        }\n        // storeGraphs({ dotationChart: dataUrl })\n      })\n      .catch((err) => {})\n  }\n\n  useEffect(() => {\n    setBarGraphData([\n      ['Dotación', 'Dotación', { role: 'style' }],\n      ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n      ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n    ])\n  }, [totalPlanedDotation, totalWorkDotation])\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [barGraphData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'dotationChart', value: imagenColumnChart })\n  }, [imagenColumnChart])\n\n  const checkInView = () => {\n    const rect = columnChartElement?.current?.getBoundingClientRect()\n    if (rect) setIsInView(rect.top < window.innerHeight && rect.bottom >= 0)\n  }\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [isInView])\n\n  useEffect(() => {\n    checkInView()\n  }, [])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {!isViewMode && (\n        <CButton\n          className=\"btn-project-action\"\n          onClick={() => {\n            registerDirectWorkForce()\n          }}\n        >\n          Registrar\n        </CButton>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteDirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editDirectWorkForce(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={columnChartElement} style={{ width: '100%' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={barGraphData} />\n      </div>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentListContext.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipment = equipmentListContext.find((item) => item.id === id)\n    setEquipment({\n      equipment: selectedEquipment.equipment,\n      equipmentOfferedNumber: selectedEquipment.actions.equipmentOfferedNumber,\n      equipmentCertifiedNumber: selectedEquipment.actions.equipmentCertifiedNumber,\n      equipmentWorkNumber: selectedEquipment.actions.equipmentWorkNumber,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateListContext.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipmentPlate = equipmentPlateListContext.find((item) => item.id === id)\n    const selectedEquipment = basicQuery.equipment.find(\n      (equip) => equip.id.toString() === selectedEquipmentPlate.equipment.toString(),\n    )\n\n    setPlates(selectedEquipment.plate)\n\n    setEquipmentPlate({\n      equipment: selectedEquipmentPlate.equipment,\n      equipmentEffectiveTime: selectedEquipmentPlate.equipmentEffectiveTime,\n      equipmentCorrectiveMaintenance: selectedEquipmentPlate.equipmentCorrectiveMaintenance,\n      equipmentPreventiveMaintenance: selectedEquipmentPlate.equipmentPreventiveMaintenance,\n      equipmentOutOfService: selectedEquipmentPlate.equipmentOutOfService,\n      equipmentWaiting: selectedEquipmentPlate.equipmentWaiting,\n      equipmentNoOperator: selectedEquipmentPlate.equipmentNoOperator,\n      equipmentInitialHorometer: selectedEquipmentPlate.equipmentInitialHorometer,\n      equipmentFinalHorometer: selectedEquipmentPlate.equipmentFinalHorometer,\n      equipmentPlate: selectedEquipmentPlate.equipmentPlate,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceListContext, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceListContext.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  const editEquipmentWorkForce = (id) => {\n    const selectedEquipmentWorkForce = equipmentWorkForceListContext.find((item) => item.id === id)\n\n    if (selectedEquipmentWorkForce.equipmentSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setEquipmentWorkForce({\n      equipmentWorkForce: selectedEquipmentWorkForce.equipmentWorkForce,\n      equipmentWorkForceObservation: selectedEquipmentWorkForce.equipmentWorkForceObservation,\n      equipmentSubWorkFront: selectedEquipmentWorkForce.equipmentSubWorkFront,\n      equipmentWorkFrontCharge: selectedEquipmentWorkForce.equipmentWorkFrontCharge,\n      equipmentWorkFrontQuantity: selectedEquipmentWorkForce.equipmentWorkFrontQuantity,\n    })\n    deleteEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    setEquipmentWorkForce({\n      ...equipmentWorkForce,\n      equipmentSubWorkFront: enableSubFrontWork\n        ? equipmentWorkForce.equipmentSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                deleteEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              eliminar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                editEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              Editar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentContext, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentContext.filter((item) => item.id !== id)\n    setIncidentList(newData)\n    removeIncident(id)\n  }\n\n  const editIncident = (id) => {\n    const selectedIncident = incidentContext.find((item) => item.id === id)\n    setIncident({\n      incident: selectedIncident.incident,\n      nonConformity: selectedIncident.nonConformity,\n    })\n    deleteIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIncident(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIncident(item.id)\n                          }}\n                        >\n                          editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (isCreatingMode) setIndirectWorkForceList(indirectWorkForceListContext)\n  // }, [indirectWorkForceListContext])\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForceList([\n        // ...indirectWorkForceList,\n        ...indirectWorkForceListContext,\n        indirectWorkForceInitialState,\n      ])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceListContext.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  const editIndirectWorkForce = (id) => {\n    const selectedIndirectWorkForce = indirectWorkForceListContext.find((item) => item.id === id)\n    setIndirectWorkForce({\n      indirectWorkForce: selectedIndirectWorkForce.indirectWorkForce,\n      contractAdministratorOfferedNumber: selectedIndirectWorkForce.offeredNumber,\n      contractAdministratorContractedNumber: selectedIndirectWorkForce.contractedNumber,\n      contractAdministratorCertified: selectedIndirectWorkForce.certified,\n      contractAdministratorBreakNumber: selectedIndirectWorkForce.breakNumber,\n      contractAdministratorWorkNumber: selectedIndirectWorkForce.workNumber,\n      contractAdministratorHHNumber: selectedIndirectWorkForce.hh,\n    })\n    deleteIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIndirectWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIndirectWorkForce(item.id)\n                          }}\n                        >\n                          Editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeListContext, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeListContext.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  const editAljibe = (id) => {\n    const selectedAljibe = aljibeListContext.find((item) => item.id === id)\n\n    const selectedAljibeData = basicQuery.aljibe.find((alj) => {\n      return alj.id.toString() === selectedAljibe.aljibe.toString()\n    })\n    setPlates(selectedAljibeData.plate)\n\n    setAlgibe({\n      aljibe: selectedAljibe.aljibe,\n      aljibeCachimbaName: selectedAljibe.aljibeCachimbaName,\n      aljibeQuantityTurns: selectedAljibe.aljibeQuantityTurns,\n      aljibeM3: selectedAljibe.aljibeM3,\n      aljibePlate: selectedAljibe.aljibePlate,\n      aljibeOfferedNumber: selectedAljibe.aljibeOfferedNumber,\n      aljibeCertifiedNumber: selectedAljibe.aljibeCertifiedNumber,\n      aljibeWorkNumber: selectedAljibe.aljibeWorkNumber,\n    })\n\n    deletealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeOfferedNumber\"\n                    value={aljibe.aljibeOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCertifiedNumber\"\n                    value={aljibe.aljibeCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeWorkNumber\"\n                    value={aljibe.aljibeWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletealjibe(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAljibe(item.id)\n                        }}\n                      >\n                        editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceListContext, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceListContext.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  const editMachineryWorkForce = (id) => {\n    const selectedMachineryWorkForce = machineryWorkForceListContext.find((item) => item.id === id)\n    if (selectedMachineryWorkForce.machinerySubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setMachineryWorkForce({\n      machineryWorkForce: selectedMachineryWorkForce.machineryWorkForce,\n      machineryWorkForceObservation: selectedMachineryWorkForce.machineryWorkForceObservation,\n      machinerySubWorkFront: selectedMachineryWorkForce.machinerySubWorkFront,\n      machineryWorkFrontCharge: selectedMachineryWorkForce.machineryWorkFrontCharge,\n      machineryWorkFrontQuantity: selectedMachineryWorkForce.machineryWorkFrontQuantity,\n    })\n    deleteMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    setMachineryWorkForce({\n      ...machineryWorkForce,\n      machinerySubWorkFront: enableSubFrontWork\n        ? machineryWorkForce.machinerySubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteMachineryWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editMachineryWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryListContext, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryListContext.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  const editMachinery = (id) => {\n    const selectedMachinery = machineryListContext.find((item) => item.id === id)\n    setMachinery({\n      machinery: selectedMachinery.machinery,\n      machineryOfferedNumber: selectedMachinery.actions.machineryOfferedNumber,\n      machineryCertifiedNumber: selectedMachinery.actions.machineryCertifiedNumber,\n      machineryWorkNumber: selectedMachinery.actions.machineryWorkNumber,\n    })\n    deleteMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\nimport firma2 from 'src/assets/images/firma2.png'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 5\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const { photoList: photoListContext, storePhoto, removePhoto } = useRegisterDailyReportCompany()\n\n  const useFileState = (initialCount) => {\n    const [items, setItems] = useState(\n      Array.from({ length: initialCount }, () => ({ file: null, description: '', urlImg: '' })),\n    )\n\n    const setFileAndDescription = (index, file, description) => {\n      setItems((prevItems) => {\n        const newItems = [...prevItems]\n        const blob = file || file !== null ? file.slice(0, file.size, file.type) : undefined\n        const newFile = blob\n          ? new File([blob], `${uuidv4().split('-')[0]}.png`, { type: 'image/png' })\n          : undefined\n        const urlImg = newFile ? URL.createObjectURL(newFile) : undefined\n        newItems[index] = { file: newFile, description, urlImg }\n        return newItems\n      })\n    }\n\n    return [items, setFileAndDescription]\n  }\n\n  const [items, setFileAndDescription] = useFileState(5) // Adjust the number of files as needed\n\n  useEffect(() => {\n    if (!isViewMode) storePhoto(items)\n  }, [items])\n\n  const onChangeFile = (pos, e) => {\n    if (pos >= 0 && pos < items.length) {\n      const file = e.target.files[0]\n      const description = items[pos].description // Retain the current description\n      setFileAndDescription(pos, file, description)\n    }\n  }\n\n  const onChangeDescription = (pos, e) => {\n    if (pos >= 0 && pos < items.length) {\n      const file = items[pos].file // Retain the current file\n      const description = e.target.value\n      setFileAndDescription(pos, file, description)\n    }\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id={`photoDescription-${i}`}\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => onChangeDescription(i, e)}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id={`photo-${i}`}\n                aria-describedby=\"inputGroupFileAddon03\"\n                onChange={(e) => {\n                  onChangeFile(i, e)\n                }}\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n                accept=\"image/png, image/jpeg\"\n              />\n            </CCol>\n            <CCol>\n              <img src={items[i].urlImg} style={{ width: '70%' }} />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const { getData } = useGetCachedQueryData()\n  const reportsQuery = getData('reports')\n\n  const { totalDirectWorkForce: totalDirectWorkForcePrevious } =\n    reportsQuery !== undefined && reportsQuery.length > 0 ? reportsQuery[0] : 0\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directPreviusAccumulated: totalDirectWorkForcePrevious?.directCurrentAccumulated || 0,\n    })\n  }, [totalDirectWorkForcePrevious])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForcePrevious?.directCurrentAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForcePrevious?.directCurrentAccumulated || 0) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isViewMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n  const { getData } = useGetCachedQueryData()\n  const reportsQuery = getData('reports')\n\n  // let totalIndirectWorkForcePrevious = undefined\n\n  // if (reportsQuery !== undefined && reportsQuery.length > 0) {\n  //   totalIndirectWorkForcePrevious = reportsQuery[0].totalIndirectWorkForce\n  // } else {\n  //   totalIndirectWorkForcePrevious = 0\n  // }\n\n  const { totalIndirectWorkForce: totalIndirectWorkForcePrevious } =\n    reportsQuery !== undefined && reportsQuery.length > 0 ? reportsQuery[0] : 0\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectPreviusAccumulated: totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0,\n    })\n  }, [totalIndirectWorkForcePrevious])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForcePrevious?.indirectCurrentAccumulated || 0) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                disabled={isViewMode}\n                // value={totalIndirectWorkForce.indirectPreviusAccumulated || '0'}\n                value={\n                  !isViewMode\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                // disabled={isViewMode}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateListContext, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateListContext.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  const editVehiclePlate = (id) => {\n    const selectedVehiclePlate = vehiclePlateListContext.find((item) => item.id === id)\n\n    const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n      return vehic.id.toString() === selectedVehiclePlate.vehicle.toString()\n    })\n    setPlates(selectedVehicle.plate)\n\n    setVehiclePlate({\n      vehicle: selectedVehiclePlate.vehicle,\n      vehicleEffectiveTime: selectedVehiclePlate.vehicleEffectiveTime,\n      vehicleCorrectiveMaintenance: selectedVehiclePlate.vehicleCorrectiveMaintenance,\n      vehiclePreventiveMaintenance: selectedVehiclePlate.vehiclePreventiveMaintenance,\n      vehicleOutOfService: selectedVehiclePlate.vehicleOutOfService,\n      vehicleWaiting: selectedVehiclePlate.vehicleWaiting,\n      vehicleNoOperator: selectedVehiclePlate.vehicleNoOperator,\n      vehicleInitialHorometer: selectedVehiclePlate.vehicleInitialHorometer,\n      vehicleFinalHorometer: selectedVehiclePlate.vehicleFinalHorometer,\n      vehiclePlate: selectedVehiclePlate.vehiclePlate,\n    })\n\n    deletevehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehiclePlate(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehiclePlate(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleListContext, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleListContext.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  const editVehicle = (id) => {\n    const selectedVehicle = vehicleListContext.find((item) => item.id === id)\n    setVehicle({\n      vehicle: selectedVehicle.vehicle,\n      vehicleOfferedNumber: selectedVehicle.actions.vehicleOfferedNumber,\n      vehicleCertifiedNumber: selectedVehicle.actions.vehicleCertifiedNumber,\n      vehicleWorkNumber: selectedVehicle.actions.vehicleWorkNumber,\n    })\n    deletevehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehicle(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehicle(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectCompanyTurnList,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n    graphList,\n    photoList,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      // axios.post('ASD', newTodo, {\n      //   headers: {\n      //     'Content-Type': 'multipart/form-data',\n      //   },\n      // }),\n\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    // console.log('post', photoList)\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectCompanyTurnList,\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n      graphList,\n      photoList,\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    indirectCompanyTurnList,\n    removeIndirectCompanyTurn,\n    storeIndirectCompanyTurn,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n    photoList,\n    storePhoto,\n    removePhoto,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    indirectCompanyTurnList,\n    removeIndirectCompanyTurn,\n    storeIndirectCompanyTurn,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n    photoList,\n    storePhoto,\n    removePhoto,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","currentLocation","useLocation","pathname","isViewMode","includes","isCreatingMode","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAdvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","deleteActivity","newData","filter","item","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","index","charge","find","work","selectedActivity","editActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","pieChartElement","useRef","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","isInView","setIsInView","checkInView","_pieChartElement$curr","rect","current","getBoundingClientRect","top","window","innerHeight","bottom","convertAsarcoChart","document","addEventListener","removeEventListener","imagenPieChart","setImagenPieChart","pieChartData","setPieChartData","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","storeGraphs","selectedMachinery","mac","toString","plate","deleteAsarcoMachinery","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","toPng","cacheBust","then","dataUrl","catch","err","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","selectedAsarcoMachinery","editAsarcoMachinery","ref","Chart","chartType","width","height","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","storeCompanyData","storeIndirectCompanyTurn","company","removeIndirectCompanyTurn","indirectCompanyTurnList","indirectCompanyTurnListContext","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","dailyReportIndirectPersonalShift","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","indirectPersonalList","setIndirectPersonalList","indirectPersonal","setIndirectPersonal","onChangeIndirectPersonal","deleteIndirectCompanyTurn","console","log","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","manager","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","indirect_staff_shift","indirect_staf","registerIndirectTurn","indirectPersonalInitialState","_selectedShift$name","_item$dailyReportIndi","_selectedJourney$name","selectedJourney","selectedShift","turn","editIndirectCompanyTurn","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","deletedirectDotationWorkForce","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","selectDirectDotationWorkForce","editDirectDotationWorkForce","DirectWorkForce","columnChartElement","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","imagenColumnChart","setImagenColumnChart","barGraphData","setBarGraphData","role","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","deleteDirectWorkForce","offered","worked","offeredNumber","workNumber","convertDotationChart","_columnChartElement$c","registerDirectWorkForce","directWorkForceInitialState","contractedNumber","certified","breakNumber","hh","personal","selectedDirectWorkForce","editDirectWorkForce","style","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","deleteEquipment","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","selectedEquipment","editEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","equip","selectedEquipmentPlate","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","deleteEquipmentWorkForce","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","selectedEquipmentWorkForce","editEquipmentWorkForce","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","deleteIncident","concat","registerIncident","incidentInitialState","selectedIncident","editIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","deleteIndirectWorkForce","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","selectedIndirectWorkForce","editIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","deletealjibe","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","selectedAljibeData","editAljibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","deleteMachineryWorkForce","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","selectedMachineryWorkForce","editMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","deleteMachinery","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","editMachinery","PhotoRecord","photoList","photoListContext","storePhoto","removePhoto","items","setFileAndDescription","initialCount","setItems","Array","from","file","description","urlImg","prevItems","newItems","blob","slice","size","newFile","File","split","URL","createObjectURL","useFileState","_","i","onChangeDescription","pos","onChangeFile","files","accept","src","TotalDirectWorkForce","reportsQuery","totalDirectWorkForce","totalDirectWorkForcePrevious","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForcePrevious","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","deletevehiclePlate","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","selectedVehiclePlate","editVehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","deletevehicle","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","editVehicle","Loading","Lottie","animationData","loadingjson","loop","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","graphList","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","headers","onSuccess","onError","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}