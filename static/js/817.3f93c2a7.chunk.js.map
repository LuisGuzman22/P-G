{"version":3,"file":"static/js/817.3f93c2a7.chunk.js","mappings":"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","sources":["hooks/useRegisterDailyReportCompany.js","hooks/useRegisterDailyReport.js","components/daily-report/company-report.jsx","utils/validate.js","components/daily-report/indirect-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/dotation-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/vehicle.jsx","components/daily-report/vehicle-work-force.jsx","components/daily-report/activities.jsx","components/daily-report/comments.jsx","components/daily-report/graphs.jsx","components/daily-report/incidents.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/industrial-water-control.jsx","components/DailyReportCollapse.jsx","hooks/useGetCachedQueryData.js"],"sourcesContent":["import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  } = useContext(DailyReportContext)\n\n  return {\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    storeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    indirectDotationWorkForceList,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    workforceDotation,\n    comments,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n  } = useContext(DailyReportContext)\n\n  const mutation = useMutation({\n    mutationFn: (newTodo) => {\n      return axios.post('/prueba', newTodo)\n    },\n  })\n\n  const registerData = async () => {\n    mutation.mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      indirectDotationWorkForceList, // 6\n      directDotationWorkForceList, // 7\n      workforceDotation, // 8\n      machineryList, // 9\n      machineryWorkForceList, // 10\n      equipmentList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList, // 13\n      vehicleWorkForceList, // 14\n      activityList, // 15\n      comments, // 16\n      // 17 (graficos)\n      incident, // 18 //\n    })\n  }\n\n  return { registerData }\n}\n\nexport default useRegisterDailyReport\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\n\nconst CompanyReport = () => {\n  const { storeCompanyData } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <h4>Empresa</h4>\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"4x4\">4x4</option>\n              <option value=\"7x7\">7x7</option>\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option>Seleccione</option>\n              <option value=\"dia\">Día</option>\n              <option value=\"noche\">Noche</option>\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndirectWorkForce = () => {\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerIndirectWorkForce = () => {\n    const indirectWorkForceInitialState = {\n      id: uuidv4(),\n      indirectWorkForce: indirectWorkForce.indirectWorkForce,\n      actions: {\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      },\n    }\n    setIndirectWorkForce(initialState) // Clear the object\n    setIndirectWorkForceList([...indirectWorkForceList, indirectWorkForceInitialState])\n  }\n\n  useEffect(() => {\n    storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceList.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"indirectWorkForce\"\n        value={indirectWorkForce.indirectWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n          return (\n            <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n              {indirectPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorCertified\"\n                placeholder=\"Acreditados\"\n                value={indirectWorkForce.contractAdministratorCertified || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"contractAdministratorHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerIndirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.indirectWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                    <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteIndirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalIndirectWorkForce = () => {\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const { storeTotalIndirectWorkForce } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({ ...totalIndirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalContractedNumber || ''}\n                placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalCertifiedNumber || ''}\n                placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalBreakNumber || ''}\n                placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalWorkNumber || ''}\n                placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={totalIndirectWorkForce.indirectSubtotalHHNumber || ''}\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={totalIndirectWorkForce.indirectPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={totalIndirectWorkForce.indirectCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst TotalDirectWorkForce = () => {\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const { storeTotalDirectWorkForce } = useRegisterDailyReportCompany()\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={totalDirectWorkForce.directSubtotalOfferedNumber || ''}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={totalDirectWorkForce.directSubtotalContractedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={totalDirectWorkForce.directSubtotalCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={totalDirectWorkForce.directSubtotalBreakNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={totalDirectWorkForce.directSubtotalWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={totalDirectWorkForce.directSubtotalHHNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={totalDirectWorkForce.directCurrentAccumulated || ''}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectDotationWorkForce = () => {\n  const initialState = {\n    directWorkForce: undefined,\n    directDotationWorkForceObservation: undefined,\n    directWorkForceFront1: undefined,\n    directWorkForceFront2: undefined,\n    directWorkForceFront3: undefined,\n    directWorkForceFront4: undefined,\n    directWorkForceFront5: undefined,\n    directWorkForceFront6: undefined,\n    directWorkForceFront7: undefined,\n  }\n\n  const directDotationTotalsInitialState = {\n    directWorkForceFront1: 0,\n    directWorkForceFront2: 0,\n    directWorkForceFront3: 0,\n    directWorkForceFront4: 0,\n    directWorkForceFront5: 0,\n    directWorkForceFront6: 0,\n    directWorkForceFront7: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [directDotationTotals, setDirectDotationTotals] = useState(directDotationTotalsInitialState)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directWorkForce') {\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForce({ ...directDotationWorkForce, directWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerDirectDotationWorkForce = () => {\n    const directDotationWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directDotationWorkForce.directWorkForce,\n      directDotationWorkForceObservation:\n        directDotationWorkForce.directDotationWorkForceObservation,\n      actions: {\n        directWorkForceFront1: directDotationWorkForce.directWorkForceFront1,\n        directWorkForceFront2: directDotationWorkForce.directWorkForceFront2,\n        directWorkForceFront3: directDotationWorkForce.directWorkForceFront3,\n        directWorkForceFront4: directDotationWorkForce.directWorkForceFront4,\n        directWorkForceFront5: directDotationWorkForce.directWorkForceFront5,\n        directWorkForceFront6: directDotationWorkForce.directWorkForceFront6,\n        directWorkForceFront7: directDotationWorkForce.directWorkForceFront7,\n      },\n    }\n    setDirectDotationWorkForce(initialState) // Clear the object\n    setDirectDotationWorkForceList([\n      ...directDotationWorkForceList,\n      directDotationWorkForceInitialState,\n    ])\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceList.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n\n    removeDirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  useEffect(() => {\n    let directDotationTotalsCounter = {\n      directWorkForceFront1: 0,\n      directWorkForceFront2: 0,\n      directWorkForceFront3: 0,\n      directWorkForceFront4: 0,\n      directWorkForceFront5: 0,\n      directWorkForceFront6: 0,\n      directWorkForceFront7: 0,\n    }\n\n    for (let data of directDotationWorkForceListContext) {\n      directDotationTotalsCounter = {\n        directWorkForceFront1:\n          Number(directDotationTotalsCounter.directWorkForceFront1) +\n          Number(data.actions.directWorkForceFront1 ?? 0),\n        directWorkForceFront2:\n          Number(directDotationTotalsCounter.directWorkForceFront2) +\n          Number(data.actions.directWorkForceFront2 ?? 0),\n        directWorkForceFront3:\n          Number(directDotationTotalsCounter.directWorkForceFront3) +\n          Number(data.actions.directWorkForceFront3 ?? 0),\n        directWorkForceFront4:\n          Number(directDotationTotalsCounter.directWorkForceFront4) +\n          Number(data.actions.directWorkForceFront4 ?? 0),\n        directWorkForceFront5:\n          Number(directDotationTotalsCounter.directWorkForceFront5) +\n          Number(data.actions.directWorkForceFront5 ?? 0),\n        directWorkForceFront6:\n          Number(directDotationTotalsCounter.directWorkForceFront6) +\n          Number(data.actions.directWorkForceFront6 ?? 0),\n        directWorkForceFront7:\n          Number(directDotationTotalsCounter.directWorkForceFront7) +\n          Number(data.actions.directWorkForceFront7 ?? 0),\n      }\n    }\n    setDirectDotationTotals(directDotationTotalsCounter)\n  }, [directDotationWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront1\"\n                value={directDotationWorkForce.directWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront2\"\n                value={directDotationWorkForce.directWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront3\"\n                value={directDotationWorkForce.directWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront4\"\n                value={directDotationWorkForce.directWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront5\"\n                value={directDotationWorkForce.directWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront6\"\n                value={directDotationWorkForce.directWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceFront7\"\n                value={directDotationWorkForce.directWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectDotationWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].directWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {directDotationWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront1 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront2 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront3 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront4 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront5 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront6 ?? 0}</CTableDataCell>\n                    <CTableDataCell>{item.actions.directWorkForceFront7 ?? 0}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletedirectDotationWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{directDotationTotals.directWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"directDotationWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\n\nconst DotationWorkForce = () => {\n  const initialState = {\n    workforceDotationPersonalFront1: undefined,\n    workforceDotationPersonalFront2: undefined,\n    workforceDotationPersonalFront3: undefined,\n    workforceDotationPersonalFront4: undefined,\n    workforceDotationPersonalFront5: undefined,\n    workforceDotationPersonalFront6: undefined,\n    workforceDotationPersonalFront7: undefined,\n    workforceDotationObservation: undefined,\n  }\n\n  const [workforceDotation, setWorkforceDotation] = useState(initialState)\n\n  const { storeDotationWorkfoce } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setWorkforceDotation({\n        ...workforceDotation,\n        workforceDotationPersonalFront1: e.target.value,\n      })({ ...workforceDotation, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    storeDotationWorkfoce(workforceDotation)\n  }, [workforceDotation])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">N° de personal</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront1\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront2\"\n                // placeholder=\"N° Contratados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront3\"\n                // placeholder=\"Acreditados\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront4\"\n                // placeholder=\"N° Descanso\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront5\"\n                // placeholder=\"N° Obra\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront6\"\n                // placeholder=\"HH (Turno)\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"workforceDotationPersonalFront7\"\n                // placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CFormTextarea\n        id=\"workforceDotationObservation\"\n        placeholder=\"Deja un comentario / observación\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default DotationWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Machinery = () => {\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    const machineryInitialState = {\n      id: uuidv4(),\n      machinery: machinery.machinery,\n      actions: {\n        machineryOfferedNumber: machinery.machineryOfferedNumber,\n        machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n        machineryWorkNumber: machinery.machineryWorkNumber,\n      },\n    }\n    setMachinery(initialState) // Clear the object\n    setMachineryList([...machineryList, machineryInitialState])\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryList.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  useEffect(() => {\n    storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={machinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryOfferedNumber\"\n                value={machinery.machineryOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryCertifiedNumber\"\n                value={machinery.machineryCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkNumber\"\n                value={machinery.machineryWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst MachineryWorkForce = () => {\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machineryWorkForceFront1: undefined,\n    machineryWorkForceFront2: undefined,\n    machineryWorkForceFront3: undefined,\n    machineryWorkForceFront4: undefined,\n    machineryWorkForceFront5: undefined,\n    machineryWorkForceFront6: undefined,\n    machineryWorkForceFront7: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machineryWorkForce') {\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForce({ ...machineryWorkForce, machineryWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachineryWorkForce({ ...machineryWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    const machineryWorkForceInitialState = {\n      id: uuidv4(),\n      machineryWorkForce: machineryWorkForce.machineryWorkForce,\n      machineryWorkForcebservation: machineryWorkForce.machineryWorkForceObservation,\n      actions: {\n        machineryWorkForceFront1: machineryWorkForce.machineryWorkForceFront1,\n        machineryWorkForceFront2: machineryWorkForce.machineryWorkForceFront2,\n        machineryWorkForceFront3: machineryWorkForce.machineryWorkForceFront3,\n        machineryWorkForceFront4: machineryWorkForce.machineryWorkForceFront4,\n        machineryWorkForceFront5: machineryWorkForce.machineryWorkForceFront5,\n        machineryWorkForceFront6: machineryWorkForce.machineryWorkForceFront6,\n        machineryWorkForceFront7: machineryWorkForce.machineryWorkForceFront7,\n      },\n    }\n    setMachineryWorkForce(initialState) // Clear the object\n    setMachineryWorkForceList([...machineryWorkForceList, machineryWorkForceInitialState])\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceList.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machineryWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront1\"\n                value={machineryWorkForce.machineryWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront2\"\n                value={machineryWorkForce.machineryWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront3\"\n                value={machineryWorkForce.machineryWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront4\"\n                value={machineryWorkForce.machineryWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront5\"\n                value={machineryWorkForce.machineryWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront6\"\n                value={machineryWorkForce.machineryWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"machineryWorkForceFront7\"\n                value={machineryWorkForce.machineryWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerMachinerynWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {machineryWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.machineryWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.machineryWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachineryWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n\n      <CFormTextarea\n        id=\"machineryWorkForceObservation\"\n        placeholder=\"Deja un comentario / observación\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentMachinery = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipment.equipment,\n      actions: {\n        equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n        equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n        equipmentWorkNumber: equipment.equipmentWorkNumber,\n      },\n    }\n    setEquipment(initialState) // Clear the object\n    setEquipmentList([...equipmentList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentList.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  useEffect(() => {\n    storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipment.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOfferedNumber\"\n                value={equipment.equipmentOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCertifiedNumber\"\n                value={equipment.equipmentCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkNumber\"\n                value={equipment.equipmentWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentWorkForce = () => {\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentWorkForceFront1: undefined,\n    equipmentWorkForceFront2: undefined,\n    equipmentWorkForceFront3: undefined,\n    equipmentWorkForceFront4: undefined,\n    equipmentWorkForceFront5: undefined,\n    equipmentWorkForceFront6: undefined,\n    equipmentWorkForceFront7: undefined,\n  }\n\n  const equipmentWorkForceTotalsInitialState = {\n    equipmentWorkForceFront1: 0,\n    equipmentWorkForceFront2: 0,\n    equipmentWorkForceFront3: 0,\n    equipmentWorkForceFront4: 0,\n    equipmentWorkForceFront5: 0,\n    equipmentWorkForceFront6: 0,\n    equipmentWorkForceFront7: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [equipmentWorkForceTotals, setEquipmentWorkForceTotals] = useState(\n    equipmentWorkForceTotalsInitialState,\n  )\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipmentWorkForce') {\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForce({ ...equipmentWorkForce, equipmentWorkForce: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentWorkForce({ ...equipmentWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    const equipmentWorkForceInitialState = {\n      id: uuidv4(),\n      equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n      actions: {\n        equipmentWorkForceFront1: equipmentWorkForce.equipmentWorkForceFront1,\n        equipmentWorkForceFront2: equipmentWorkForce.equipmentWorkForceFront2,\n        equipmentWorkForceFront3: equipmentWorkForce.equipmentWorkForceFront3,\n        equipmentWorkForceFront4: equipmentWorkForce.equipmentWorkForceFront4,\n        equipmentWorkForceFront5: equipmentWorkForce.equipmentWorkForceFront5,\n        equipmentWorkForceFront6: equipmentWorkForce.equipmentWorkForceFront6,\n        equipmentWorkForceFront7: equipmentWorkForce.equipmentWorkForceFront7,\n      },\n    }\n    setEquipmentWorkForce(initialState) // Clear the object\n    setEquipmentWorkForceList([...equipmentWorkForceList, equipmentWorkForceInitialState])\n  }\n\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceList.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  useEffect(() => {\n    let equipmentWorkForceTotalsCounter = {\n      equipmentWorkForceFront1: 0,\n      equipmentWorkForceFront2: 0,\n      equipmentWorkForceFront3: 0,\n      equipmentWorkForceFront4: 0,\n      equipmentWorkForceFront5: 0,\n      equipmentWorkForceFront6: 0,\n      equipmentWorkForceFront7: 0,\n    }\n\n    for (let data of equipmentWorkForceListContext) {\n      equipmentWorkForceTotalsCounter = {\n        equipmentWorkForceFront1:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront1) +\n          Number(data.actions.equipmentWorkForceFront1 ?? 0),\n        equipmentWorkForceFront2:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront2) +\n          Number(data.actions.equipmentWorkForceFront2 ?? 0),\n        equipmentWorkForceFront3:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront3) +\n          Number(data.actions.equipmentWorkForceFront3 ?? 0),\n        equipmentWorkForceFront4:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront4) +\n          Number(data.actions.equipmentWorkForceFront4 ?? 0),\n        equipmentWorkForceFront5:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront5) +\n          Number(data.actions.equipmentWorkForceFront5 ?? 0),\n        equipmentWorkForceFront6:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront6) +\n          Number(data.actions.equipmentWorkForceFront6 ?? 0),\n        equipmentWorkForceFront7:\n          Number(equipmentWorkForceTotalsCounter.equipmentWorkForceFront7) +\n          Number(data.actions.equipmentWorkForceFront7 ?? 0),\n      }\n    }\n    setEquipmentWorkForceTotals(equipmentWorkForceTotalsCounter)\n  }, [equipmentWorkForceListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipmentWorkForce\"\n        value={equipmentWorkForce.equipmentWorkForce || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront1\"\n                value={equipmentWorkForce.equipmentWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront2\"\n                value={equipmentWorkForce.equipmentWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront3\"\n                value={equipmentWorkForce.equipmentWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront4\"\n                value={equipmentWorkForce.equipmentWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront5\"\n                value={equipmentWorkForce.equipmentWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront6\"\n                value={equipmentWorkForce.equipmentWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWorkForceFront7\"\n                value={equipmentWorkForce.equipmentWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipmentnWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {equipmentWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.equipmentWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.equipmentWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipmentWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n              <CTableRow key={'total'}>\n                <CTableDataCell>Total</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront1}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront2}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront3}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront4}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront5}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront6}</CTableDataCell>\n                <CTableDataCell>{equipmentWorkForceTotals.equipmentWorkForceFront7}</CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst Vehicle = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    const vehicleInitialState = {\n      id: uuidv4(),\n      vehicle: vehicle.vehicle,\n      actions: {\n        vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n        vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n        vehicleWorkNumber: vehicle.vehicleWorkNumber,\n      },\n    }\n    setVehicle(initialState) // Clear the object\n    setVehicleList([...vehicleList, vehicleInitialState])\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleList.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  useEffect(() => {\n    storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehicle.vehicle || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOfferedNumber\"\n                value={vehicle.vehicleOfferedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCertifiedNumber\"\n                value={vehicle.vehicleCertifiedNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkNumber\"\n                value={vehicle.vehicleWorkNumber || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehicle()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehicle(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehicleWorkForce = () => {\n  const initialState = {\n    vehicleWorkForce: undefined,\n    vehicleWorkForceFront1: undefined,\n    vehicleWorkForceFront2: undefined,\n    vehicleWorkForceFront3: undefined,\n    vehicleWorkForceFront4: undefined,\n    vehicleWorkForceFront5: undefined,\n    vehicleWorkForceFront6: undefined,\n    vehicleWorkForceFront7: undefined,\n  }\n\n  const [vehicleWorkForce, setVehicleWorkForce] = useState(initialState)\n  const [vehicleWorkForceList, setVehicleWorkForceList] = useState([])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const {\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList: vehicleWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicleWorkForce') {\n      setVehicleWorkForce(initialState) // Clear the object\n      setVehicleWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicleWorkForce({ ...vehicleWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclenWorkForce = () => {\n    const vehicleWorkForceInitialState = {\n      id: uuidv4(),\n      vehicleWorkForce: vehicleWorkForce.vehicleWorkForce,\n      actions: {\n        vehicleWorkForceFront1: vehicleWorkForce.vehicleWorkForceFront1,\n        vehicleWorkForceFront2: vehicleWorkForce.vehicleWorkForceFront2,\n        vehicleWorkForceFront3: vehicleWorkForce.vehicleWorkForceFront3,\n        vehicleWorkForceFront4: vehicleWorkForce.vehicleWorkForceFront4,\n        vehicleWorkForceFront5: vehicleWorkForce.vehicleWorkForceFront5,\n        vehicleWorkForceFront6: vehicleWorkForce.vehicleWorkForceFront6,\n        vehicleWorkForceFront7: vehicleWorkForce.vehicleWorkForceFront7,\n      },\n    }\n    setVehicleWorkForce(initialState) // Clear the object\n    setVehicleWorkForceList([...vehicleWorkForceList, vehicleWorkForceInitialState])\n  }\n\n  const deleteVehicleWorkForce = (id) => {\n    const newData = vehicleWorkForceList.filter((item) => item.id !== id)\n    setVehicleWorkForceList(newData)\n\n    removeVehicleWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeVehicleWorkForce(vehicleWorkForceList)\n  }, [vehicleWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicleWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront1\"\n                value={vehicleWorkForce.vehicleWorkForceFront1 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront2\"\n                value={vehicleWorkForce.vehicleWorkForceFront2 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront3\"\n                value={vehicleWorkForce.vehicleWorkForceFront3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront4\"\n                value={vehicleWorkForce.vehicleWorkForceFront4 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront5\"\n                value={vehicleWorkForce.vehicleWorkForceFront5 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront6\"\n                value={vehicleWorkForce.vehicleWorkForceFront6 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWorkForceFront7\"\n                value={vehicleWorkForce.vehicleWorkForceFront7 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclenWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehicleWorkForceListContext.length > 0 &&\n        vehicleWorkForceListContext[0].vehicleWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 1</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 2</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 3</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 4</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 5</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 6</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Frente de trabajo 7</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {vehicleWorkForceListContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.vehicleWorkForce}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront1}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront2}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront3}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront4}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront5}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront6}</CTableDataCell>\n                    <CTableDataCell>{item.actions.vehicleWorkForceFront7}</CTableDataCell>\n                    <CTableDataCell>\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteVehicleWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default VehicleWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n// FALTA VALIDAR\nconst Activities = () => {\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerActivity = () => {\n    const activityInitialState = {\n      id: uuidv4(),\n      activityFrontWork: activity.activityFrontWork,\n      primaveraId: activity.primaveraId,\n      activityName: activity.activityName,\n      activityDiscipline: activity.activityDiscipline,\n      activityTotalAmount: activity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: activity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n      activityUnit: activity.activityUnit,\n      activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n      activityHoursSpendShift: activity.activityHoursSpendShift,\n      activityHoursAccumulated: activity.activityHoursAccumulated,\n    }\n    setActivity(initialState) // Clear the object\n    setActivityList([...activityList, activityInitialState])\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityList.filter((item) => item.id !== id)\n    setActivity(newData)\n    removeActivity(id)\n  }\n\n  useEffect(() => {\n    storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"activityFrontWork\"\n        value={activity.activityFrontWork}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.workFront.map((workFrontCached) => {\n          return (\n            <option key={workFrontCached.id} value={workFrontCached.id}>\n              {workFrontCached.name}\n            </option>\n          )\n        })}{' '}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"primaveraId\"\n                value={activity.primaveraId || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityName\"\n                value={activity.activityName || ''}\n                text=\"\"\n                disabled\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                id=\"activityDiscipline\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option>Seleccione</option>\n                <option value=\"Obras_civiles\">Obras Civiles</option>\n                <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n              </CFormSelect>\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityTotalAmount\"\n                value={activity.activityTotalAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityPreviousAcumulatedAmount\"\n                value={activity.activityPreviousAcumulatedAmount || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityActualShiftQuantity\"\n                value={activity.activityActualShiftQuantity || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityAccumulatedAcvancePercent\"\n                value={activity.activityAccumulatedAcvancePercent || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityUnit\"\n                value={activity.activityUnit || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendPrevius\"\n                value={activity.activityHoursSpendPrevius || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursSpendShift\"\n                value={activity.activityHoursSpendShift || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"activityHoursAccumulated\"\n                value={activity.activityHoursAccumulated || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerActivity()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.activityFrontWork}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteActivity(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst Comments = () => {\n  const initialState = {\n    comments: '',\n  }\n\n  const MAX_IMAGES = 10\n\n  const [comments, setComments] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComments({ ...comments, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeComment(comments)\n  }, [comments])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comments\"\n        label=\"Comentarios y alertas en genenral\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nconst Graphs = () => {\n  return <div className=\"work-force-report\"></div>\n}\n\nexport default Graphs\n","import { React, useState, useEffect } from 'react'\nimport { CFormTextarea } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nconst Incidents = () => {\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n\n  const onChangeData = (e) => {\n    switch (e.target.id) {\n      case 'incident':\n        setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const { storeIncident } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    storeIncident(incident)\n  }, [incident])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"incident\"\n        label=\"Incidentes lesiones y eventos\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n\n      <CFormTextarea\n        id=\"nonConformity\"\n        label=\"No conformidades o interferencias\"\n        rows={3}\n        text=\"\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Incidents\n","import React, { useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst DirectWorkForce = () => {\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    const directWorkForceInitialState = {\n      id: uuidv4(),\n      directWorkForce: directWorkForce.directWorkForce,\n      actions: {\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      },\n    }\n    setDirectWorkForce(initialStatee) // Clear the object\n    setDirectWorkForceList([...directWorkForceList, directWorkForceInitialState])\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceList.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"directWorkForce\"\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.directPersonal.map((directPersonalCached) => {\n          return (\n            <option key={directPersonalCached.id} value={directPersonalCached.id}>\n              {directPersonalCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceOfferedNumber\"\n                placeholder=\"N° Ofertado\"\n                value={directWorkForce.directWorkForceOfferedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directWorkForce.directWorkForceContractedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceCertifiedNumber\"\n                placeholder=\"N° Acreditados\"\n                value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directWorkForce.directWorkForceBreakNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directWorkForce.directWorkForceWorkNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directWorkForceHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directWorkForce.directWorkForceHHNumber || ''}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.directWorkForce}</CTableDataCell>\n                  <CTableDataCell>{item.actions.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.certified}</CTableDataCell>\n                  <CTableDataCell>{item.actions.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.actions.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteDirectWorkForce(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerDirectWorkForce()\n        }}\n      >\n        Registrar\n      </CButton>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst AsarcoMachinery = () => {\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    const asarcoMachineryInitialState = {\n      id: uuidv4(),\n      machinery: asarcoMachinery.machinery,\n      actions: {\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n      },\n    }\n    setAsarcoMachinery(initialState) // Clear the object\n    setAsarcoMachineryList([...asarcoMachineryList, asarcoMachineryInitialState])\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryList.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.actions.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.actions.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.actions.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.actions.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.actions.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.actions.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.actions.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.actions.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"machinery\"\n        value={asarcoMachinery.machinery ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.machinery.map((machineryCached) => {\n          return (\n            <option key={machineryCached.id} value={machineryCached.id}>\n              {machineryCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Reservas (Hrs) (Sin operador, factores externos)\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryEffectiveTime\"\n                value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleMaintenance\"\n                value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryUnscheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryReserves\"\n                value={asarcoMachinery.asarcoMachineryReserves || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Pérdida Operacional (Hrs) (depende de otro equipo)\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">\n              Demoras Programadas (Hrs) (Colación y cambio de turno)\n            </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryHorometer\"\n                value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryOpperationalLoss\"\n                value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"asarcoMachineryScheduleDelay\"\n                value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerAsarcoMachinery()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.machinery}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>\n                    {item.actions.asarcoMachineryUnscheduleMaintenance}\n                  </CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.actions.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteAsarcoMachinery(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst EquipmentPlate = () => {\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    const equipmentInitialState = {\n      id: uuidv4(),\n      equipment: equipmentPlate.equipment,\n      actions: {\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n      },\n    }\n    setEquipmentPlate(initialState) // Clear the object\n    setEquipmenPlatetList([...equipmentPlateList, equipmentInitialState])\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateList.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  useEffect(() => {\n    storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"equipment\"\n        value={equipmentPlate.equipment ?? 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option>Seleccione</option>\n        {basicQuery.equipment.map((equipmentCached) => {\n          return (\n            <option key={equipmentCached.id} value={equipmentCached.id}>\n              {equipmentCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentEffectiveTime\"\n                value={equipmentPlate.equipmentEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentPreventiveMaintenance\"\n                value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentOutOfService\"\n                value={equipmentPlate.equipmentOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentWaiting\"\n                value={equipmentPlate.equipmentWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentNoOperator\"\n                value={equipmentPlate.equipmentNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentInitialHorometer\"\n                value={equipmentPlate.equipmentInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentFinalHorometer\"\n                value={equipmentPlate.equipmentFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerEquipment()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.equipment}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deleteEquipment(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst VehiclePlate = () => {\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    const vehiclePlateInitialState = {\n      id: uuidv4(),\n      vehicle: vehiclePlate.vehicle,\n      actions: {\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n      },\n    }\n    setVehiclePlate(initialState) // Clear the object\n    setVehiclePlateList([...vehiclePlateList, vehiclePlateInitialState])\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateList.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  useEffect(() => {\n    storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"vehicle\"\n        value={vehiclePlate.vehicle || 0}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.vehicles.map((vehicleCached) => {\n          return (\n            <option key={vehicleCached.id} value={vehicleCached.id}>\n              {vehicleCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleEffectiveTime\"\n                value={vehiclePlate.vehicleEffectiveTime || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleCorrectiveMaintenance\"\n                value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehiclePreventiveMaintenance\"\n                value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleOutOfService\"\n                value={vehiclePlate.vehicleOutOfService || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleWaiting\"\n                value={vehiclePlate.vehicleWaiting || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleNoOperator\"\n                value={vehiclePlate.vehicleNoOperator || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleInitialHorometer\"\n                value={vehiclePlate.vehicleInitialHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"vehicleFinalHorometer\"\n                value={vehiclePlate.vehicleFinalHorometer || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerVehiclePlate()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.vehicle}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletevehiclePlate(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst IndustrialWaterControl = () => {\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registeraljibe = () => {\n    const aljibeInitialState = {\n      id: uuidv4(),\n      aljibe: aljibe.aljibe,\n      actions: {\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n      },\n    }\n    setAlgibe(initialState) // Clear the object\n    setAlgibeList([...aljibeList, aljibeInitialState])\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeList.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  useEffect(() => {\n    storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeCachimbaName: 0,\n      aljibeQuantityTurns: 0,\n      aljibeM3: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeCachimbaName:\n          Number(aljibeTotalsCounter.aljibeCachimbaName) +\n          Number(data.actions.aljibeCachimbaName ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) +\n          Number(data.actions.aljibeQuantityTurns ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.actions.aljibeM3 ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormSelect\n        aria-label=\"Default select example\"\n        id=\"aljibe\"\n        value={aljibe.aljibe || ''}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n      >\n        <option value={0}>Seleccione</option>\n        {basicQuery.aljibe.map((aljibeCached) => {\n          return (\n            <option key={aljibeCached.id} value={aljibeCached.id}>\n              {aljibeCached.name}\n            </option>\n          )\n        })}\n      </CFormSelect>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeCachimbaName\"\n                value={aljibe.aljibeCachimbaName || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeQuantityTurns\"\n                value={aljibe.aljibeQuantityTurns || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"aljibeM3\"\n                value={aljibe.aljibeM3 || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registeraljibe()\n        }}\n      >\n        Registrar\n      </CButton>\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{item.aljibe}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      className=\"btn-project-action\"\n                      onClick={() => {\n                        deletealjibe(item.id)\n                      }}\n                    >\n                      eliminar\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCachimbaName ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\n\nconst DailyReportCollapse = () => {\n  const { registerData } = useRegisterDailyReport()\n\n  return (\n    <div className=\"dailyReport\">\n      <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader>1) Empresa</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <CompanyReport />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={2}>\n          <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={3}>\n          <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalIndirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={4}>\n          <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={5}>\n          <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <TotalDirectWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        {/* <CAccordionItem itemKey={6}>\n          <CAccordionHeader>6) Dotación por frente de trabajo personal indirecto</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem> */}\n        <CAccordionItem itemKey={7}>\n          <CAccordionHeader>7) Dotación por frente de trabajo personal directo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DirectDotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={8}>\n          <CAccordionHeader>8) Dotación por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <DotationWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={9}>\n          <CAccordionHeader>9) Maquinarias contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Machinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={10}>\n          <CAccordionHeader>10) Maquinarias por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <MachineryWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={11}>\n          <CAccordionHeader>11) ASARCO Maquinarias</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <AsarcoMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={12}>\n          <CAccordionHeader>12) Equipos contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentMachinery />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={13}>\n          <CAccordionHeader>13) Equipos con patentes contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentPlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={14}>\n          <CAccordionHeader>14) Equipos por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <EquipmentWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={15}>\n          <CAccordionHeader>15) Vehículos menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Vehicle />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={16}>\n          <CAccordionHeader>16) Vehículos con patente menores contratistas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehiclePlate />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={17}>\n          <CAccordionHeader>17) Vehiculos menores por frente de trabajo</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <VehicleWorkForce />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={18}>\n          <CAccordionHeader>18) Descripción de actividades desarrolladas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Activities />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={19}>\n          <CAccordionHeader>19) Control de aguas industriales utilizadas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <IndustrialWaterControl />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={20}>\n          <CAccordionHeader>20) Comentarios y alertas en general</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Comments />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={21}>\n          <CAccordionHeader>21) Graficos del día</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Graphs />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={22}>\n          <CAccordionHeader>22) Incidentes, lesiones o eventos</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <Incidents />\n          </CAccordionBody>\n        </CAccordionItem>\n        <CAccordionItem itemKey={23}>\n          <CAccordionHeader>23) Firmas</CAccordionHeader>\n          <CAccordionBody className=\"dailyReport-accordion\">\n            <></>\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n      <CButton\n        className=\"btn-project-action\"\n        onClick={() => {\n          registerData()\n        }}\n      >\n        Registrar informe diario\n      </CButton>\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import { useQueryClient } from '@tanstack/react-query'\n\nconst useGetCachedQueryData = () => {\n  const queryClient = useQueryClient()\n\n  // First create a helper function\n  const getData = (key) => {\n    // Make sure that the key is wrapped in an array for this to work\n    const data = queryClient.getQueryData([key])\n    return data\n  }\n\n  return { getData }\n}\n\nexport default useGetCachedQueryData\n"],"names":["useRegisterDailyReportCompany","storeCompanyData","storeIndirectWorkForceData","storeDirectWorkForce","removeDirectWorkForce","directWorkForceList","indirectWorkForceList","removeIndirectWorkForce","storeTotalIndirectWorkForce","totalIndirectWorkForce","storeTotalDirectWorkForce","totalDirectWorkForce","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceList","storeDotationWorkfoce","machineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceList","storeVehicleWorkForce","removeVehicleWorkForce","vehicleWorkForceList","storeComment","storeIncident","storeMachinery","removeMachinery","machineryList","storeEquipment","removeEquipment","equipmentList","storeVehicle","removeVehicle","vehicleList","storeActivity","removeActivity","activityList","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateList","storealjibe","removealjibe","aljibeList","useContext","DailyReportContext","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","company","incident","workforceDotation","comments","mutation","useMutation","mutationFn","newTodo","axios","post","registerData","async","mutate","projectId","id","contractId","CompanyReport","onChangeData","e","_jsxs","className","children","_jsx","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","CFormSelect","value","validate","s","match","IndirectWorkForce","initialState","indirectWorkForce","undefined","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","getData","useGetCachedQueryData","basicQuery","setIndirectWorkForce","useState","setIndirectWorkForceList","indirectWorkForceListContext","target","useEffect","indirectPersonal","map","indirectPersonalCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","CButton","onClick","registerIndirectWorkForce","indirectWorkForceInitialState","uuidv4","actions","offeredNumber","contractedNumber","certified","breakNumber","workNumber","hh","length","item","index","newData","filter","deleteIndirectWorkForce","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","setTotalIndirectWorkForce","colSpan","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","setTotalDirectWorkForce","DirectDotationWorkForce","directWorkForce","directDotationWorkForceObservation","directWorkForceFront1","directWorkForceFront2","directWorkForceFront3","directWorkForceFront4","directWorkForceFront5","directWorkForceFront6","directWorkForceFront7","directDotationWorkForce","setDirectDotationWorkForce","setDirectDotationWorkForceList","directDotationTotals","setDirectDotationTotals","directDotationWorkForceListContext","directDotationTotalsCounter","data","_data$actions$directW","_data$actions$directW2","_data$actions$directW3","_data$actions$directW4","_data$actions$directW5","_data$actions$directW6","_data$actions$directW7","Number","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$actions$directW","_item$actions$directW2","_item$actions$directW3","_item$actions$directW4","_item$actions$directW5","_item$actions$directW6","_item$actions$directW7","deletedirectDotationWorkForce","CFormTextarea","DotationWorkForce","workforceDotationPersonalFront1","workforceDotationPersonalFront2","workforceDotationPersonalFront3","workforceDotationPersonalFront4","workforceDotationPersonalFront5","workforceDotationPersonalFront6","workforceDotationPersonalFront7","workforceDotationObservation","setWorkforceDotation","disabled","Machinery","_machinery$machinery","machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","setMachineryList","machineryTotals","setMachineryTotals","machineryListContext","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","machineryCached","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","deleteMachinery","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machineryWorkForceFront1","machineryWorkForceFront2","machineryWorkForceFront3","machineryWorkForceFront4","machineryWorkForceFront5","machineryWorkForceFront6","machineryWorkForceFront7","setMachineryWorkForce","setMachineryWorkForceList","machineryWorkForceListContext","registerMachinerynWorkForce","machineryWorkForceInitialState","machineryWorkForcebservation","deleteMachineryWorkForce","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","setEquipmentList","equipmentTotals","setEquipmentTotals","equipmentListContext","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","deleteEquipment","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentWorkForceFront1","equipmentWorkForceFront2","equipmentWorkForceFront3","equipmentWorkForceFront4","equipmentWorkForceFront5","equipmentWorkForceFront6","equipmentWorkForceFront7","setEquipmentWorkForce","setEquipmentWorkForceList","equipmentWorkForceTotals","setEquipmentWorkForceTotals","equipmentWorkForceListContext","equipmentWorkForceTotalsCounter","_data$actions$equipme4","_data$actions$equipme5","_data$actions$equipme6","_data$actions$equipme7","registerEquipmentnWorkForce","equipmentWorkForceInitialState","deleteEquipmentWorkForce","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicle","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","setVehicleList","vehicleTotals","setVehicleTotals","vehicleListContext","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","vehicles","vehicleCached","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","deletevehicle","VehicleWorkForce","vehicleWorkForce","vehicleWorkForceFront1","vehicleWorkForceFront2","vehicleWorkForceFront3","vehicleWorkForceFront4","vehicleWorkForceFront5","vehicleWorkForceFront6","vehicleWorkForceFront7","setVehicleWorkForce","setVehicleWorkForceList","vehicleWorkForceListContext","registerVehiclenWorkForce","vehicleWorkForceInitialState","deleteVehicleWorkForce","Activities","activityFrontWork","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","activity","setActivity","setActivityList","activityListContext","workFront","workFrontCached","registerActivity","activityInitialState","deleteActivity","Comments","setComments","rows","Array","from","_","i","Graphs","Incidents","setIncident","nonConformity","DirectWorkForce","initialStatee","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","setDirectWorkForceList","directWorkForceListContext","deleteDirectWorkForce","registerDirectWorkForce","directWorkForceInitialState","AsarcoMachinery","_asarcoMachinery$mach","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","asarcoMachinery","setAsarcoMachinery","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","asarcoMachineryListContext","asarcoMachineryTotalsCounter","_data$actions$asarcoM","_data$actions$asarcoM2","_data$actions$asarcoM3","_data$actions$asarcoM4","_data$actions$asarcoM5","_data$actions$asarcoM6","_data$actions$asarcoM7","_data$actions$asarcoM8","registerAsarcoMachinery","asarcoMachineryInitialState","deleteAsarcoMachinery","EquipmentPlate","_equipmentPlate$equip","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","setEquipmenPlatetList","equipmentPlateListContext","VehiclePlate","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","setVehiclePlateList","vehiclePlateListContext","registerVehiclePlate","vehiclePlateInitialState","_item$actions$vehicle4","_item$actions$vehicle5","_item$actions$vehicle6","_item$actions$vehicle7","_item$actions$vehicle8","deletevehiclePlate","IndustrialWaterControl","_aljibeTotals$aljibeC","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","setAlgibe","setAlgibeList","aljibeTotals","setAlgibeTotals","aljibeListContext","aljibeTotalsCounter","_data$actions$aljibeC","_data$actions$aljibeQ","_data$actions$aljibeM","aljibeCached","registeraljibe","aljibeInitialState","_item$actions$aljibeC","_item$actions$aljibeQ","_item$actions$aljibeM","deletealjibe","DailyReportCollapse","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","_Fragment","queryClient","useQueryClient","key","getQueryData"],"sourceRoot":""}