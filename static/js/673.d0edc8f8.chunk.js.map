{"version":3,"file":"static/js/673.d0edc8f8.chunk.js","mappings":"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","sources":["components/loading.jsx","hooks/useRegisterUser.js","components/ModalAddUser.jsx","hooks/useGetUserList.js","components/UserList.jsx","pages/User.jsx","utils/regex.js"],"sourcesContent":["import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useState } from 'react'\nimport { useQueryClient } from '@tanstack/react-query'\nimport axios from 'axios'\nimport { useMutation } from '@tanstack/react-query'\n\nconst useRegisterUser = () => {\n  const [error, setError] = useState()\n  const [isError, setIsError] = useState(false)\n  const queryClient = useQueryClient()\n\n  const mutation = useMutation({\n    mutationFn: async (newTodo) => {\n      return await axios\n        .post('/prueba', newTodo)\n        .then((res) => {\n          if (res.ok) {\n            setIsError(false)\n            return res.ok\n          } else {\n            setError('Error al registrar usuario')\n            setIsError(true)\n            return false\n          }\n        })\n        .catch((err) => {\n          setError('Error al registrar usuario')\n          setIsError(true)\n          return false\n        })\n    },\n    onSuccess: (suc) => {\n      queryClient.invalidateQueries({ queryKey: ['users'] })\n    },\n    onError: (err) => {\n      setError('Error al registrar usuario')\n      setIsError(true)\n      return false\n    },\n  })\n\n  const register = (data) => {\n    setIsError(false)\n    const response = mutation.mutate(data)\n    return response\n  }\n\n  return { register, error, isError }\n}\n\nexport default useRegisterUser\n","/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormSelect,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CFormCheck,\n} from '@coreui/react'\nimport useRegisterUser from 'src/hooks/useRegisterUser'\nimport { regex } from 'src/utils/regex'\nconst ModalAddUser = (props) => {\n  const initialState = {\n    userName: undefined,\n    userMail: undefined,\n    userProject: undefined,\n    userContract: undefined,\n    userPassword: undefined,\n    isActive: undefined,\n  }\n\n  const [user, setUser] = useState(props.selectedUser ? props.selectedUser : initialState)\n  const [userNameError, setUserNameError] = useState(false)\n  const [userMailError, setUserMailError] = useState(false)\n  const [userProjectError, setUserProjectError] = useState(false)\n  const [userContractError, setUserContractError] = useState(false)\n  const [userPasswordError, setUserPasswordError] = useState(false)\n  const [errorForm, setErrorForm] = useState(0)\n\n  const { register, error, isError } = useRegisterUser()\n\n  const onChangeData = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value })\n  }\n\n  const handleClick = () => {\n    props.sendDataToParent(false)\n  }\n\n  const handleRegisterUser = () => {\n    if (!user.name || user.name === '') {\n      setErrorForm(1)\n      setUserNameError(true)\n    } else {\n      setErrorForm(3)\n      setUserNameError(false)\n    }\n    if (!user.userMail || user.userMail === '') {\n      setErrorForm(1)\n      setUserMailError(true)\n    } else {\n      setErrorForm(3)\n      setUserMailError(false)\n    }\n    if (!user.userPassword || user.userPassword === '') {\n      setErrorForm(1)\n      setUserPasswordError(true)\n    } else {\n      setErrorForm(3)\n      setUserPasswordError(false)\n    }\n    if (!user.userContract || user.userContract === '-1') {\n      setErrorForm(1)\n      setUserContractError(true)\n    } else {\n      setErrorForm(3)\n      setUserContractError(false)\n    }\n    if (!user.userProject || user.userProject === '-1') {\n      setErrorForm(1)\n      setUserProjectError(true)\n    } else {\n      setErrorForm(3)\n      setUserProjectError(false)\n    }\n  }\n\n  useEffect(() => {\n    if (user.isActive === undefined) {\n      user.isActive = false\n    }\n    if (errorForm === 3) register(user)\n  }, [errorForm])\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => handleClick()}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Añadir Usuario</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CToast\n          autohide={true}\n          visible={isError}\n          color=\"danger\"\n          className=\"text-white align-items-center\" // VER EVENTO DE ESCONDERSE PARA RESETEAR EL STATE DE ERROR\n        >\n          <div className=\"d-flex\">\n            <CToastBody>{error}</CToastBody>\n          </div>\n        </CToast>\n        <CToast\n          autohide={true}\n          visible={errorForm === 1}\n          color=\"danger\"\n          onClose={() => {\n            setErrorForm(2)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe completar todos los datos para crear el usuario</CToastBody>\n          </div>\n        </CToast>\n        <CForm>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                invalid={userNameError}\n                id=\"userName\"\n                label=\"Nombre\"\n                placeholder=\"Nombre\"\n                value={user.userName || ''}\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value !== '') {\n                    setUserNameError(false)\n                  } else {\n                    setUserNameError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                invalid={userMailError}\n                id=\"userMail\"\n                value={user.userMail || ''}\n                label=\"Correo\"\n                placeholder=\"Correo\"\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value && e.target.value.match(regex)) {\n                    setUserMailError(false)\n                  } else {\n                    setUserMailError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Proyecto\"\n                id=\"userProject\"\n                invalid={userProjectError}\n                value={user.userProject}\n                onBlur={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserProjectError(false)\n                  } else {\n                    setUserProjectError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserProjectError(false)\n                  } else {\n                    setUserProjectError(true)\n                  }\n                  onChangeData(e)\n                }}\n              >\n                <option value={'-1'}>Seleccione</option>\n                <option value={'Proyecto 1'}>Proyecto 1</option>\n                <option value={'Proyecto 2'}>Proyecto 2</option>\n              </CFormSelect>\n            </CCol>\n            <CCol sm={6}>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Contrato\"\n                invalid={userContractError}\n                value={user.userContract}\n                id=\"userContract\"\n                onBlur={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserContractError(false)\n                  } else {\n                    setUserContractError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserContractError(false)\n                  } else {\n                    setUserContractError(true)\n                  }\n                  onChangeData(e)\n                }}\n              >\n                <option value={'-1'}>Seleccione</option>\n                <option value={'Contrato 1'}>Contrato 1</option>\n                <option value={'Contrato 2'}>Contrato 2</option>\n              </CFormSelect>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"password\"\n                id=\"userPassword\"\n                invalid={userPasswordError}\n                value={user.userPassword || ''}\n                label=\"Contraseña\"\n                placeholder=\"Contraseña\"\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value !== '') {\n                    setUserPasswordError(false)\n                  } else {\n                    setUserPasswordError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormCheck\n                id=\"isActive\"\n                label=\"Activo\"\n                defaultChecked={user.isActive}\n                onChange={(e) => {\n                  setUser({ ...user, [e.target.id]: !user.isActive })\n                }}\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => handleClick()}>\n          Cerrar\n        </CButton>\n        <CButton className=\"btn-add\" onClick={() => handleRegisterUser()}>\n          Añadir usuario\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalAddUser\n","import { useFetchUserList } from './useFetch'\n\nconst useGetUserList = () => {\n  const { data, isLoading, error } = useFetchUserList()\n  return { data, isLoading, error }\n}\n\nexport default useGetUserList\n","import React, { useEffect, useState } from 'react'\nimport {\n  CTable,\n  CTableHead,\n  CButton,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useGetUserList from 'src/hooks/useGetUserList'\nimport Loading from './loading'\nimport ModalAddUser from './ModalAddUser'\n\nconst ProjectList = () => {\n  const { data, isLoading, error } = useGetUserList()\n  const [visibleAddUser, setVisibleAddUser] = useState(false)\n  const [selectedUser, setSelectedUser] = useState()\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user)\n    setVisibleAddUser(!visibleAddUser)\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      {visibleAddUser && (\n        <ModalAddUser\n          visible={true}\n          selectedUser={selectedUser}\n          sendDataToParent={(data) => {\n            setVisibleAddUser(data)\n          }}\n        />\n      )}\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Correo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Proyecto</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Contrato</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acción</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data &&\n            data.users.map((user) => {\n              return (\n                <CTableRow key={user.id}>\n                  <CTableDataCell>{user.id}</CTableDataCell>\n                  <CTableDataCell>{user.userName}</CTableDataCell>\n                  <CTableDataCell>{user.userMail}</CTableDataCell>\n                  <CTableDataCell>{user.userProject}</CTableDataCell>\n                  <CTableDataCell>{user.userContract}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton className=\"btn-edit\" onClick={(e) => handleEditUser(user)}>\n                      Editar\n                    </CButton>\n                    <CButton className=\"btn-del\">Eliminar</CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n        </CTableBody>\n      </CTable>\n    </>\n  )\n}\n\nexport default ProjectList\n","import React, { useState } from 'react'\nimport { CCard, CButton, CCardBody, CCardText } from '@coreui/react'\nimport ModalAddUser from 'src/components/ModalAddUser'\nimport UserList from 'src/components/UserList'\n\nconst User = () => {\n  const [visibleAddUser, setVisibleAddUser] = useState(false)\n\n  return (\n    <div className=\"user\">\n      {visibleAddUser && (\n        <ModalAddUser\n          visible={true}\n          sendDataToParent={(data) => {\n            setVisibleAddUser(data)\n          }}\n        />\n      )}\n\n      <CCard>\n        <CCardBody>\n          <CButton onClick={() => setVisibleAddUser(!visibleAddUser)}>Añadir usuario</CButton>\n          <CCardText>\n            <UserList />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default User\n","export const regex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n"],"names":["Loading","_jsx","Lottie","animationData","loadingjson","loop","width","className","useRegisterUser","error","setError","useState","isError","setIsError","queryClient","useQueryClient","mutation","useMutation","mutationFn","async","axios","post","newTodo","then","res","ok","catch","err","onSuccess","suc","invalidateQueries","queryKey","onError","register","data","mutate","props","initialState","userName","undefined","userMail","userProject","userContract","userPassword","isActive","user","setUser","selectedUser","userNameError","setUserNameError","userMailError","setUserMailError","userProjectError","setUserProjectError","userContractError","setUserContractError","userPasswordError","setUserPasswordError","errorForm","setErrorForm","onChangeData","e","target","id","value","handleClick","sendDataToParent","useEffect","_jsxs","CModal","scrollable","visible","onClose","size","children","CModalHeader","CModalTitle","CModalBody","CToast","autohide","color","CToastBody","CForm","CRow","CCol","sm","CFormInput","type","invalid","label","placeholder","text","onBlur","onChange","match","regex","CFormSelect","CFormCheck","defaultChecked","CModalFooter","CButton","onClick","name","useGetUserList","isLoading","useFetchUserList","ProjectList","visibleAddUser","setVisibleAddUser","setSelectedUser","_Fragment","ModalAddUser","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","users","map","CTableDataCell","handleEditUser","User","CCard","CCardBody","CCardText","UserList"],"sourceRoot":""}