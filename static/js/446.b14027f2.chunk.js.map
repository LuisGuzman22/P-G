{"version":3,"file":"static/js/446.b14027f2.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.jsx","components/AppContent.jsx","components/AppFooter.jsx","components/header/AppHeaderDropdown.jsx","components/AppHeader.jsx","components/AppSidebarNav.jsx","_nav.js","components/AppSidebar.jsx","layout/DefaultLayout.jsx"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./pages/Dashboard'))\nconst DailyReport = React.lazy(() => import('./pages/DailyReportPage'))\nconst DailyReportView = React.lazy(() => import('./pages/DailyReportViewPage'))\nconst DailyReportEdit = React.lazy(() => import('./pages/DailyReportEditPage'))\nconst Detail = React.lazy(() => import('./pages/DetailPage'))\nconst Gantt = React.lazy(() => import('./pages/GanttPage'))\nconst Project = React.lazy(() => import('./pages/ProjectPage'))\nconst InformativePanel = React.lazy(() => import('./pages/InformativePanelPage'))\nconst Trisemanal = React.lazy(() => import('./pages/TrisemanalPage'))\n// const ProjectSelector = React.lazy(() => import('./pages/ProjectSelector'))\n// const ContractSelector = React.lazy(() => import('./pages/ContractSelector'))\n// const Login = React.lazy(() => import('./pages/Login'))\nconst ProjectAdministration = React.lazy(() => import('./pages/ProjectAdministration'))\nconst ContractAdministration = React.lazy(() => import('./pages/ContractAdministration'))\nconst User = React.lazy(() => import('./pages/User'))\nconst Pdf = React.lazy(() => import('./components/Pdf'))\n\nconst routes = [\n  { path: '/', name: 'Login' },\n  { path: '/login', name: 'Login' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/trisemanal', name: 'Trisemanal', element: Trisemanal },\n  { path: '/panel-informativo', name: 'Panel Informativo', element: InformativePanel },\n  { path: '/proyecto', name: 'Proyecto', element: Project },\n  { path: '/informe-diario', name: 'Informe Diario', element: DailyReport },\n  { path: '/informe-diario/view', name: 'Informe Diario', element: DailyReportView },\n  { path: '/informe-diario/edit', name: 'Informe Diario', element: DailyReportEdit },\n  { path: '/informe-diario/pdf', name: 'Informe Diario', element: Pdf },\n\n  { path: '/trisemanal', name: 'Actividades Trisemanal', element: Trisemanal },\n  { path: '/carta-gantt', name: 'Carta Gantt', element: Gantt },\n  { path: '/avance', name: 'Detalles de avance', element: Detail },\n  { path: '/administrar_proyectos', name: 'Administrar Proyectos', element: ProjectAdministration },\n\n  {\n    path: '/administrar_contratos',\n    name: 'Administrar Contratos',\n    element: ContractAdministration,\n  },\n  { path: '/administrar_usuarios', name: 'Administrar usuarios', element: User },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"my-0\">\n      <CBreadcrumbItem>Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n      <CBreadcrumbItem active={true}>{projectLS?.name}</CBreadcrumbItem>\n      <CBreadcrumbItem active={true}>{contractLS?.name}</CBreadcrumbItem>\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer className=\"px-4\" lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"login\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter className=\"px-4\">\n      <div>\n        <span className=\"ms-1\">\n          Copyright © 2023 P&G PROJECT CONTROL ESTRATEGICO. All rights reserved. v\n          {process.env.REACT_APP_VERSION}\n        </span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nconst AppHeaderDropdown = () => {\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0 pe-0\" caret={false}></CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-body-secondary fw-semibold mb-2\">Account</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-body-secondary fw-semibold my-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React, { useEffect, useRef } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CHeader,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilContrast,\n  cilEnvelopeOpen,\n  cilList,\n  cilMenu,\n  cilMoon,\n  cilSun,\n} from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('color')\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderToggler\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n          style={{ marginInlineStart: '-14px' }}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n\n        <CHeaderNav>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n            <CDropdownToggle caret={false}>\n              {colorMode === 'dark' ? (\n                <CIcon icon={cilMoon} size=\"lg\" />\n              ) : colorMode === 'auto' ? (\n                <CIcon icon={cilContrast} size=\"lg\" />\n              ) : (\n                <CIcon icon={cilSun} size=\"lg\" />\n              )}\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <CDropdownItem\n                active={colorMode === 'light'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('light')}\n              >\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'dark'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('dark')}\n              >\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\n              </CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n        </CHeaderNav>\n      </CContainer>\n      <CContainer className=\"px-4\" fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\nimport SimpleBar from 'simplebar-react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const navLink = (name, icon, badge, indent = false) => {\n    return (\n      <>\n        {icon\n          ? icon\n          : indent && (\n              <span className=\"nav-icon\">\n                <span className=\"nav-icon-bullet\"></span>\n              </span>\n            )}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index, indent = false) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component as=\"div\" key={index}>\n        {rest.to || rest.href ? (\n          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>\n            {navLink(name, icon, badge, indent)}\n          </CNavLink>\n        ) : (\n          navLink(name, icon, badge, indent)\n        )}\n      </Component>\n    )\n  }\n\n  const navGroup = (item, index) => {\n    const { component, name, icon, items, to, ...rest } = item\n    const Component = component\n    return (\n      <Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index, true),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <CSidebarNav as={SimpleBar}>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </CSidebarNav>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBarChart,\n  cilPencil,\n  cilClipboard,\n  cilHome,\n  cilInfo,\n  cilBriefcase,\n  cilStorage,\n  cilAlignCenter,\n  cilGraph,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle, CNavGroup } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: 'Proyectos',\n  },\n  {\n    component: CNavGroup,\n    name: 'Dashboard',\n    to: '/base',\n    icon: <CIcon icon={cilClipboard} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Inicio',\n        to: '/dashboard',\n        icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Panel Informativo',\n        to: '/panel-informativo',\n        icon: <CIcon icon={cilInfo} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Proyecto',\n        to: '/proyecto',\n        icon: <CIcon icon={cilBriefcase} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Informe diario',\n        to: '/informe-diario',\n        icon: <CIcon icon={cilStorage} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Actividades Trisemanal',\n        to: '/trisemanal',\n        icon: <CIcon icon={cilAlignCenter} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Carta Gantt',\n        to: '/carta-gantt',\n        icon: <CIcon icon={cilBarChart} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Detalles de avance',\n        to: '/avance',\n        icon: <CIcon icon={cilGraph} customClassName=\"nav-icon\" />,\n      },\n    ],\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Proyectos en curso',\n  //   to: '/dashboard',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  {\n    component: CNavTitle,\n    name: 'Administración',\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar Proyectos',\n    to: '/administrar_proyectos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar Contratos',\n    to: '/administrar_contratos',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Administrar usuarios',\n    to: '/administrar_usuarios',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CCloseButton,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarFooter,\n  CSidebarHeader,\n  CSidebarNav,\n  CSidebarToggler,\n} from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport CIcon from '@coreui/icons-react'\nimport { cilExitToApp } from '@coreui/icons'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  let navigate = useNavigate()\n\n  return (\n    <CSidebar\n      className=\"border-end\"\n      colorScheme=\"light\"\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"border-bottom\">\n        <CSidebarBrand to=\"/\">\n          {/* <CIcon customClassName=\"sidebar-brand-full\" icon={cilClipboard} height={32} /> */}\n          {/* <CIcon customClassName=\"sidebar-brand-narrow\" icon={cilClipboard} height={32} /> */}\n          <span>P&G Project Control</span>\n        </CSidebarBrand>\n      </CSidebarHeader>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarFooter\n        className=\"border-top d-lg-flex nav-item\"\n        onClick={() => {\n          navigate(`/`)\n        }}\n      >\n        Cerrar sesión\n        <CIcon icon={cilExitToApp} size=\"sm\" />\n      </CSidebarFooter>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\n        <AppHeader />\n        <div className=\"body flex-grow-1\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","DailyReport","DailyReportView","DailyReportEdit","Detail","Gantt","Project","InformativePanel","Trisemanal","ProjectAdministration","ContractAdministration","User","path","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","getProject","getContract","useRegisterGeneralData","projectLS","JSON","parse","contractLS","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","getRouteName","routes","currentRoute","find","route","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","map","breadcrumb","_createElement","href","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","exact","Navigate","to","replace","AppFooter","CFooter","process","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderToggler","onClick","type","style","marginInlineStart","CIcon","icon","cilMenu","size","CHeaderNav","CDropdown","variant","placement","CDropdownToggle","caret","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","as","AppSidebarNav","_ref","items","useNavigate","navLink","badge","indent","arguments","undefined","_Fragment","CBadge","text","navItem","item","component","rest","Component","CNavLink","NavLink","navGroup","_item$items","compact","toggler","CSidebarNav","SimpleBar","CNavTitle","CNavGroup","cilClipboard","customClassName","CNavItem","cilHome","cilInfo","cilBriefcase","cilStorage","cilAlignCenter","cilBarChart","cilGraph","cilPencil","AppSidebar","unfoldable","sidebarUnfoldable","navigate","CSidebar","colorScheme","visible","onVisibleChange","CSidebarHeader","CSidebarBrand","navigation","CSidebarFooter","cilExitToApp","DefaultLayout"],"sourceRoot":""}