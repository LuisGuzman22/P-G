{"version":3,"file":"static/js/988.8403765a.chunk.js","mappings":"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","sources":["components/loading.jsx","hooks/useFetch.js","../node_modules/@coreui/react/src/components/toast/CToast.tsx","../node_modules/@coreui/react/src/components/toast/CToastBody.tsx","hooks/useRegisterUser.js","components/ModalAddUser.jsx","hooks/useGetUserList.js","components/UserList.jsx","pages/User.jsx","utils/regex.js","../node_modules/@coreui/react/src/components/form/CFormCheck.tsx"],"sourcesContent":["import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst fetchProducts = async (projectId) => {\n  const res = await axios.get('https://057fad5c781541ef9564e00a00f8e38f.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchUsers = async () => {\n  const res = await axios.get('https://b4b07e25f42d4135b6fc3791a6e1d1f8.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchContracts = async (contractId) => {\n  const res = await axios.get('https://2b3570b8072a44e09ce5b5a80a4c8012.api.mockbin.io/')\n  return res.data.data\n}\n\nconst fetchBasicData = async (contractId) => {\n  const res = await axios.get('https://07a397da689a439a8a9f86b1df79836e.api.mockbin.io/')\n  return res.data.data\n}\n\nexport const useFetchProyects = (projectId) => {\n  return useQuery({\n    queryKey: ['projects'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchProducts(projectId)\n    },\n  })\n}\n\nexport const useFetchContract = (contractId) => {\n  return useQuery({\n    queryKey: ['contracts'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchContracts(contractId)\n    },\n  })\n}\n\nexport const useFetchBasicData = (contractId) => {\n  return useQuery({\n    queryKey: ['basics'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchBasicData(contractId)\n    },\n  })\n}\n\nexport const useFetchUserList = () => {\n  return useQuery({\n    queryKey: ['users'],\n    refetchType: 'all',\n    queryFn: async () => {\n      return fetchUsers()\n    },\n  })\n}\n","import React, {\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { useForkedRef } from '../../hooks'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CToastProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * Apply a CSS fade transition to the toast.\n   */\n  animation?: boolean\n  /**\n   * Auto hide the toast.\n   */\n  autohide?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Delay hiding the toast (ms).\n   */\n  delay?: number\n  /**\n   * @ignore\n   */\n  index?: number\n  /**\n   * @ignore\n   */\n  key?: number\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose?: (index: number | null) => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: (index: number | null) => void\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\ninterface ContextProps extends CToastProps {\n  visible?: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean | undefined>>\n}\n\nexport const CToastContext = createContext({} as ContextProps)\n\nexport const CToast = forwardRef<HTMLDivElement, CToastProps>(\n  (\n    {\n      children,\n      animation = true,\n      autohide = true,\n      className,\n      color,\n      delay = 5000,\n      index,\n      key,\n      visible = false,\n      onClose,\n      onShow,\n      ...rest\n    },\n    ref,\n  ) => {\n    const toastRef = useRef()\n    const forkedRef = useForkedRef(ref, toastRef)\n    const [_visible, setVisible] = useState(false)\n    const timeout = useRef<number>()\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    const contextValues = {\n      visible: _visible,\n      setVisible,\n    }\n\n    // triggered on mount and destroy\n    useEffect(() => () => clearTimeout(timeout.current), [])\n\n    useEffect(() => {\n      _autohide()\n    }, [_visible])\n\n    const _autohide = () => {\n      if (autohide) {\n        clearTimeout(timeout.current)\n        timeout.current = window.setTimeout(() => {\n          setVisible(false)\n        }, delay)\n      }\n    }\n\n    return (\n      <Transition\n        in={_visible}\n        nodeRef={toastRef}\n        onEnter={() => onShow && onShow(index ?? null)}\n        onExited={() => onClose && onClose(index ?? null)}\n        timeout={250}\n        unmountOnExit\n      >\n        {(state) => (\n          <CToastContext.Provider value={contextValues}>\n            <div\n              className={classNames(\n                'toast',\n                {\n                  fade: animation,\n                  [`bg-${color}`]: color,\n                  'border-0': color,\n                  'show showing': state === 'entering' || state === 'exiting',\n                  show: state === 'entered',\n                },\n                className,\n              )}\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              role=\"alert\"\n              onMouseEnter={() => clearTimeout(timeout.current)}\n              onMouseLeave={() => _autohide()}\n              {...rest}\n              key={key}\n              ref={forkedRef}\n            >\n              {children}\n            </div>\n          </CToastContext.Provider>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCToast.propTypes = {\n  animation: PropTypes.bool,\n  autohide: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  delay: PropTypes.number,\n  index: PropTypes.number,\n  key: PropTypes.number,\n  onClose: PropTypes.func,\n  onShow: PropTypes.func,\n  visible: PropTypes.bool,\n}\n\nCToast.displayName = 'CToast'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CToastBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CToastBody = forwardRef<HTMLDivElement, CToastBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('toast-body', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCToastBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCToastBody.displayName = 'CToastBody'\n","import { useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\nimport { useMutation } from '@tanstack/react-query'\n\nconst useRegisterUser = () => {\n  const [error, setError] = useState()\n  const [isError, setIsError] = useState(false)\n\n  const mutation = useMutation({\n    mutationFn: async (newTodo) => {\n      return await axios\n        .post('/prueba', newTodo)\n        .then((res) => {\n          if (res.ok) {\n            setIsError(false)\n            return res.ok\n          } else {\n            setError('Error al registrar usuario')\n            setIsError(true)\n            return false\n          }\n        })\n        .catch((err) => {\n          setError('Error al registrar usuario')\n          setIsError(true)\n          return false\n        })\n    },\n    onError: (err) => {\n      setError('Error al registrar usuario')\n      setIsError(true)\n      return false\n    },\n  })\n\n  const register = (data) => {\n    setIsError(false)\n    const response = mutation.mutate(data)\n    return response\n  }\n\n  return { register, error, isError }\n}\n\nexport default useRegisterUser\n","/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormSelect,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CFormCheck,\n} from '@coreui/react'\nimport useRegisterUser from 'src/hooks/useRegisterUser'\nimport { regex } from 'src/utils/regex'\nconst ModalAddUser = (props) => {\n  const initialState = {\n    userName: undefined,\n    userMail: undefined,\n    userProject: undefined,\n    userContract: undefined,\n    userPassword: undefined,\n    isActive: undefined,\n  }\n\n  const [user, setUser] = useState(props.selectedUser ? props.selectedUser : initialState)\n  const [userNameError, setUserNameError] = useState(false)\n  const [userMailError, setUserMailError] = useState(false)\n  const [userProjectError, setUserProjectError] = useState(false)\n  const [userContractError, setUserContractError] = useState(false)\n  const [userPasswordError, setUserPasswordError] = useState(false)\n  const [errorForm, setErrorForm] = useState(0)\n\n  const { register, error, isError } = useRegisterUser()\n\n  const onChangeData = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value })\n  }\n\n  const handleClick = () => {\n    props.sendDataToParent(false)\n  }\n\n  const handleRegisterUser = () => {\n    if (!user.name || user.name === '') {\n      setErrorForm(1)\n      setUserNameError(true)\n    } else {\n      setErrorForm(3)\n      setUserNameError(false)\n    }\n    if (!user.userMail || user.userMail === '') {\n      setErrorForm(1)\n      setUserMailError(true)\n    } else {\n      setErrorForm(3)\n      setUserMailError(false)\n    }\n    if (!user.userPassword || user.userPassword === '') {\n      setErrorForm(1)\n      setUserPasswordError(true)\n    } else {\n      setErrorForm(3)\n      setUserPasswordError(false)\n    }\n    if (!user.userContract || user.userContract === '-1') {\n      setErrorForm(1)\n      setUserContractError(true)\n    } else {\n      setErrorForm(3)\n      setUserContractError(false)\n    }\n    if (!user.userProject || user.userProject === '-1') {\n      setErrorForm(1)\n      setUserProjectError(true)\n    } else {\n      setErrorForm(3)\n      setUserProjectError(false)\n    }\n  }\n\n  useEffect(() => {\n    if (user.isActive === undefined) {\n      user.isActive = false\n    }\n    if (errorForm === 3) register(user)\n  }, [errorForm])\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => handleClick()}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Añadir Usuario</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CToast\n          autohide={true}\n          visible={isError}\n          color=\"danger\"\n          className=\"text-white align-items-center\" // VER EVENTO DE ESCONDERSE PARA RESETEAR EL STATE DE ERROR\n        >\n          <div className=\"d-flex\">\n            <CToastBody>{error}</CToastBody>\n          </div>\n        </CToast>\n        <CToast\n          autohide={true}\n          visible={errorForm === 1}\n          color=\"danger\"\n          onClose={() => {\n            setErrorForm(2)\n          }}\n          className=\"text-white align-items-center\"\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Debe completar todos los datos para crear el usuario</CToastBody>\n          </div>\n        </CToast>\n        <CForm>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                invalid={userNameError}\n                id=\"userName\"\n                label=\"Nombre\"\n                placeholder=\"Nombre\"\n                value={user.userName || ''}\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value !== '') {\n                    setUserNameError(false)\n                  } else {\n                    setUserNameError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                invalid={userMailError}\n                id=\"userMail\"\n                value={user.userMail || ''}\n                label=\"Correo\"\n                placeholder=\"Correo\"\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value && e.target.value.match(regex)) {\n                    setUserMailError(false)\n                  } else {\n                    setUserMailError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Proyecto\"\n                id=\"userProject\"\n                invalid={userProjectError}\n                value={user.userProject}\n                onBlur={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserProjectError(false)\n                  } else {\n                    setUserProjectError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserProjectError(false)\n                  } else {\n                    setUserProjectError(true)\n                  }\n                  onChangeData(e)\n                }}\n              >\n                <option value={'-1'}>Seleccione</option>\n                <option value={'Proyecto 1'}>Proyecto 1</option>\n                <option value={'Proyecto 2'}>Proyecto 2</option>\n              </CFormSelect>\n            </CCol>\n            <CCol sm={6}>\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Contrato\"\n                invalid={userContractError}\n                value={user.userContract}\n                id=\"userContract\"\n                onBlur={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserContractError(false)\n                  } else {\n                    setUserContractError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  if (e.target.value !== '-1') {\n                    setUserContractError(false)\n                  } else {\n                    setUserContractError(true)\n                  }\n                  onChangeData(e)\n                }}\n              >\n                <option value={'-1'}>Seleccione</option>\n                <option value={'Contrato 1'}>Contrato 1</option>\n                <option value={'Contrato 2'}>Contrato 2</option>\n              </CFormSelect>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"password\"\n                id=\"userPassword\"\n                invalid={userPasswordError}\n                value={user.userPassword || ''}\n                label=\"Contraseña\"\n                placeholder=\"Contraseña\"\n                text=\"\"\n                onBlur={(e) => {\n                  if (e.target.value !== '') {\n                    setUserPasswordError(false)\n                  } else {\n                    setUserPasswordError(true)\n                  }\n                }}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormCheck\n                id=\"isActive\"\n                label=\"Activo\"\n                defaultChecked={user.isActive}\n                onChange={(e) => {\n                  setUser({ ...user, [e.target.id]: !user.isActive })\n                }}\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => handleClick()}>\n          Cerrar\n        </CButton>\n        <CButton className=\"btn-add\" onClick={() => handleRegisterUser()}>\n          Añadir usuario\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalAddUser\n","import { useFetchUserList } from './useFetch'\n\nconst useGetUserList = () => {\n  const { data, isLoading, error } = useFetchUserList()\n  return { data, isLoading, error }\n}\n\nexport default useGetUserList\n","import React, { useEffect, useState } from 'react'\nimport {\n  CTable,\n  CTableHead,\n  CButton,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useGetUserList from 'src/hooks/useGetUserList'\nimport Loading from './loading'\nimport ModalAddUser from './ModalAddUser'\n\nconst ProjectList = () => {\n  const { data, isLoading, error } = useGetUserList()\n  const [visibleAddUser, setVisibleAddUser] = useState(false)\n  const [selectedUser, setSelectedUser] = useState()\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user)\n    setVisibleAddUser(!visibleAddUser)\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      {visibleAddUser && (\n        <ModalAddUser\n          visible={true}\n          selectedUser={selectedUser}\n          sendDataToParent={(data) => {\n            setVisibleAddUser(data)\n          }}\n        />\n      )}\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\">ID</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Nombre</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Correo</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Proyecto</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Contrato</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Acción</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {data &&\n            data.users.map((user) => {\n              return (\n                <CTableRow key={user.id}>\n                  <CTableDataCell>{user.id}</CTableDataCell>\n                  <CTableDataCell>{user.userName}</CTableDataCell>\n                  <CTableDataCell>{user.userMail}</CTableDataCell>\n                  <CTableDataCell>{user.userProject}</CTableDataCell>\n                  <CTableDataCell>{user.userContract}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton className=\"btn-edit\" onClick={(e) => handleEditUser(user)}>\n                      Editar\n                    </CButton>\n                    <CButton className=\"btn-del\">Eliminar</CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n        </CTableBody>\n      </CTable>\n    </>\n  )\n}\n\nexport default ProjectList\n","import React, { useState } from 'react'\nimport { CCard, CButton, CCardBody, CCardText } from '@coreui/react'\nimport ModalAddUser from 'src/components/ModalAddUser'\nimport UserList from 'src/components/UserList'\n\nconst User = () => {\n  const [visibleAddUser, setVisibleAddUser] = useState(false)\n\n  return (\n    <div className=\"user\">\n      {visibleAddUser && (\n        <ModalAddUser\n          visible={true}\n          sendDataToParent={(data) => {\n            setVisibleAddUser(data)\n          }}\n        />\n      )}\n\n      <CCard>\n        <CCardBody>\n          <CButton onClick={() => setVisibleAddUser(!visibleAddUser)}>Añadir usuario</CButton>\n          <CCardText>\n            <UserList />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default User\n","export const regex =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n","import React, { forwardRef, InputHTMLAttributes, ReactNode, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormControlValidation, CFormControlValidationProps } from './CFormControlValidation'\nimport { CFormLabel } from './CFormLabel'\n\nimport { useForkedRef } from '../../hooks'\nimport type { Colors, Shapes } from '../../types'\n\nexport type ButtonObject = {\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Select the shape of the component.\n   *\n   * @type 'rounded' | 'rounded-top' | 'rounded-end' | 'rounded-bottom' | 'rounded-start' | 'rounded-circle' | 'rounded-pill' | 'rounded-0' | 'rounded-1' | 'rounded-2' | 'rounded-3' | string\n   */\n  shape?: Shapes\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Set the button variant to an outlined button or a ghost button.\n   */\n  variant?: 'outline' | 'ghost'\n}\n\nexport interface CFormCheckProps\n  extends CFormControlValidationProps,\n    InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * Create button-like checkboxes and radio buttons.\n   */\n  button?: ButtonObject\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets hit area to the full area of the component.\n   */\n  hitArea?: 'full'\n  /**\n   * The id global attribute defines an identifier (ID) that must be unique in the whole document.\n   */\n  id?: string\n  /**\n   * Input Checkbox indeterminate Property.\n   */\n  indeterminate?: boolean\n  /**\n   * Group checkboxes or radios on the same horizontal row.\n   */\n  inline?: boolean\n  /**\n   * Set component validation state to invalid.\n   */\n  invalid?: boolean\n  /**\n   * The element represents a caption for a component.\n   */\n  label?: string | ReactNode\n  /**\n   * Put checkboxes or radios on the opposite side.\n   *\n   * @sinve 4.7.0\n   */\n  reverse?: boolean\n  /**\n   * Specifies the type of component.\n   */\n  type?: 'checkbox' | 'radio'\n  /**\n   * Set component validation state to valid.\n   */\n  valid?: boolean\n}\n\nexport const CFormCheck = forwardRef<HTMLInputElement, CFormCheckProps>(\n  (\n    {\n      className,\n      button,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      floatingLabel,\n      tooltipFeedback,\n      hitArea,\n      id,\n      indeterminate,\n      inline,\n      invalid,\n      label,\n      reverse,\n      type = 'checkbox',\n      valid,\n      ...rest\n    },\n    ref,\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null)\n    const forkedRef = useForkedRef(ref, inputRef)\n\n    useEffect(() => {\n      if (inputRef.current && indeterminate) {\n        inputRef.current.indeterminate = indeterminate\n      }\n    }, [indeterminate, inputRef.current])\n\n    const FormControl = () => (\n      <input\n        type={type}\n        className={classNames(button ? 'btn-check' : 'form-check-input', {\n          'is-invalid': invalid,\n          'is-valid': valid,\n          'me-2': hitArea,\n        })}\n        id={id}\n        {...rest}\n        ref={forkedRef}\n      />\n    )\n\n    const FormValidation = () => (\n      <CFormControlValidation\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        floatingLabel={floatingLabel}\n        invalid={invalid}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      />\n    )\n\n    const FormLabel = () => (\n      <CFormLabel\n        customClassName={classNames(\n          button\n            ? classNames(\n                'btn',\n                button.variant ? `btn-${button.variant}-${button.color}` : `btn-${button.color}`,\n                {\n                  [`btn-${button.size}`]: button.size,\n                },\n                `${button.shape}`,\n              )\n            : 'form-check-label',\n        )}\n        {...(id && { htmlFor: id })}\n      >\n        {label}\n      </CFormLabel>\n    )\n\n    const FormCheck = () => {\n      if (button) {\n        return (\n          <>\n            <FormControl />\n            {label && <FormLabel />}\n            <FormValidation />\n          </>\n        )\n      }\n\n      if (label) {\n        return hitArea ? (\n          <>\n            <FormControl />\n            <CFormLabel\n              customClassName={classNames('form-check-label stretched-link', className)}\n              {...(id && { htmlFor: id })}\n            >\n              {label}\n            </CFormLabel>\n            <FormValidation />\n          </>\n        ) : (\n          <div\n            className={classNames(\n              'form-check',\n              {\n                'form-check-inline': inline,\n                'form-check-reverse': reverse,\n                'is-invalid': invalid,\n                'is-valid': valid,\n              },\n              className,\n            )}\n          >\n            <FormControl />\n            <FormLabel />\n            <FormValidation />\n          </div>\n        )\n      }\n\n      return <FormControl />\n    }\n\n    return <FormCheck />\n  },\n)\n\nCFormCheck.propTypes = {\n  button: PropTypes.object,\n  className: PropTypes.string,\n  hitArea: PropTypes.oneOf(['full']),\n  id: PropTypes.string,\n  indeterminate: PropTypes.bool,\n  inline: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  reverse: PropTypes.bool,\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  ...CFormControlValidation.propTypes,\n}\n\nCFormCheck.displayName = 'CFormCheck'\n"],"names":["Loading","_jsx","Lottie","animationData","loadingjson","loop","width","className","useFetchProyects","projectId","useQuery","queryKey","refetchType","queryFn","async","axios","get","data","fetchProducts","useFetchContract","contractId","fetchContracts","useFetchBasicData","fetchBasicData","useFetchUserList","fetchUsers","CToastContext","createContext","CToast","forwardRef","_a","ref","children","_b","animation","_c","autohide","color","_d","delay","index","key","_e","visible","onClose","onShow","rest","__rest","toastRef","useRef","forkedRef","useForkedRef","_f","useState","_visible","setVisible","timeout","useEffect","contextValues","clearTimeout","current","_autohide","window","setTimeout","React","Transition","in","nodeRef","onEnter","onExited","unmountOnExit","state","Provider","value","__assign","classNames","fade","concat","show","role","onMouseEnter","onMouseLeave","propTypes","PropTypes","colorPropType","displayName","CToastBody","useRegisterUser","error","setError","isError","setIsError","mutation","useMutation","mutationFn","post","newTodo","then","res","ok","catch","err","onError","register","mutate","props","initialState","userName","undefined","userMail","userProject","userContract","userPassword","isActive","user","setUser","selectedUser","userNameError","setUserNameError","userMailError","setUserMailError","userProjectError","setUserProjectError","userContractError","setUserContractError","userPasswordError","setUserPasswordError","errorForm","setErrorForm","onChangeData","e","target","id","handleClick","sendDataToParent","_jsxs","CModal","scrollable","size","CModalHeader","CModalTitle","CModalBody","CForm","CRow","CCol","sm","CFormInput","type","invalid","label","placeholder","text","onBlur","onChange","match","regex","CFormSelect","CFormCheck","defaultChecked","CModalFooter","CButton","onClick","name","useGetUserList","isLoading","ProjectList","visibleAddUser","setVisibleAddUser","setSelectedUser","_Fragment","ModalAddUser","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","users","map","CTableDataCell","handleEditUser","User","CCard","CCardBody","CCardText","UserList","button","feedback","feedbackInvalid","feedbackValid","floatingLabel","tooltipFeedback","hitArea","indeterminate","inline","reverse","valid","inputRef","FormControl","FormValidation","CFormControlValidation","describedby","FormLabel","CFormLabel","customClassName","variant","shape","htmlFor"],"sourceRoot":""}