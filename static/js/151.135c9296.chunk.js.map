{"version":3,"file":"static/js/151.135c9296.chunk.js","mappings":"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","sources":["components/ModalSendDailyReport.jsx","components/DailyReportEditCollapse.jsx","pages/DailyReportEditPage.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CRow,\n  CCol,\n  CFormTextarea,\n} from '@coreui/react'\nconst ModalSendDailyReport = (props) => {\n  const [rejectCommentary, setRejectCommentary] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleClickReject = () => {\n    setError(false)\n    if (rejectCommentary !== '') {\n      props.sendDataToParent(false)\n    } else {\n      setError(true)\n    }\n  }\n\n  const handleClickApprove = () => {\n    props.sendDataToParent(false)\n  }\n\n  const onChangeData = (e) => {\n    setRejectCommentary(e.target.value)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => props.sendDataToParent(false)}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        {/* <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Categorías</CModalTitle> */}\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={12}>\n              <CFormTextarea\n                id=\"rejectCommentary\"\n                label=\"Comentario\"\n                value={rejectCommentary || ''}\n                rows={3}\n                invalid={error}\n                text={error && 'Debe agregar un comentario para rechazar el informe diario.'}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              ></CFormTextarea>\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => handleClickReject()}>\n          Rechazar\n        </CButton>\n        <CButton color=\"primary\" onClick={() => handleClickApprove()}>\n          Aprobar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalSendDailyReport\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport ModalSendDailyReport from './ModalSendDailyReport'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport Pdf from './Pdf'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport Loading from './loading'\n\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DailyReportCollapse = () => {\n  const currentLocation = useLocation().pathname\n  const isEditMode = currentLocation.includes('/edit')\n  const navigate = useNavigate()\n  const columnChartElement = useRef(null)\n  const pieChartElement = useRef(null)\n\n  const [visibleSendDailyReportModal, setVisibleSendDailyReportModal] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    totalIndirectWorkForce,\n    directWorkForceList,\n    totalDirectWorkForce,\n    asarcoMachineryList,\n    machineryList,\n    equipmentList,\n    equipmentPlateList,\n    vehicleList,\n    vehiclePlateList,\n    activityList,\n    aljibeList,\n    comment,\n    incident,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n  } = useRegisterDailyReportCompany()\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [imagenPieChart, setImagenPieChart] = useState()\n\n  const [isLoading, setIsloading] = useState(false)\n  const [blobData, setBlobData] = useState()\n  const [url, setUrl] = useState()\n\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [showDotationChart, setShowDotationChart] = useState(false)\n\n  useEffect(() => {\n    if (\n      totalDirectWorkForce.directSubtotalOfferedNumber &&\n      totalDirectWorkForce.directSubtotalWorkNumber\n    ) {\n      setShowDotationChart(true)\n    }\n    setTotalPlanedDotation(totalDirectWorkForce.directSubtotalOfferedNumber)\n    setTotalWorkDotation(totalDirectWorkForce.directSubtotalWorkNumber)\n  }, [totalDirectWorkForce])\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  const [showAsarcoChart, setShowAsarcoChart] = useState(false)\n  useEffect(() => {\n    console.log('asarcoMachineryList', asarcoMachineryList.length)\n\n    for (let asarcoData of asarcoMachineryList) {\n      setShowAsarcoChart(true)\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    if (!company.dailyReportDate) window.location.reload()\n  }, [company])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const { registerData } = useRegisterDailyReport()\n\n  const registerDailyReport = () => {\n    if (isEditMode) {\n      setVisibleSendDailyReportModal(!visibleSendDailyReportModal)\n    } else {\n      registerData()\n    }\n  }\n\n  const barGraphData = [\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n  ]\n\n  const piechartData = [\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', effectiveTime],\n    ['Mantención Programada (Hrs)', scheduleMaintimeTime],\n    ['Demora Programada (Hrs)', scheduleDelay],\n    ['Perdida Operacional (Hrs)', opperationalLoss],\n    ['Mantención No Programada (Hrs)', unscheduleMaintimeTime],\n    ['Demora No Programada (Hrs)', unscheduleDelay],\n    ['Reservas (Hrs)', reserves],\n  ]\n\n  const convertAsarcoChart = () => {\n    setImagenPieChart()\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        setImagenPieChart(dataUrl)\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  const convertDotationChart = () => {\n    setImagenColumnChart()\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        setImagenColumnChart(dataUrl)\n      })\n      .catch((err) => {})\n  }\n\n  return (\n    <div className=\"dailyReport\">\n      {visibleSendDailyReportModal && (\n        <ModalSendDailyReport\n          visible={true}\n          sendDataToParent={async (data) => {\n            setVisibleSendDailyReportModal(data)\n          }}\n        />\n      )}\n      <div>\n        <div>\n          <CRow>\n            <div ref={columnChartElement}>\n              {/* <CRow>\n                <CCol>Dotación Planeada Directos Total</CCol>\n                <CCol>{totalPlanedDotation}</CCol>\n              </CRow>\n              <CRow>\n                <CCol>Dotación Directos Obra Total</CCol>\n                <CCol>{totalWorkDotation}</CCol>\n              </CRow> */}\n              {showDotationChart && (\n                <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"200px\" data={barGraphData} />\n              )}\n            </div>\n            <div ref={pieChartElement}>\n              {showAsarcoChart && (\n                <Chart chartType=\"PieChart\" data={piechartData} width={'100%'} height={'300px'} />\n              )}\n            </div>\n          </CRow>\n        </div>\n        <PDFDownloadLink\n          document={\n            <Pdf\n              company={company}\n              indirectWorkForceList={indirectWorkForceList}\n              basicQuery={basicQuery}\n              totalIndirectWorkForce={totalIndirectWorkForce}\n              directWorkForceList={directWorkForceList}\n              totalDirectWorkForce={totalDirectWorkForce}\n              asarcoMachineryList={asarcoMachineryList}\n              machineryList={machineryList}\n              equipmentList={equipmentList}\n              equipmentPlateList={equipmentPlateList}\n              vehiclePlateList={vehiclePlateList}\n              vehicleList={vehicleList}\n              activityList={activityList}\n              aljibeList={aljibeList}\n              comment={comment}\n              incident={incident}\n              directDotationWorkForceList={directDotationWorkForceList}\n              machineryWorkForceList={machineryWorkForceList}\n              equipmentWorkForceList={equipmentWorkForceList}\n              imagenColumnChart={imagenColumnChart}\n              imagenPieChart={imagenPieChart}\n            />\n          }\n          fileName=\"Reporte 1.pdf\"\n        >\n          {({ blob, url, loading, error }) => {\n            setIsloading(loading)\n            setBlobData(blob)\n            if (showAsarcoChart)\n              if (!imagenPieChart || imagenPieChart === 'data:,') {\n                convertAsarcoChart()\n              }\n            if (showDotationChart) {\n              if (!imagenColumnChart || imagenColumnChart === 'data:,') {\n                convertDotationChart()\n              }\n            }\n            setUrl(url)\n            return loading ? 'Generando documento...' : 'Descargar PDF'\n          }}\n        </PDFDownloadLink>\n      </div>\n      {!isLoading && url && blobData ? (\n        <>\n          <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n            <CAccordionItem itemKey={1}>\n              <CAccordionHeader>1) Empresa</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <CompanyReport />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={2}>\n              <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={3}>\n              <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalIndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={4}>\n              <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={5}>\n              <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalDirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={6}>\n              <CAccordionHeader>\n                6) Dotación por frente de trabajo personal directo\n              </CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectDotationWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={7}>\n              <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Machinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={8}>\n              <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <MachineryWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={9}>\n              <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <AsarcoMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={10}>\n              <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={11}>\n              <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentPlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={12}>\n              <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={13}>\n              <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Vehicle />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={14}>\n              <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <VehiclePlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={15}>\n              <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Activities />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={16}>\n              <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndustrialWaterControl />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={17}>\n              <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Comments />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={18}>\n              <CAccordionHeader>18) Registro fotográfico diario</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <PhotoRecord />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={19}>\n              <CAccordionHeader>19) Incidentes, lesiones o eventos</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Incidents />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={20}>\n              <CAccordionHeader>20) Firmas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <></>\n              </CAccordionBody>\n            </CAccordionItem>\n          </CAccordion>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              // registerData()\n              registerDailyReport()\n            }}\n          >\n            Registrar informe diario\n          </CButton>\n        </>\n      ) : (\n        <>\n          <Loading />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default DailyReportCollapse\n","import React, { useEffect } from 'react'\nimport DailyReportEditCollapse from 'src/components/DailyReportEditCollapse'\nimport { CCard, CCardBody, CCardText } from '@coreui/react'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useNavigate } from 'react-router-dom'\n\nconst DailyReportPage = () => {\n  let navigate = useNavigate()\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  useEffect(() => {\n    if (!basicQuery) {\n      navigate(`/dashboard`)\n    }\n  }, [basicQuery])\n\n  return (\n    <div className=\"daily-report\">\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <DailyReportEditCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default DailyReportPage\n"],"names":["props","rejectCommentary","setRejectCommentary","useState","error","setError","_jsxs","CModal","scrollable","visible","onClose","sendDataToParent","size","className","children","_jsx","CModalHeader","CModalBody","CForm","CRow","CCol","sm","CFormTextarea","id","label","value","rows","invalid","text","onChange","e","target","onChangeData","CModalFooter","CButton","color","onClick","DailyReportCollapse","isEditMode","useLocation","pathname","includes","columnChartElement","useNavigate","useRef","pieChartElement","visibleSendDailyReportModal","setVisibleSendDailyReportModal","company","indirectWorkForceList","totalIndirectWorkForce","directWorkForceList","totalDirectWorkForce","asarcoMachineryList","machineryList","equipmentList","equipmentPlateList","vehicleList","vehiclePlateList","activityList","aljibeList","comment","incident","directDotationWorkForceList","machineryWorkForceList","equipmentWorkForceList","useRegisterDailyReportCompany","imagenColumnChart","setImagenColumnChart","imagenPieChart","setImagenPieChart","isLoading","setIsloading","blobData","setBlobData","url","setUrl","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","showDotationChart","setShowDotationChart","useEffect","directSubtotalOfferedNumber","directSubtotalWorkNumber","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","showAsarcoChart","setShowAsarcoChart","console","log","length","asarcoData","Number","asarcoMachineryEffectiveTime","asarcoMachineryScheduleMaintenance","asarcoMachineryScheduleDelay","asarcoMachineryOpperationalLoss","asarcoMachineryUnscheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","dailyReportDate","window","location","reload","getData","useGetCachedQueryData","basicQuery","registerData","useRegisterDailyReport","barGraphData","role","piechartData","ModalSendDailyReport","async","data","ref","Chart","chartType","width","height","PDFDownloadLink","document","Pdf","fileName","_ref","blob","loading","toPng","current","cacheBust","then","dataUrl","catch","err","_Fragment","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","CompanyReport","IndirectWorkForce","TotalIndirectWorkForce","DirectWorkForce","TotalDirectWorkForce","DirectDotationWorkForce","Machinery","MachineryWorkForce","AsarcoMachinery","EquipmentMachinery","EquipmentPlate","EquipmentWorkForce","Vehicle","VehiclePlate","Activities","IndustrialWaterControl","Comments","PhotoRecord","Incidents","Loading","DailyReportPage","navigate","CCard","CCardBody","CCardText","DailyReportEditCollapse"],"sourceRoot":""}