{"version":3,"file":"static/js/315.c3ed00ac.chunk.js","mappings":"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","sources":["components/daily-report/activities.jsx","components/daily-report/asarco-machinery.jsx","components/daily-report/comments.jsx","components/daily-report/company-report.jsx","components/daily-report/direct-dotation-work-force.jsx","components/daily-report/direct-work-force.jsx","components/daily-report/equipment-machinery.jsx","components/daily-report/equipment-plate.jsx","components/daily-report/equipment-work-force.jsx","components/daily-report/incidents.jsx","components/daily-report/indirect-work-force.jsx","components/daily-report/industrial-water-control.jsx","components/daily-report/machinery-work-force.jsx","components/daily-report/machinery.jsx","components/daily-report/photo-record.jsx","components/daily-report/total-direct-work-force.jsx","components/daily-report/total-indirect-work-force.jsx","components/daily-report/vehicle-plate.jsx","components/daily-report/vehicle.jsx","components/loading.jsx","hooks/useRegisterDailyReport.js","hooks/useRegisterDailyReportCompany.js","utils/validate.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n// FALTA VALIDAR\nconst Activities = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    activityFrontWork: undefined,\n    primaveraId: undefined,\n    activityName: undefined,\n    activityDiscipline: undefined,\n    activityTotalAmount: undefined,\n    activityPreviousAcumulatedAmount: undefined,\n    activityActualShiftQuantity: undefined,\n    activityAccumulatedAcvancePercent: undefined,\n    activityUnit: undefined,\n    activityHoursSpendPrevius: undefined,\n    activityHoursSpendShift: undefined,\n    activityHoursAccumulated: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [activity, setActivity] = useState(initialState)\n  const [activityList, setActivityList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeActivity,\n    removeActivity,\n    activityList: activityListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'activityFrontWork') {\n      setActivity(initialState) // Clear the object\n      setActivity({ [e.target.id]: e.target.value })\n    }\n    if (\n      e.target.id === 'activityTotalAmount' ||\n      e.target.id === 'activityPreviousAcumulatedAmount' ||\n      e.target.id === 'activityActualShiftQuantity' ||\n      e.target.id === 'activityAccumulatedAcvancePercent' ||\n      e.target.id === 'activityHoursSpendPrevius' ||\n      e.target.id === 'activityHoursSpendShift' ||\n      e.target.id === 'activityHoursAccumulated'\n    ) {\n      if (validate(e.target.value)) {\n        setActivity({ ...activity, [e.target.id]: e.target.value })\n      }\n    } else {\n      setActivity({ ...activity, [e.target.id]: e.target.value })\n    }\n  }\n\n  useEffect(() => {\n    const realHpurs = activity.activityHoursSpendShift\n      ? Number(activity.activityHoursSpendShift)\n      : 0\n    const prevHours = activity.activityHoursSpendPrevius\n      ? Number(activity.activityHoursSpendPrevius)\n      : 0\n    setActivity({\n      ...activity,\n      activityHoursAccumulated: prevHours + realHpurs,\n    })\n  }, [activity.activityHoursSpendShift, activity.activityHoursSpendPrevius])\n\n  useEffect(() => {\n    if (\n      activity.activityPreviousAcumulatedAmount &&\n      activity.activityActualShiftQuantity &&\n      activity.activityTotalAmount\n    ) {\n      const previousHh = activity.activityPreviousAcumulatedAmount\n        ? Number(activity.activityPreviousAcumulatedAmount)\n        : 0\n\n      const actualHours = activity.activityActualShiftQuantity\n        ? Number(activity.activityActualShiftQuantity)\n        : 0\n\n      const totalHours = activity.activityTotalAmount ? Number(activity.activityTotalAmount) : 0\n\n      const calc = (actualHours + previousHh) / totalHours\n\n      setActivity({ ...activity, activityAccumulatedAcvancePercent: calc.toFixed(2) })\n    }\n  }, [\n    activity.activityPreviousAcumulatedAmount,\n    activity.activityActualShiftQuantity,\n    activity.activityTotalAmount,\n  ])\n\n  const registerActivity = () => {\n    if (!activity.activityFrontWork || activity.activityFrontWork === '0') {\n      setError(true)\n    } else {\n      const activityInitialState = {\n        id: uuidv4(),\n        activityFrontWork: activity.activityFrontWork,\n        primaveraId: activity.primaveraId,\n        activityName: activity.activityName,\n        activityDiscipline: activity.activityDiscipline,\n        activityTotalAmount: activity.activityTotalAmount,\n        activityPreviousAcumulatedAmount: activity.activityPreviousAcumulatedAmount,\n        activityActualShiftQuantity: activity.activityActualShiftQuantity,\n        activityAccumulatedAcvancePercent: activity.activityAccumulatedAcvancePercent,\n        activityUnit: activity.activityUnit,\n        activityHoursSpendPrevius: activity.activityHoursSpendPrevius,\n        activityHoursSpendShift: activity.activityHoursSpendShift,\n        activityHoursAccumulated: activity.activityHoursAccumulated,\n      }\n      setActivity(initialState) // Clear the object\n      setActivityList([...activityListContext, activityInitialState])\n    }\n  }\n\n  const deleteActivity = (id) => {\n    const newData = activityListContext.filter((item) => item.id !== id)\n    setActivityList(newData)\n    removeActivity(id)\n  }\n\n  const editActivity = (id) => {\n    const selectedActivity = activityListContext.find((item) => item.id === id)\n    setActivity({\n      activityFrontWork: selectedActivity.activityFrontWork,\n      primaveraId: selectedActivity.primaveraId,\n      activityName: selectedActivity.activityName,\n      activityDiscipline: selectedActivity.activityDiscipline,\n      activityTotalAmount: selectedActivity.activityTotalAmount,\n      activityPreviousAcumulatedAmount: selectedActivity.activityPreviousAcumulatedAmount,\n      activityActualShiftQuantity: selectedActivity.activityActualShiftQuantity,\n      activityAccumulatedAcvancePercent: selectedActivity.activityAccumulatedAcvancePercent,\n      activityUnit: selectedActivity.activityUnit,\n      activityHoursSpendPrevius: selectedActivity.activityHoursSpendPrevius,\n      activityHoursSpendShift: selectedActivity.activityHoursSpendShift,\n      activityHoursAccumulated: selectedActivity.activityHoursAccumulated,\n    })\n\n    deleteActivity(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeActivity(activityList)\n  }, [activityList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el frente de trabajo para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"activityFrontWork\"\n            label=\"Frente de trabajo\"\n            value={activity.activityFrontWork ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.workFront.map((workFrontCached) => {\n              return (\n                <option key={workFrontCached.id} value={workFrontCached.id}>\n                  {workFrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"primaveraId\"\n                    value={activity.primaveraId || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityName\"\n                    value={activity.activityName || ''}\n                    text=\"\"\n                    // disabled\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    id=\"activityDiscipline\"\n                    value={activity.activityDiscipline ?? '0'}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  >\n                    <option value={'0'}>Seleccione</option>\n                    <option value=\"Obras_civiles\">Obras Civiles</option>\n                    <option value=\"Movimiento_de_tierra\">Movimiento de tierra</option>\n                  </CFormSelect>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityTotalAmount\"\n                    value={activity.activityTotalAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityPreviousAcumulatedAmount\"\n                    value={activity.activityPreviousAcumulatedAmount || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityActualShiftQuantity\"\n                    value={activity.activityActualShiftQuantity || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityAccumulatedAcvancePercent\"\n                    value={activity.activityAccumulatedAcvancePercent || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityUnit\"\n                    value={activity.activityUnit || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendPrevius\"\n                    value={activity.activityHoursSpendPrevius || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursSpendShift\"\n                    value={activity.activityHoursSpendShift || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"activityHoursAccumulated\"\n                    value={activity.activityHoursAccumulated || ''}\n                    disabled\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerActivity()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {activityListContext.length > 0 && activityListContext[0].activityFrontWork && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">ID Actividad Primavera</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre de Actividad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Disciplina</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Total</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Acum Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">% Avance Acumulado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Unidad</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada Anterior</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Real Turno</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH Gastada Acumulada</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {activityListContext.map((item, index) => {\n              const charge = basicQuery.workFront.find((work) => {\n                return work.id == item.activityFrontWork\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.primaveraId}</CTableDataCell>\n                  <CTableDataCell>{item.activityName}</CTableDataCell>\n                  <CTableDataCell>{item.activityDiscipline}</CTableDataCell>\n                  <CTableDataCell>{item.activityTotalAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityPreviousAcumulatedAmount}</CTableDataCell>\n                  <CTableDataCell>{item.activityActualShiftQuantity}</CTableDataCell>\n                  <CTableDataCell>{item.activityAccumulatedAcvancePercent}</CTableDataCell>\n                  <CTableDataCell>{item.activityUnit}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendPrevius}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursSpendShift}</CTableDataCell>\n                  <CTableDataCell>{item.activityHoursAccumulated}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteActivity(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editActivity(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Activities\n","import { React, useEffect, useRef, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst AsarcoMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const pieChartElement = useRef(null)\n\n  const initialState = {\n    machinery: undefined,\n    asarcoMachineryEffectiveTime: undefined,\n    asarcoMachineryUnscheduleMaintenance: undefined,\n    asarcoMachineryScheduleMaintenance: undefined,\n    asarcoMachineryUnscheduleDelay: undefined,\n    asarcoMachineryReserves: undefined,\n    asarcoMachineryHorometer: undefined,\n    asarcoMachineryOpperationalLoss: undefined,\n    asarcoMachineryScheduleDelay: undefined,\n    machineryPlate: undefined,\n  }\n\n  const asarcoMachineryTotalsInitialState = {\n    asarcoMachineryEffectiveTime: 0,\n    asarcoMachineryUnscheduleMaintenance: 0,\n    asarcoMachineryScheduleMaintenance: 0,\n    asarcoMachineryUnscheduleDelay: 0,\n    asarcoMachineryReserves: 0,\n    asarcoMachineryHorometer: 0,\n    asarcoMachineryOpperationalLoss: 0,\n    asarcoMachineryScheduleDelay: 0,\n    machineryPlate: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [asarcoMachinery, setAsarcoMachinery] = useState(initialState)\n  const [asarcoMachineryList, setAsarcoMachineryList] = useState([])\n  const [asarcoMachineryTotals, setAsarcoMachineryTotals] = useState(\n    asarcoMachineryTotalsInitialState,\n  )\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const [imagenPieChart, setImagenPieChart] = useState()\n  const [pieChartData, setPieChartData] = useState([\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', 0],\n    ['Mantención Programada (Hrs)', 0],\n    ['Demora Programada (Hrs)', 0],\n    ['Perdida Operacional (Hrs)', 0],\n    ['Mantención No Programada (Hrs)', 0],\n    ['Demora No Programada (Hrs)', 0],\n    ['Reservas (Hrs)', 0],\n  ])\n\n  const {\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList: asarcoMachineryListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachinery({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedMachinery = basicQuery.machinery.find((mac) => {\n          return mac.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedMachinery.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'machineryPlate') {\n      if (e.target.value !== '0') {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      } else {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setAsarcoMachinery({ ...asarcoMachinery, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerAsarcoMachinery = () => {\n    if (!asarcoMachinery.machinery || !asarcoMachinery.machineryPlate) {\n      setError(true)\n    } else {\n      setPlates()\n      const asarcoMachineryInitialState = {\n        id: uuidv4(),\n        machinery: asarcoMachinery.machinery,\n        asarcoMachineryEffectiveTime: asarcoMachinery.asarcoMachineryEffectiveTime,\n        asarcoMachineryUnscheduleMaintenance: asarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n        asarcoMachineryScheduleMaintenance: asarcoMachinery.asarcoMachineryScheduleMaintenance,\n        asarcoMachineryUnscheduleDelay: asarcoMachinery.asarcoMachineryUnscheduleDelay,\n        asarcoMachineryReserves: asarcoMachinery.asarcoMachineryReserves,\n        asarcoMachineryHorometer: asarcoMachinery.asarcoMachineryHorometer,\n        asarcoMachineryOpperationalLoss: asarcoMachinery.asarcoMachineryOpperationalLoss,\n        asarcoMachineryScheduleDelay: asarcoMachinery.asarcoMachineryScheduleDelay,\n        machineryPlate: asarcoMachinery.machineryPlate,\n      }\n      setAsarcoMachinery(initialState) // Clear the object\n      setAsarcoMachineryList([...asarcoMachineryListContext, asarcoMachineryInitialState])\n    }\n  }\n\n  const deleteAsarcoMachinery = (id) => {\n    const newData = asarcoMachineryListContext.filter((item) => item.id !== id)\n    setAsarcoMachineryList(newData)\n\n    removeAsarcoMachinery(id)\n  }\n\n  const editAsarcoMachinery = (id) => {\n    const selectedAsarcoMachinery = asarcoMachineryListContext.find((item) => item.id === id)\n\n    const selectedMachinery = basicQuery.machinery.find((mac) => {\n      return mac.id.toString() === selectedAsarcoMachinery.machinery.toString()\n    })\n    setPlates(selectedMachinery.plate)\n\n    setAsarcoMachinery({\n      machinery: selectedAsarcoMachinery.machinery,\n      asarcoMachineryEffectiveTime: selectedAsarcoMachinery.asarcoMachineryEffectiveTime,\n      asarcoMachineryUnscheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryUnscheduleMaintenance,\n      asarcoMachineryScheduleMaintenance:\n        selectedAsarcoMachinery.asarcoMachineryScheduleMaintenance,\n      asarcoMachineryUnscheduleDelay: selectedAsarcoMachinery.asarcoMachineryUnscheduleDelay,\n      asarcoMachineryReserves: selectedAsarcoMachinery.asarcoMachineryReserves,\n      asarcoMachineryHorometer: selectedAsarcoMachinery.asarcoMachineryHorometer,\n      asarcoMachineryOpperationalLoss: selectedAsarcoMachinery.asarcoMachineryOpperationalLoss,\n      asarcoMachineryScheduleDelay: selectedAsarcoMachinery.asarcoMachineryScheduleDelay,\n      machineryPlate: selectedAsarcoMachinery.machineryPlate,\n    })\n    deleteAsarcoMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeAsarcoMachinery(asarcoMachineryList)\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    let asarcoMachineryTotalsCounter = {\n      asarcoMachineryEffectiveTime: 0,\n      asarcoMachineryUnscheduleMaintenance: 0,\n      asarcoMachineryScheduleMaintenance: 0,\n      asarcoMachineryUnscheduleDelay: 0,\n      asarcoMachineryReserves: 0,\n      asarcoMachineryHorometer: 0,\n      asarcoMachineryOpperationalLoss: 0,\n      asarcoMachineryScheduleDelay: 0,\n    }\n\n    for (let data of asarcoMachineryListContext) {\n      asarcoMachineryTotalsCounter = {\n        asarcoMachineryEffectiveTime:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryEffectiveTime) +\n          Number(data.asarcoMachineryEffectiveTime ?? 0),\n        asarcoMachineryUnscheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleMaintenance) +\n          Number(data.asarcoMachineryUnscheduleMaintenance ?? 0),\n        asarcoMachineryScheduleMaintenance:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleMaintenance) +\n          Number(data.asarcoMachineryScheduleMaintenance ?? 0),\n        asarcoMachineryUnscheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryUnscheduleDelay) +\n          Number(data.asarcoMachineryUnscheduleDelay ?? 0),\n        asarcoMachineryReserves:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryReserves) +\n          Number(data.asarcoMachineryReserves ?? 0),\n        asarcoMachineryHorometer:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryHorometer) +\n          Number(data.asarcoMachineryHorometer ?? 0),\n        asarcoMachineryOpperationalLoss:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryOpperationalLoss) +\n          Number(data.asarcoMachineryOpperationalLoss ?? 0),\n        asarcoMachineryScheduleDelay:\n          Number(asarcoMachineryTotalsCounter.asarcoMachineryScheduleDelay) +\n          Number(data.asarcoMachineryScheduleDelay ?? 0),\n      }\n    }\n    setAsarcoMachineryTotals(asarcoMachineryTotalsCounter)\n  }, [asarcoMachineryListContext])\n\n  const convertAsarcoChart = () => {\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenPieChart(dataUrl)\n        }\n        // storeGraphs({ asarcoChart: dataUrl })\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  useEffect(() => {\n    setPieChartData([\n      ['Task', 'Hours per Day'],\n      ['Tiempo Efectivo (Hrs)', asarcoMachineryTotals.asarcoMachineryEffectiveTime],\n      ['Mantención Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleMaintenance],\n      ['Demora Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryScheduleDelay],\n      ['Perdida Operacional (Hrs)', asarcoMachineryTotals.asarcoMachineryOpperationalLoss],\n      [\n        'Mantención No Programada (Hrs)',\n        asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance,\n      ],\n      ['Demora No Programada (Hrs)', asarcoMachineryTotals.asarcoMachineryUnscheduleDelay],\n      ['Reservas (Hrs)', asarcoMachineryTotals.asarcoMachineryReserves],\n    ])\n  }, [asarcoMachineryTotals])\n\n  useEffect(() => {\n    convertAsarcoChart()\n  }, [pieChartData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'asarcoChart', value: imagenPieChart })\n  }, [imagenPieChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar la máquina y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Maquinaria\"\n            id=\"machinery\"\n            value={asarcoMachinery.machinery ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"machineryPlate\"\n                value={asarcoMachinery.machineryPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Reservas (Hrs) (Sin operador, factores externos)\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryEffectiveTime\"\n                    value={asarcoMachinery.asarcoMachineryEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleMaintenance\"\n                    value={asarcoMachinery.asarcoMachineryScheduleMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryUnscheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryUnscheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryReserves\"\n                    value={asarcoMachinery.asarcoMachineryReserves || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Pérdida Operacional (Hrs) (depende de otro equipo)\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">\n                  Demoras Programadas (Hrs) (Colación y cambio de turno)\n                </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryHorometer\"\n                    value={asarcoMachinery.asarcoMachineryHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryOpperationalLoss\"\n                    value={asarcoMachinery.asarcoMachineryOpperationalLoss || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"asarcoMachineryScheduleDelay\"\n                    value={asarcoMachinery.asarcoMachineryScheduleDelay || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerAsarcoMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {asarcoMachineryListContext.length > 0 && asarcoMachineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Tiempo Efectivo (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Mantenimiento No Programado (Hrs) (Por alguna falla o alerta)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demora No Programada (Hrs) (Interrupción al ciclo de trabajo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Reservas (Hrs) (Sin operador, factores externos)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Pérdida Operacional (Hrs) (depende de otro equipo)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                Demoras Programadas (Hrs) (Colación y cambio de turno)\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {asarcoMachineryListContext.map((item, index) => {\n              const machinery = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              const plate = machinery.plate.find((pl) => {\n                return pl.id.toString() === item.machineryPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{machinery.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryUnscheduleDelay}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryReserves}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryOpperationalLoss}</CTableDataCell>\n                  <CTableDataCell>{item.asarcoMachineryScheduleDelay}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteAsarcoMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAsarcoMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryEffectiveTime}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryScheduleMaintenance}\n              </CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryUnscheduleDelay}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryReserves}</CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryHorometer}</CTableDataCell>\n              <CTableDataCell>\n                {asarcoMachineryTotals.asarcoMachineryOpperationalLoss}\n              </CTableDataCell>\n              <CTableDataCell>{asarcoMachineryTotals.asarcoMachineryScheduleDelay}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n      <div ref={pieChartElement}>\n        <Chart chartType=\"PieChart\" data={pieChartData} width={'100%'} height={'300px'} />\n      </div>\n    </div>\n  )\n}\n\nexport default AsarcoMachinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { useLocation } from 'react-router-dom'\n\nconst Comments = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    comment: '',\n  }\n\n  const [comment, setComment] = useState(initialState)\n\n  const onChangeData = (e) => {\n    setComment({ ...comment, [e.target.id]: e.target.value })\n  }\n\n  const { storeComment, comment: commentContext } = useRegisterDailyReportCompany()\n\n  useEffect(() => {\n    if (!isViewMode) storeComment(comment)\n  }, [comment])\n\n  return (\n    <div className=\"work-force-report\">\n      <CFormTextarea\n        id=\"comment\"\n        label=\"Comentarios y alertas en genenral\"\n        disabled={isViewMode}\n        value={isViewMode ? commentContext.comment : comment.comment}\n        onChange={(e) => {\n          onChangeData(e)\n        }}\n        rows={3}\n        text=\"\"\n      ></CFormTextarea>\n    </div>\n  )\n}\n\nexport default Comments\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CForm, CFormInput, CRow, CCol, CFormSelect } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport useRegisterGeneralData from 'src/hooks/useRegisterGeneralData'\nimport { useLocation } from 'react-router-dom'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\n\nconst CompanyReport = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const { storeCompanyData, company } = useRegisterDailyReportCompany()\n  const { registerData } = useRegisterDailyReport()\n  const { getProject, getContract } = useRegisterGeneralData()\n\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const onChangeData = (e) => {\n    storeCompanyData(e)\n  }\n\n  return (\n    <div className=\"company-report\">\n      <CForm>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"date\"\n              id=\"dailyReportDate\"\n              label=\"Fecha\"\n              value={company.dailyReportDate || ''}\n              disabled={isViewMode}\n              placeholder=\"Fecha\"\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportNumber\"\n              label=\"Informe diario N°\"\n              placeholder=\"Informe diario N°\"\n              text=\"\"\n              disabled={isViewMode}\n              value={company.dailyReportNumber || ''}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistName\"\n              label=\"Nombre de contratista\"\n              placeholder=\"Detalle\"\n              value={company.dailyReportContratistName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContratistNumber\"\n              label=\"N° de contrato\"\n              placeholder=\"N° de contrato\"\n              disabled\n              value={company.dailyReportContratistNumber || contractLS.code}\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractName\"\n              label=\"Nombre de contrato\"\n              placeholder=\"Nombre de contrato\"\n              value={company.dailyReportContractName || contractLS.name}\n              disabled\n              text=\"\"\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportContractManagerName\"\n              label=\"Administrador de contrato\"\n              placeholder=\"Administrador de contrato\"\n              value={company.dailyReportContractManagerName || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Clima\"\n              id=\"dailyReportWeather\"\n              value={company.dailyReportWeather || '0'}\n              label=\"Clima\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.weather.map((weather) => (\n                <option key={weather.id} value={weather.id}>\n                  {weather.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal directo)\"\n              id=\"dailyReportDirectPersonalShift\"\n              label=\"Turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.direct_staff_shift.map((direct_staf) => (\n                <option key={direct_staf.id} value={direct_staf.id}>\n                  {direct_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportDirectPersonalHours\"\n              label=\"Horas turno (Personal directo)\"\n              placeholder=\"Horas turno (Personal directo)\"\n              value={company.dailyReportDirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal directo)\"\n              id=\"dailyReportDirectPersonalJourney\"\n              label=\"Jornada (Personal directo)\"\n              value={company.dailyReportDirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Turno (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalShift\"\n              label=\"Turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalShift || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.indirect_staff_shift.map((indirect_staf) => (\n                <option key={indirect_staf.id} value={indirect_staf.id}>\n                  {indirect_staf.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n          <CCol sm={4}>\n            <CFormInput\n              type=\"text\"\n              id=\"dailyReportIndirectPersonalHours\"\n              label=\"Horas turno (Personal indirecto)\"\n              placeholder=\"Horas turno (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalHours || ''}\n              text=\"\"\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            />\n          </CCol>\n          <CCol sm={4}>\n            <CFormSelect\n              aria-label=\"Jornada (Personal indirecto)\"\n              id=\"dailyReportIndirectPersonalJourney\"\n              label=\"Jornada (Personal indirecto)\"\n              value={company.dailyReportIndirectPersonalJourney || '0'}\n              disabled={isViewMode}\n              onChange={(e) => {\n                onChangeData(e)\n              }}\n            >\n              <option value={'0'}>Seleccione</option>\n              {basicQuery?.shifts.map((shift) => (\n                <option key={shift.id} value={shift.id}>\n                  {shift.name}\n                </option>\n              ))}\n            </CFormSelect>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\n\nexport default CompanyReport\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst DirectDotationWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    directWorkFront: undefined,\n    directDotationWorkForceObservation: undefined,\n    directSubWorkFront: undefined,\n    directWorkFrontCharge: undefined,\n    directWorkFrontQuantity: undefined,\n    directDotationWorkForceObservation: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directDotationWorkForce, setDirectDotationWorkForce] = useState(initialState)\n  const [directDotationWorkForceList, setDirectDotationWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList: directDotationWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'directWorkFront') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'directSubWorkFront' || e.target.id === 'directWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setDirectDotationWorkForce({\n          ...directDotationWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setDirectDotationWorkForce({\n        ...directDotationWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  useEffect(() => {\n    setDirectDotationWorkForce({\n      ...directDotationWorkForce,\n      directSubWorkFront: enableSubFrontWork\n        ? directDotationWorkForce.directSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  const registerDirectDotationWorkForce = () => {\n    if (\n      !directDotationWorkForce.directWorkFront ||\n      !directDotationWorkForce.directWorkFrontCharge ||\n      !directDotationWorkForce.directWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const directDotationWorkForceInitialState = {\n        id: uuidv4(),\n        directDotationWorkForceObservation:\n          directDotationWorkForce.directDotationWorkForceObservation,\n        directWorkFront: directDotationWorkForce.directWorkFront,\n        directSubWorkFront: directDotationWorkForce.directSubWorkFront,\n        directWorkFrontCharge: directDotationWorkForce.directWorkFrontCharge,\n        directWorkFrontQuantity: directDotationWorkForce.directWorkFrontQuantity,\n      }\n      setDirectDotationWorkForce(initialState) // Clear the object\n      setDirectDotationWorkForceList([\n        ...directDotationWorkForceListContext,\n        directDotationWorkForceInitialState,\n      ])\n    }\n  }\n\n  const deletedirectDotationWorkForce = (id) => {\n    const newData = directDotationWorkForceListContext.filter((item) => item.id !== id)\n    setDirectDotationWorkForceList(newData)\n    removeDirectDotationWorkForce(id)\n  }\n\n  const editDirectDotationWorkForce = (id) => {\n    const selectDirectDotationWorkForce = directDotationWorkForceListContext.find(\n      (item) => item.id === id,\n    )\n    if (selectDirectDotationWorkForce.directSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setDirectDotationWorkForce({\n      directWorkFront: selectDirectDotationWorkForce.directWorkFront,\n      directDotationWorkForceObservation:\n        selectDirectDotationWorkForce.directDotationWorkForceObservation,\n      directSubWorkFront: selectDirectDotationWorkForce.directSubWorkFront,\n      directWorkFrontCharge: selectDirectDotationWorkForce.directWorkFrontCharge,\n      directWorkFrontQuantity: selectDirectDotationWorkForce.directWorkFrontQuantity,\n    })\n    deletedirectDotationWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectDotationWorkForceData(directDotationWorkForceList)\n  }, [directDotationWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, cargo y cantidad para registrar el\n                  personal\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFront\"\n            label=\"Frente de trabajo\"\n            value={directDotationWorkForce.directWorkFront || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"directSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={directDotationWorkForce.directSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n\n          <br />\n\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkFrontCharge\"\n            value={directDotationWorkForce.directWorkFrontCharge || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"directWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={directDotationWorkForce.directWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"directDotationWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={directDotationWorkForce.directDotationWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerDirectDotationWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {directDotationWorkForceListContext.length > 0 &&\n        directDotationWorkForceListContext[0].id && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Personal</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {directDotationWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.directWorkFront\n                  })\n                  const selectedCharge = basicQuery.directPersonal.find((charge) => {\n                    return charge.id == item.directWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directSubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.directDotationWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deletedirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editDirectDotationWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default DirectDotationWorkForce\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const columnChartElement = useRef(null)\n\n  const initialStatee = {\n    directWorkForce: undefined,\n    directWorkForceOfferedNumber: undefined,\n    directWorkForceContractedNumber: undefined,\n    directWorkForceCertifiedNumber: undefined,\n    directWorkForceBreakNumber: undefined,\n    directWorkForceWorkNumber: undefined,\n    directWorkForceHHNumber: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [directWorkForce, setDirectWorkForce] = useState(initialStatee)\n  const [directWorkForceList, setDirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [barGraphData, setBarGraphData] = useState([\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', 0, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', 0, 'silver'], // English color name\n  ])\n\n  const {\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    storeGraphs,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'directWorkForce') {\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setDirectWorkForce({ ...directWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerDirectWorkForce = () => {\n    if (!directWorkForce.directWorkForce) {\n      setError(true)\n    } else {\n      const directWorkForceInitialState = {\n        id: uuidv4(),\n        directWorkForce: directWorkForce.directWorkForce,\n        offeredNumber: directWorkForce.directWorkForceOfferedNumber,\n        contractedNumber: directWorkForce.directWorkForceContractedNumber,\n        certified: directWorkForce.directWorkForceCertifiedNumber,\n        breakNumber: directWorkForce.directWorkForceBreakNumber,\n        workNumber: directWorkForce.directWorkForceWorkNumber,\n        hh: directWorkForce.directWorkForceHHNumber,\n      }\n      setDirectWorkForce(initialStatee) // Clear the object\n      setDirectWorkForceList([...directWorkForceListContext, directWorkForceInitialState])\n    }\n  }\n\n  const deleteDirectWorkForce = (id) => {\n    const newData = directWorkForceListContext.filter((item) => item.id !== id)\n    setDirectWorkForceList(newData)\n\n    removeDirectWorkForce(id)\n  }\n\n  const editDirectWorkForce = (id) => {\n    const selectedDirectWorkForce = directWorkForceListContext.find((item) => item.id === id)\n\n    setDirectWorkForce({\n      directWorkForce: selectedDirectWorkForce.directWorkForce,\n      directWorkForceOfferedNumber: selectedDirectWorkForce.offeredNumber,\n      directWorkForceContractedNumber: selectedDirectWorkForce.contractedNumber,\n      directWorkForceCertifiedNumber: selectedDirectWorkForce.certified,\n      directWorkForceBreakNumber: selectedDirectWorkForce.breakNumber,\n      directWorkForceWorkNumber: selectedDirectWorkForce.workNumber,\n      directWorkForceHHNumber: selectedDirectWorkForce.hh,\n    })\n    deleteDirectWorkForce(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeDirectWorkForce(directWorkForceList)\n  }, [directWorkForceList])\n\n  useEffect(() => {\n    let offered = 0\n    let worked = 0\n    directWorkForceListContext.map((data) => {\n      offered = offered + Number(data.offeredNumber)\n      worked = worked + Number(data.workNumber)\n    })\n    setTotalPlanedDotation(offered)\n    setTotalWorkDotation(worked)\n    // convertDotationChart()\n  }, [directWorkForceListContext])\n\n  const convertDotationChart = () => {\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        if (dataUrl !== 'data:,') {\n          setImagenColumnChart(dataUrl)\n        }\n        // storeGraphs({ dotationChart: dataUrl })\n      })\n      .catch((err) => {})\n  }\n\n  useEffect(() => {\n    setBarGraphData([\n      ['Dotación', 'Dotación', { role: 'style' }],\n      ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n      ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n    ])\n  }, [totalPlanedDotation, totalWorkDotation])\n\n  useEffect(() => {\n    convertDotationChart()\n  }, [barGraphData])\n\n  useEffect(() => {\n    if (!isViewMode) storeGraphs({ name: 'dotationChart', value: imagenColumnChart })\n  }, [imagenColumnChart])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"directWorkForce\"\n            value={directWorkForce.directWorkForce || ''}\n            label=\"Cargo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.directPersonal.map((directPersonalCached) => {\n              return (\n                <option key={directPersonalCached.id} value={directPersonalCached.id}>\n                  {directPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={directWorkForce.directWorkForceOfferedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={directWorkForce.directWorkForceContractedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceCertifiedNumber\"\n                    placeholder=\"N° Acreditados\"\n                    value={directWorkForce.directWorkForceCertifiedNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={directWorkForce.directWorkForceBreakNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={directWorkForce.directWorkForceWorkNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"directWorkForceHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={directWorkForce.directWorkForceHHNumber || ''}\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n      {!isViewMode && (\n        <CButton\n          className=\"btn-project-action\"\n          onClick={() => {\n            registerDirectWorkForce()\n          }}\n        >\n          Registrar\n        </CButton>\n      )}\n      {directWorkForceListContext.length > 0 && directWorkForceListContext[0].directWorkForce && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {directWorkForceListContext.map((item, index) => {\n              const charge = basicQuery.directPersonal.find((personal) => {\n                return personal.id == item.directWorkForce\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                  <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                  <CTableDataCell>{item.certified}</CTableDataCell>\n                  <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                  <CTableDataCell>{item.workNumber}</CTableDataCell>\n                  <CTableDataCell>{item.hh}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteDirectWorkForce(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editDirectWorkForce(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n\n      <div ref={columnChartElement} style={{ width: '100%' }}>\n        <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"400px\" data={barGraphData} />\n      </div>\n    </div>\n  )\n}\n\nexport default DirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentMachinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentOfferedNumber: undefined,\n    equipmentCertifiedNumber: undefined,\n    equipmentWorkNumber: undefined,\n  }\n\n  const equipmentTotalsInitialState = {\n    equipmentOfferedNumber: 0,\n    equipmentCertifiedNumber: 0,\n    equipmentWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipment, setEquipment] = useState(initialState)\n  const [equipmentList, setEquipmentList] = useState([])\n  const [equipmentTotals, setEquipmentTotals] = useState(equipmentTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipment,\n    removeEquipment,\n    equipmentList: equipmentListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipment') {\n      setEquipment(initialState) // Clear the object\n      setEquipment({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setEquipment({ ...equipment, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerEquipment = () => {\n    if (!equipment.equipment || equipment.equipment === '0') {\n      setError(true)\n    } else {\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipment.equipment,\n        actions: {\n          equipmentOfferedNumber: equipment.equipmentOfferedNumber,\n          equipmentCertifiedNumber: equipment.equipmentCertifiedNumber,\n          equipmentWorkNumber: equipment.equipmentWorkNumber,\n        },\n      }\n      setEquipment(initialState) // Clear the object\n      setEquipmentList([...equipmentListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentListContext.filter((item) => item.id !== id)\n    setEquipmentList(newData)\n    removeEquipment(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipment = equipmentListContext.find((item) => item.id === id)\n    setEquipment({\n      equipment: selectedEquipment.equipment,\n      equipmentOfferedNumber: selectedEquipment.actions.equipmentOfferedNumber,\n      equipmentCertifiedNumber: selectedEquipment.actions.equipmentCertifiedNumber,\n      equipmentWorkNumber: selectedEquipment.actions.equipmentWorkNumber,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipment(equipmentList)\n  }, [equipmentList])\n\n  useEffect(() => {\n    let equipmentTotalsInitialStateCounter = {\n      equipmentOfferedNumber: 0,\n      equipmentCertifiedNumber: 0,\n      equipmentWorkNumber: 0,\n    }\n\n    for (let data of equipmentListContext) {\n      equipmentTotalsInitialStateCounter = {\n        equipmentOfferedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentOfferedNumber) +\n          Number(data.actions.equipmentOfferedNumber ?? 0),\n        equipmentCertifiedNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentCertifiedNumber) +\n          Number(data.actions.equipmentCertifiedNumber ?? 0),\n        equipmentWorkNumber:\n          Number(equipmentTotalsInitialStateCounter.equipmentWorkNumber) +\n          Number(data.actions.equipmentWorkNumber ?? 0),\n      }\n    }\n    setEquipmentTotals(equipmentTotalsInitialStateCounter)\n  }, [equipmentListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipment.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value=\"0\">Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOfferedNumber\"\n                    value={equipment.equipmentOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCertifiedNumber\"\n                    value={equipment.equipmentCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWorkNumber\"\n                    value={equipment.equipmentWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentListContext.length > 0 && equipmentListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Equipos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentListContext.map((item, index) => {\n              const charge = basicQuery.equipment.find((personal) => {\n                return personal.id == item.equipment\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.equipmentWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{equipmentTotals.equipmentWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentMachinery\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentPlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipment: undefined,\n    equipmentEffectiveTime: undefined,\n    equipmentCorrectiveMaintenance: undefined,\n    equipmentPreventiveMaintenance: undefined,\n    equipmentOutOfService: undefined,\n    equipmentWaiting: undefined,\n    equipmentNoOperator: undefined,\n    equipmentInitialHorometer: undefined,\n    equipmentFinalHorometer: undefined,\n    equipmentPlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentPlate, setEquipmentPlate] = useState(initialState)\n  const [equipmentPlateList, setEquipmenPlatetList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList: equipmentPlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'equipment') {\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmentPlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedEquipment = basicQuery.equipment.find((equip) => {\n          return equip.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedEquipment.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'equipmentPlate') {\n      if (e.target.value !== '0') {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      } else {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setEquipmentPlate({ ...equipmentPlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerEquipment = () => {\n    if (\n      !equipmentPlate.equipment ||\n      equipmentPlate.equipment === '0' ||\n      !equipmentPlate.equipmentPlate ||\n      equipmentPlate.equipmentPlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const equipmentInitialState = {\n        id: uuidv4(),\n        equipment: equipmentPlate.equipment,\n        equipmentEffectiveTime: equipmentPlate.equipmentEffectiveTime,\n        equipmentCorrectiveMaintenance: equipmentPlate.equipmentCorrectiveMaintenance,\n        equipmentPreventiveMaintenance: equipmentPlate.equipmentPreventiveMaintenance,\n        equipmentOutOfService: equipmentPlate.equipmentOutOfService,\n        equipmentWaiting: equipmentPlate.equipmentWaiting,\n        equipmentNoOperator: equipmentPlate.equipmentNoOperator,\n        equipmentInitialHorometer: equipmentPlate.equipmentInitialHorometer,\n        equipmentFinalHorometer: equipmentPlate.equipmentFinalHorometer,\n        equipmentPlate: equipmentPlate.equipmentPlate,\n      }\n      setEquipmentPlate(initialState) // Clear the object\n      setEquipmenPlatetList([...equipmentPlateListContext, equipmentInitialState])\n    }\n  }\n\n  const deleteEquipment = (id) => {\n    const newData = equipmentPlateListContext.filter((item) => item.id !== id)\n    setEquipmenPlatetList(newData)\n    removeEquipmentPlate(id)\n  }\n\n  const editEquipment = (id) => {\n    const selectedEquipmentPlate = equipmentPlateListContext.find((item) => item.id === id)\n    const selectedEquipment = basicQuery.equipment.find(\n      (equip) => equip.id.toString() === selectedEquipmentPlate.equipment.toString(),\n    )\n\n    setPlates(selectedEquipment.plate)\n\n    setEquipmentPlate({\n      equipment: selectedEquipmentPlate.equipment,\n      equipmentEffectiveTime: selectedEquipmentPlate.equipmentEffectiveTime,\n      equipmentCorrectiveMaintenance: selectedEquipmentPlate.equipmentCorrectiveMaintenance,\n      equipmentPreventiveMaintenance: selectedEquipmentPlate.equipmentPreventiveMaintenance,\n      equipmentOutOfService: selectedEquipmentPlate.equipmentOutOfService,\n      equipmentWaiting: selectedEquipmentPlate.equipmentWaiting,\n      equipmentNoOperator: selectedEquipmentPlate.equipmentNoOperator,\n      equipmentInitialHorometer: selectedEquipmentPlate.equipmentInitialHorometer,\n      equipmentFinalHorometer: selectedEquipmentPlate.equipmentFinalHorometer,\n      equipmentPlate: selectedEquipmentPlate.equipmentPlate,\n    })\n    deleteEquipment(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentPlate(equipmentPlateList)\n  }, [equipmentPlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipment\"\n            value={equipmentPlate.equipment ?? 0}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"equipmentPlate\"\n                value={equipmentPlate.equipmentPlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentEffectiveTime\"\n                    value={equipmentPlate.equipmentEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentCorrectiveMaintenance\"\n                    value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentPreventiveMaintenance\"\n                    value={equipmentPlate.equipmentPreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentOutOfService\"\n                    value={equipmentPlate.equipmentOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentWaiting\"\n                    value={equipmentPlate.equipmentWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentNoOperator\"\n                    value={equipmentPlate.equipmentNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentInitialHorometer\"\n                    value={equipmentPlate.equipmentInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"equipmentFinalHorometer\"\n                    value={equipmentPlate.equipmentFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipment()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentPlateListContext.length > 0 && equipmentPlateListContext[0].equipment && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantenimiento Programado (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {equipmentPlateListContext.map((item, index) => {\n              const equipment = basicQuery.equipment.find((equip) => {\n                return equip.id == item.equipment\n              })\n              const plate = equipment.plate.find((pl) => {\n                return pl.id.toString() === item.equipmentPlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{equipment.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentEffectiveTime}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentCorrectiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentPreventiveMaintenance}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentOutOfService}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentWaiting}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentNoOperator}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentInitialHorometer}</CTableDataCell>\n                  <CTableDataCell>{item.equipmentFinalHorometer}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteEquipment(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editEquipment(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default EquipmentPlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n  CFormTextarea,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst EquipmentWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    equipmentWorkForce: undefined,\n    equipmentWorkForceObservation: undefined,\n    equipmentSubWorkFront: undefined,\n    equipmentWorkFrontCharge: undefined,\n    equipmentWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [equipmentWorkForce, setEquipmentWorkForce] = useState(initialState)\n  const [equipmentWorkForceList, setEquipmentWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList: equipmentWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'equipmentWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'equipmentSubWorkFront' || e.target.id === 'equipmentWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setEquipmentWorkForce({\n          ...equipmentWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setEquipmentWorkForce({\n        ...equipmentWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerEquipmentnWorkForce = () => {\n    if (\n      !equipmentWorkForce.equipmentWorkForce ||\n      !equipmentWorkForce.equipmentWorkFrontCharge ||\n      !equipmentWorkForce.equipmentWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const equipmentWorkForceInitialState = {\n        id: uuidv4(),\n        equipmentWorkForce: equipmentWorkForce.equipmentWorkForce,\n        equipmentWorkForceObservation: equipmentWorkForce.equipmentWorkForceObservation,\n        equipmentSubWorkFront: equipmentWorkForce.equipmentSubWorkFront,\n        equipmentWorkFrontCharge: equipmentWorkForce.equipmentWorkFrontCharge,\n        equipmentWorkFrontQuantity: equipmentWorkForce.equipmentWorkFrontQuantity,\n      }\n      setEquipmentWorkForce(initialState) // Clear the object\n      setEquipmentWorkForceList([...equipmentWorkForceListContext, equipmentWorkForceInitialState])\n    }\n  }\n  const deleteEquipmentWorkForce = (id) => {\n    const newData = equipmentWorkForceListContext.filter((item) => item.id !== id)\n    setEquipmentWorkForceList(newData)\n\n    removeEquipmentWorkForce(id)\n  }\n\n  const editEquipmentWorkForce = (id) => {\n    const selectedEquipmentWorkForce = equipmentWorkForceListContext.find((item) => item.id === id)\n\n    if (selectedEquipmentWorkForce.equipmentSubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setEquipmentWorkForce({\n      equipmentWorkForce: selectedEquipmentWorkForce.equipmentWorkForce,\n      equipmentWorkForceObservation: selectedEquipmentWorkForce.equipmentWorkForceObservation,\n      equipmentSubWorkFront: selectedEquipmentWorkForce.equipmentSubWorkFront,\n      equipmentWorkFrontCharge: selectedEquipmentWorkForce.equipmentWorkFrontCharge,\n      equipmentWorkFrontQuantity: selectedEquipmentWorkForce.equipmentWorkFrontQuantity,\n    })\n    deleteEquipmentWorkForce(id)\n  }\n\n  useEffect(() => {\n    setEquipmentWorkForce({\n      ...equipmentWorkForce,\n      equipmentSubWorkFront: enableSubFrontWork\n        ? equipmentWorkForce.equipmentSubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeEquipmentWorkForce(equipmentWorkForceList)\n  }, [equipmentWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, equipo y cantidad para registrar el\n                  equipo\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"equipmentWorkForce\"\n            value={equipmentWorkForce.equipmentWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentSubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={equipmentWorkForce.equipmentSubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"equipmentWorkFrontCharge\"\n            value={equipmentWorkForce.equipmentWorkFrontCharge || ''}\n            label=\"Equipo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.equipment.map((equipmentCached) => {\n              return (\n                <option key={equipmentCached.id} value={equipmentCached.id}>\n                  {equipmentCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"equipmentWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={equipmentWorkForce.equipmentWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"equipmentWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={equipmentWorkForce.equipmentWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerEquipmentnWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {equipmentWorkForceListContext.length > 0 &&\n        equipmentWorkForceListContext[0].equipmentWorkForce && (\n          <>\n            <>\n              <CTable className=\"resume-table\">\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Equipo</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {equipmentWorkForceListContext.map((item, index) => {\n                    const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                      return workF.id == item.equipmentWorkForce\n                    })\n                    const selectedCharge = basicQuery.equipment.find((eq) => {\n                      return eq.id == item.equipmentWorkFrontCharge\n                    })\n                    return (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedWorkFront.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentSubWorkFront ?? 'N/A'}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{selectedCharge.name}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkFrontQuantity}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <span key={item.id}>{item.equipmentWorkForceObservation}</span>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                deleteEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              eliminar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {isCreatingMode && (\n                            <CButton\n                              className=\"btn-project-action\"\n                              onClick={() => {\n                                editEquipmentWorkForce(item.id)\n                              }}\n                            >\n                              Editar\n                            </CButton>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default EquipmentWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormTextarea,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useLocation } from 'react-router-dom'\n\nconst INCIDENT_LIMIT = 200\nconst NON_CONFORMITY_LIMIT = 200\n\nconst Incidents = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    incident: '',\n    nonConformity: '',\n  }\n\n  const [incident, setIncident] = useState(initialState)\n  const [incidentList, setIncidentList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIncident,\n    removeIncident,\n    incident: incidentContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    switch (e.target.id) {\n      case 'incident':\n        if (e.target.value.length <= INCIDENT_LIMIT)\n          setIncident({ ...incident, incident: e.target.value })\n        break\n      case 'nonConformity':\n        if (e.target.value.length <= NON_CONFORMITY_LIMIT)\n          setIncident({ ...incident, nonConformity: e.target.value })\n        break\n      default:\n        break\n    }\n  }\n\n  const registerIncident = () => {\n    const incidentInitialState = {\n      id: uuidv4(),\n      incident: incident.incident,\n      nonConformity: incident.nonConformity,\n    }\n    setIncident(initialState)\n    setIncidentList([...incidentContext, incidentInitialState])\n  }\n\n  const deleteIncident = (id) => {\n    const newData = incidentContext.filter((item) => item.id !== id)\n    setIncidentList(newData)\n    removeIncident(id)\n  }\n\n  const editIncident = (id) => {\n    const selectedIncident = incidentContext.find((item) => item.id === id)\n    setIncident({\n      incident: selectedIncident.incident,\n      nonConformity: selectedIncident.nonConformity,\n    })\n    deleteIncident(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIncident(incidentList)\n  }, [incidentList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe ingresar un incidente o una no conformidad para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormTextarea\n            id=\"incident\"\n            label=\"Incidentes lesiones y eventos\"\n            rows={3}\n            value={incident.incident}\n            text={`${incident?.incident?.length ?? 0} de ${INCIDENT_LIMIT} caracteres`}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <CFormTextarea\n            id=\"nonConformity\"\n            label=\"No conformidades o interferencias\"\n            rows={3}\n            text={`${incident?.nonConformity?.length ?? 0} de ${NON_CONFORMITY_LIMIT} caracteres`}\n            value={incident.nonConformity}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIncident()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {incidentContext.length > 0 && incidentContext[0].id && (\n        <>\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Incidente, lesión y evento</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">No conformidad o interferencia</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {incidentContext.map((item, index) => {\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{item.incident}</CTableDataCell>\n                    <CTableDataCell>{item.nonConformity}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIncident(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIncident(item.id)\n                          }}\n                        >\n                          editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Incidents\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectWorkForce: undefined,\n    indirectWorkForceOfferedNumber: undefined,\n    indirectWorkForceContractedNumber: undefined,\n    indirectWorkForceCertifiedNumber: undefined,\n    indirectWorkForceBreakNumber: undefined,\n    indirectWorkForceWorkNumber: undefined,\n    indirectWorkForceHHNumber: undefined,\n  }\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [indirectWorkForce, setIndirectWorkForce] = useState(initialState)\n  const [indirectWorkForceList, setIndirectWorkForceList] = useState([])\n  const [error, setError] = useState(false)\n\n  const {\n    storeIndirectWorkForceData,\n    removeIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'indirectWorkForce') {\n      setIndirectWorkForce(initialState) // Clear the object\n      setIndirectWorkForce({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setIndirectWorkForce({ ...indirectWorkForce, [e.target.id]: e.target.value })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (isCreatingMode) setIndirectWorkForceList(indirectWorkForceListContext)\n  // }, [indirectWorkForceListContext])\n\n  const registerIndirectWorkForce = () => {\n    if (!indirectWorkForce.indirectWorkForce) {\n      setError(true)\n    } else {\n      const indirectWorkForceInitialState = {\n        id: uuidv4(),\n        indirectWorkForce: indirectWorkForce.indirectWorkForce,\n        offeredNumber: indirectWorkForce.contractAdministratorOfferedNumber,\n        contractedNumber: indirectWorkForce.contractAdministratorContractedNumber,\n        certified: indirectWorkForce.contractAdministratorCertified,\n        breakNumber: indirectWorkForce.contractAdministratorBreakNumber,\n        workNumber: indirectWorkForce.contractAdministratorWorkNumber,\n        hh: indirectWorkForce.contractAdministratorHHNumber,\n      }\n      setIndirectWorkForce(initialState) // Clear the object\n      console.log('indirectWorkForceList', indirectWorkForceList)\n      setIndirectWorkForceList([\n        // ...indirectWorkForceList,\n        ...indirectWorkForceListContext,\n        indirectWorkForceInitialState,\n      ])\n    }\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeIndirectWorkForceData(indirectWorkForceList)\n  }, [indirectWorkForceList])\n\n  const deleteIndirectWorkForce = (id) => {\n    const newData = indirectWorkForceListContext.filter((item) => item.id !== id)\n    setIndirectWorkForceList(newData)\n\n    removeIndirectWorkForce(id)\n  }\n\n  const editIndirectWorkForce = (id) => {\n    const selectedIndirectWorkForce = indirectWorkForceListContext.find((item) => item.id === id)\n    setIndirectWorkForce({\n      indirectWorkForce: selectedIndirectWorkForce.indirectWorkForce,\n      contractAdministratorOfferedNumber: selectedIndirectWorkForce.offeredNumber,\n      contractAdministratorContractedNumber: selectedIndirectWorkForce.contractedNumber,\n      contractAdministratorCertified: selectedIndirectWorkForce.certified,\n      contractAdministratorBreakNumber: selectedIndirectWorkForce.breakNumber,\n      contractAdministratorWorkNumber: selectedIndirectWorkForce.workNumber,\n      contractAdministratorHHNumber: selectedIndirectWorkForce.hh,\n    })\n    deleteIndirectWorkForce(id)\n  }\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el cargo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"indirectWorkForce\"\n            label=\"Cargo\"\n            value={indirectWorkForce.indirectWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.indirectPersonal.map((indirectPersonalCached) => {\n              return (\n                <option key={indirectPersonalCached.id} value={indirectPersonalCached.id}>\n                  {indirectPersonalCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorOfferedNumber\"\n                    placeholder=\"N° Ofertado\"\n                    value={indirectWorkForce.contractAdministratorOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorContractedNumber\"\n                    placeholder=\"N° Contratados\"\n                    value={indirectWorkForce.contractAdministratorContractedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorCertified\"\n                    placeholder=\"Acreditados\"\n                    value={indirectWorkForce.contractAdministratorCertified || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorBreakNumber\"\n                    placeholder=\"N° Descanso\"\n                    value={indirectWorkForce.contractAdministratorBreakNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorWorkNumber\"\n                    placeholder=\"N° Obra\"\n                    value={indirectWorkForce.contractAdministratorWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"contractAdministratorHHNumber\"\n                    placeholder=\"HH (Turno)\"\n                    value={indirectWorkForce.contractAdministratorHHNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerIndirectWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n      {indirectWorkForceListContext.length > 0 &&\n        indirectWorkForceListContext[0].indirectWorkForce && (\n          <CTable className=\"resume-table\">\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Cargo</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Acreditados</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {indirectWorkForceListContext.map((item, index) => {\n                const charge = basicQuery.indirectPersonal.find((personal) => {\n                  return personal.id == item.indirectWorkForce\n                })\n                return (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{charge.name}</CTableDataCell>\n                    <CTableDataCell>{item.offeredNumber}</CTableDataCell>\n                    <CTableDataCell>{item.contractedNumber}</CTableDataCell>\n                    <CTableDataCell>{item.certified}</CTableDataCell>\n                    <CTableDataCell>{item.breakNumber}</CTableDataCell>\n                    <CTableDataCell>{item.workNumber}</CTableDataCell>\n                    <CTableDataCell>{item.hh}</CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            deleteIndirectWorkForce(item.id)\n                          }}\n                        >\n                          eliminar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {isCreatingMode && (\n                        <CButton\n                          className=\"btn-project-action\"\n                          onClick={() => {\n                            editIndirectWorkForce(item.id)\n                          }}\n                        >\n                          Editar\n                        </CButton>\n                      )}\n                    </CTableDataCell>\n                  </CTableRow>\n                )\n              })}\n            </CTableBody>\n          </CTable>\n        )}\n    </div>\n  )\n}\n\nexport default IndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst IndustrialWaterControl = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    aljibe: undefined,\n    aljibeCachimbaName: undefined,\n    aljibeQuantityTurns: undefined,\n    aljibeM3: undefined,\n    aljibePlate: undefined,\n    aljibeOfferedNumber: undefined,\n    aljibeCertifiedNumber: undefined,\n    aljibeWorkNumber: undefined,\n  }\n\n  const aljibeTotalsInitialState = {\n    aljibeCachimbaName: 0,\n    aljibeQuantityTurns: 0,\n    aljibeM3: 0,\n    aljibePlate: 0,\n    aljibeOfferedNumber: 0,\n    aljibeCertifiedNumber: 0,\n    aljibeWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [aljibe, setAlgibe] = useState(initialState)\n  const [aljibeList, setAlgibeList] = useState([])\n  const [aljibeTotals, setAlgibeTotals] = useState(aljibeTotalsInitialState)\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storealjibe,\n    removealjibe,\n    aljibeList: aljibeListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'aljibe') {\n      setAlgibe(initialState) // Clear the object\n      setAlgibe({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedAljibe = basicQuery.aljibe.find((alj) => {\n          return alj.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedAljibe.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'aljibePlate') {\n      if (e.target.value !== '0') {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      } else {\n        setAlgibe({ ...aljibe, [e.target.id]: '0' })\n      }\n    } else {\n      if (e.target.id === 'aljibeCachimbaName') {\n        setAlgibe({ ...aljibe, aljibeCachimbaName: e.target.value })\n      }\n      if (validate(e.target.value)) {\n        setAlgibe({ ...aljibe, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registeraljibe = () => {\n    if (\n      !aljibe.aljibe ||\n      aljibe.aljibe === '0' ||\n      !aljibe.aljibePlate ||\n      aljibe.aljibePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const aljibeInitialState = {\n        id: uuidv4(),\n        aljibe: aljibe.aljibe,\n        aljibeCachimbaName: aljibe.aljibeCachimbaName,\n        aljibeQuantityTurns: aljibe.aljibeQuantityTurns,\n        aljibeM3: aljibe.aljibeM3,\n        aljibePlate: aljibe.aljibePlate,\n        aljibeOfferedNumber: aljibe.aljibeOfferedNumber,\n        aljibeCertifiedNumber: aljibe.aljibeCertifiedNumber,\n        aljibeWorkNumber: aljibe.aljibeWorkNumber,\n      }\n      setAlgibe(initialState) // Clear the object\n      setAlgibeList([...aljibeListContext, aljibeInitialState])\n    }\n  }\n\n  const deletealjibe = (id) => {\n    const newData = aljibeListContext.filter((item) => item.id !== id)\n    setAlgibeList(newData)\n    removealjibe(id)\n  }\n\n  const editAljibe = (id) => {\n    const selectedAljibe = aljibeListContext.find((item) => item.id === id)\n    console.log('selectedAljibe', selectedAljibe)\n\n    const selectedAljibeData = basicQuery.aljibe.find((alj) => {\n      return alj.id.toString() === selectedAljibe.aljibe.toString()\n    })\n    setPlates(selectedAljibeData.plate)\n\n    setAlgibe({\n      aljibe: selectedAljibe.aljibe,\n      aljibeCachimbaName: selectedAljibe.aljibeCachimbaName,\n      aljibeQuantityTurns: selectedAljibe.aljibeQuantityTurns,\n      aljibeM3: selectedAljibe.aljibeM3,\n      aljibePlate: selectedAljibe.aljibePlate,\n      aljibeOfferedNumber: selectedAljibe.aljibeOfferedNumber,\n      aljibeCertifiedNumber: selectedAljibe.aljibeCertifiedNumber,\n      aljibeWorkNumber: selectedAljibe.aljibeWorkNumber,\n    })\n\n    deletealjibe(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storealjibe(aljibeList)\n  }, [aljibeList])\n\n  useEffect(() => {\n    let aljibeTotalsCounter = {\n      aljibeOfferedNumber: 0,\n      aljibeCertifiedNumber: 0,\n      aljibeM3: 0,\n      aljibeWorkNumber: 0,\n      aljibeQuantityTurns: 0,\n    }\n\n    for (let data of aljibeListContext) {\n      aljibeTotalsCounter = {\n        aljibeOfferedNumber:\n          Number(aljibeTotalsCounter.aljibeOfferedNumber) + Number(data.aljibeOfferedNumber ?? 0),\n        aljibeCertifiedNumber:\n          Number(aljibeTotalsCounter.aljibeCertifiedNumber) +\n          Number(data.aljibeCertifiedNumber ?? 0),\n        aljibeM3: Number(aljibeTotalsCounter.aljibeM3) + Number(data.aljibeM3 ?? 0),\n        aljibeWorkNumber:\n          Number(aljibeTotalsCounter.aljibeWorkNumber) + Number(data.aljibeWorkNumber ?? 0),\n        aljibeQuantityTurns:\n          Number(aljibeTotalsCounter.aljibeQuantityTurns) + Number(data.aljibeQuantityTurns ?? 0),\n      }\n    }\n    setAlgibeTotals(aljibeTotalsCounter)\n  }, [aljibeListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el aljibe y su patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Aljibe\"\n            id=\"aljibe\"\n            value={aljibe.aljibe || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.aljibe.map((aljibeCached) => {\n              return (\n                <option key={aljibeCached.id} value={aljibeCached.id}>\n                  {aljibeCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"aljibePlate\"\n                value={aljibe.aljibePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeOfferedNumber\"\n                    value={aljibe.aljibeOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCertifiedNumber\"\n                    value={aljibe.aljibeCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeWorkNumber\"\n                    value={aljibe.aljibeWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeCachimbaName\"\n                    value={aljibe.aljibeCachimbaName || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeQuantityTurns\"\n                    value={aljibe.aljibeQuantityTurns || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"aljibeM3\"\n                    value={aljibe.aljibeM3 || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registeraljibe()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {aljibeListContext.length > 0 && aljibeListContext[0].aljibe && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Aljibe</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Nombre Cachimba</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de vueltas</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Cantidad de m3</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {aljibeListContext.map((item, index) => {\n              const aljibe = basicQuery.aljibe.find((alj) => {\n                return alj.id == item.aljibe\n              })\n              const plate = aljibe.plate.find((pl) => {\n                return pl.id.toString() === item.aljibePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{aljibe.name ?? ''}</CTableDataCell>\n                  <CTableDataCell>{plate.label ?? ''}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCachimbaName ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeQuantityTurns ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeM3 ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.aljibeWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletealjibe(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editAljibe(item.id)\n                        }}\n                      >\n                        editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell></CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeQuantityTurns ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeM3 ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{aljibeTotals.aljibeWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default IndustrialWaterControl\n","import { React, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst MachineryWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machineryWorkForce: undefined,\n    machineryWorkForceObservation: undefined,\n    machinerySubWorkFront: undefined,\n    machineryWorkFrontCharge: undefined,\n    machineryWorkFrontQuantity: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machineryWorkForce, setMachineryWorkForce] = useState(initialState)\n  const [machineryWorkForceList, setMachineryWorkForceList] = useState([])\n  const [enableSubFrontWork, setEnableSubFrontWork] = useState(false)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    machineryWorkForceList: machineryWorkForceListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'machineryWorkForce') {\n      const selectedWorkFront = basicQuery.workFront.find((workFront) => {\n        return workFront.id.toString() === e.target.value.toString()\n      })\n      setEnableSubFrontWork(selectedWorkFront.hasSubFront)\n    }\n    if (e.target.id === 'machinerySubWorkFront' || e.target.id === 'machineryWorkFrontQuantity') {\n      if (validate(e.target.value)) {\n        setMachineryWorkForce({\n          ...machineryWorkForce,\n          [e.target.id]: e.target.value,\n        })\n      }\n    } else {\n      setMachineryWorkForce({\n        ...machineryWorkForce,\n        [e.target.id]: e.target.value,\n      })\n    }\n  }\n\n  const registerMachinerynWorkForce = () => {\n    if (\n      !machineryWorkForce.machineryWorkForce ||\n      !machineryWorkForce.machineryWorkFrontCharge ||\n      !machineryWorkForce.machineryWorkFrontQuantity\n    ) {\n      setError(true)\n    } else {\n      setEnableSubFrontWork(false)\n      const machineryWorkForceInitialState = {\n        id: uuidv4(),\n        machineryWorkForceObservation: machineryWorkForce.machineryWorkForceObservation,\n        machineryWorkForce: machineryWorkForce.machineryWorkForce,\n        machinerySubWorkFront: machineryWorkForce.machinerySubWorkFront,\n        machineryWorkFrontCharge: machineryWorkForce.machineryWorkFrontCharge,\n        machineryWorkFrontQuantity: machineryWorkForce.machineryWorkFrontQuantity,\n      }\n      setMachineryWorkForce(initialState) // Clear the object\n      setMachineryWorkForceList([...machineryWorkForceListContext, machineryWorkForceInitialState])\n    }\n  }\n\n  const deleteMachineryWorkForce = (id) => {\n    const newData = machineryWorkForceListContext.filter((item) => item.id !== id)\n    setMachineryWorkForceList(newData)\n\n    removeMachineryWorkForce(id)\n  }\n\n  const editMachineryWorkForce = (id) => {\n    const selectedMachineryWorkForce = machineryWorkForceListContext.find((item) => item.id === id)\n    if (selectedMachineryWorkForce.machinerySubWorkFront) {\n      setEnableSubFrontWork(true)\n    }\n    setMachineryWorkForce({\n      machineryWorkForce: selectedMachineryWorkForce.machineryWorkForce,\n      machineryWorkForceObservation: selectedMachineryWorkForce.machineryWorkForceObservation,\n      machinerySubWorkFront: selectedMachineryWorkForce.machinerySubWorkFront,\n      machineryWorkFrontCharge: selectedMachineryWorkForce.machineryWorkFrontCharge,\n      machineryWorkFrontQuantity: selectedMachineryWorkForce.machineryWorkFrontQuantity,\n    })\n    deleteMachineryWorkForce(id)\n  }\n\n  useEffect(() => {\n    setMachineryWorkForce({\n      ...machineryWorkForce,\n      machinerySubWorkFront: enableSubFrontWork\n        ? machineryWorkForce.machinerySubWorkFront\n        : undefined,\n    })\n  }, [enableSubFrontWork])\n\n  useEffect(() => {\n    if (!isViewMode) storeMachineryWorkForce(machineryWorkForceList)\n  }, [machineryWorkForceList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe completar los datos de frente de trabajo, maquinaria y cantidad para\n                  registrar la maquinaria.\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            label=\"Frente de trabajo\"\n            id=\"machineryWorkForce\"\n            value={machineryWorkForce.machineryWorkForce || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option>Seleccione</option>\n            {basicQuery.workFront.map((workfrontCached) => {\n              return (\n                <option key={workfrontCached.id} value={workfrontCached.id}>\n                  {workfrontCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          {enableSubFrontWork && (\n            <>\n              <br />\n              <CFormInput\n                type=\"text\"\n                id=\"machinerySubWorkFront\"\n                label=\"SubFrente de trabajo\"\n                value={machineryWorkForce.machinerySubWorkFront || ''}\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </>\n          )}\n          <br />\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machineryWorkFrontCharge\"\n            value={machineryWorkForce.machineryWorkFrontCharge || ''}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={'0'}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <br />\n          <CFormInput\n            type=\"text\"\n            id=\"machineryWorkFrontQuantity\"\n            label=\"Cantidad\"\n            value={machineryWorkForce.machineryWorkFrontQuantity || ''}\n            text=\"\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          />\n          <br />\n          <CFormTextarea\n            id=\"machineryWorkForceObservation\"\n            placeholder=\"Deja un comentario / observación\"\n            value={machineryWorkForce.machineryWorkForceObservation || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          ></CFormTextarea>\n          <br />\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinerynWorkForce()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryWorkForceListContext.length > 0 &&\n        machineryWorkForceListContext[0].machineryWorkForce && (\n          <>\n            <CTable className=\"resume-table\">\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">Frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Sub frente de trabajo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Maquinaria</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Cantidad</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Comentario</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {machineryWorkForceListContext.map((item, index) => {\n                  const selectedWorkFront = basicQuery.workFront.find((workF) => {\n                    return workF.id == item.machineryWorkForce\n                  })\n                  const selectedCharge = basicQuery.machinery.find((mac) => {\n                    return mac.id == item.machineryWorkFrontCharge\n                  })\n                  return (\n                    <CTableRow key={item.id}>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedWorkFront.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machinerySubWorkFront ?? 'N/A'}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{selectedCharge.name}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkFrontQuantity}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <span key={item.id}>{item.machineryWorkForceObservation}</span>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              deleteMachineryWorkForce(item.id)\n                            }}\n                          >\n                            eliminar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {isCreatingMode && (\n                          <CButton\n                            className=\"btn-project-action\"\n                            onClick={() => {\n                              editMachineryWorkForce(item.id)\n                            }}\n                          >\n                            Editar\n                          </CButton>\n                        )}\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })}\n              </CTableBody>\n            </CTable>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default MachineryWorkForce\n","import { React, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CFormInput,\n  CRow,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Machinery = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    machinery: undefined,\n    machineryOfferedNumber: undefined,\n    machineryCertifiedNumber: undefined,\n    machineryWorkNumber: undefined,\n  }\n\n  const machineryTotalsInitialState = {\n    machineryOfferedNumber: 0,\n    machineryCertifiedNumber: 0,\n    machineryWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [machinery, setMachinery] = useState(initialState)\n  const [machineryList, setMachineryList] = useState([])\n  const [machineryTotals, setMachineryTotals] = useState(machineryTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeMachinery,\n    removeMachinery,\n    machineryList: machineryListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n\n    if (e.target.id === 'machinery') {\n      setMachinery(initialState) // Clear the object\n      setMachinery({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setMachinery({ ...machinery, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerMachinery = () => {\n    if (!machinery.machinery) {\n      setError(true)\n    } else {\n      const machineryInitialState = {\n        id: uuidv4(),\n        machinery: machinery.machinery,\n        actions: {\n          machineryOfferedNumber: machinery.machineryOfferedNumber,\n          machineryCertifiedNumber: machinery.machineryCertifiedNumber,\n          machineryWorkNumber: machinery.machineryWorkNumber,\n        },\n      }\n      setMachinery(initialState) // Clear the object\n      setMachineryList([...machineryListContext, machineryInitialState])\n    }\n  }\n\n  const deleteMachinery = (id) => {\n    const newData = machineryListContext.filter((item) => item.id !== id)\n    setMachineryList(newData)\n\n    removeMachinery(id)\n  }\n\n  const editMachinery = (id) => {\n    const selectedMachinery = machineryListContext.find((item) => item.id === id)\n    setMachinery({\n      machinery: selectedMachinery.machinery,\n      machineryOfferedNumber: selectedMachinery.actions.machineryOfferedNumber,\n      machineryCertifiedNumber: selectedMachinery.actions.machineryCertifiedNumber,\n      machineryWorkNumber: selectedMachinery.actions.machineryWorkNumber,\n    })\n    deleteMachinery(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeMachinery(machineryList)\n  }, [machineryList])\n\n  useEffect(() => {\n    let machineryTotalsCounter = {\n      machineryOfferedNumber: 0,\n      machineryCertifiedNumber: 0,\n      machineryWorkNumber: 0,\n    }\n\n    for (let data of machineryListContext) {\n      machineryTotalsCounter = {\n        machineryOfferedNumber:\n          Number(machineryTotalsCounter.machineryOfferedNumber) +\n          Number(data.actions.machineryOfferedNumber ?? 0),\n        machineryCertifiedNumber:\n          Number(machineryTotalsCounter.machineryCertifiedNumber) +\n          Number(data.actions.machineryCertifiedNumber ?? 0),\n        machineryWorkNumber:\n          Number(machineryTotalsCounter.machineryWorkNumber) +\n          Number(data.actions.machineryWorkNumber ?? 0),\n      }\n    }\n    setMachineryTotals(machineryTotalsCounter)\n  }, [machineryListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {' '}\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar la maquinaria para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"machinery\"\n            value={machinery.machinery ?? 0}\n            label=\"Maquinaria\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.machinery.map((machineryCached) => {\n              return (\n                <option key={machineryCached.id} value={machineryCached.id}>\n                  {machineryCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryOfferedNumber\"\n                    value={machinery.machineryOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryCertifiedNumber\"\n                    value={machinery.machineryCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"machineryWorkNumber\"\n                    value={machinery.machineryWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerMachinery()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {machineryListContext.length > 0 && machineryListContext[0].machinery && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° maq en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {machineryListContext.map((item, index) => {\n              const charge = basicQuery.machinery.find((machinery) => {\n                return machinery.id == item.machinery\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.machineryWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deleteMachinery(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editMachinery(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryOfferedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryCertifiedNumber}</CTableDataCell>\n              <CTableDataCell>{machineryTotals.machineryWorkNumber}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Machinery\n","import { React, useEffect, useState } from 'react'\nimport { CFormInput, CFormTextarea, CRow, CCol } from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\n\nconst PhotoRecord = () => {\n  const MAX_IMAGES = 10\n\n  return (\n    <div className=\"work-force-report\">\n      <section>\n        {Array.from({ length: MAX_IMAGES }, (_, i) => (\n          <CRow key={i}>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"equipmentCorrectiveMaintenance\"\n                label={'Descripción'}\n                // value={equipmentPlate.equipmentCorrectiveMaintenance || ''}\n                text=\"\"\n                // onChange={(e) => {\n                //   onChangeData(e)\n                // }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"file\"\n                id=\"inputGroupFile03\"\n                aria-describedby=\"inputGroupFileAddon03\"\n                label=\"Fotografía\"\n                aria-label=\"Upload\"\n              />\n            </CCol>\n          </CRow>\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default PhotoRecord\n","import { React, useEffect, useState } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalDirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n\n  const initialState = {\n    directSubtotalOfferedNumber: undefined,\n    directSubtotalContractedNumber: undefined,\n    directSubtotalCertifiedNumber: undefined,\n    directSubtotalBreakNumber: undefined,\n    directSubtotalWorkNumber: undefined,\n    directSubtotalHHNumber: undefined,\n    directPreviusAccumulated: undefined,\n    directCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalDirectWorkForce,\n    directWorkForceList: directWorkForceListContext,\n    totalDirectWorkForce: totalDirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalDirectWorkForce, setTotalDirectWorkForce] = useState(initialState)\n  const [directAccumulatedHours, setDirectAccumulatedHours] = useState(0)\n  const [directAccumulatedOffered, setDirectAccumulatedOffered] = useState(0)\n  const [directAccumulatedContracted, setDirectAccumulatedContracted] = useState(0)\n  const [directAccumulatedCertified, setDirectAccumulatedCertified] = useState(0)\n  const [directAccumulatedBreaked, setDirectAccumulatedBreaked] = useState(0)\n  const [directAccumulatedWorked, setDirectAccumulatedWorked] = useState(0)\n  const [directAccumulatedPrevious, setDirectAccumulatedPrevious] = useState(0)\n  const [directAccumulatedActual, setDirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalDirectWorkForce({ ...totalDirectWorkForce, directPreviusAccumulated: e.target.value })\n      setDirectAccumulatedActual(Number(e.target.value) + Number(directAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalDirectWorkForce({\n      ...totalDirectWorkForce,\n      directCurrentAccumulated: directAccumulatedActual,\n    })\n  }, [directAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let directData of directWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(directData.hh)\n        offered = offered + Number(directData.offeredNumber)\n        contracted = contracted + Number(directData.contractedNumber)\n        certified = certified + Number(directData.certified)\n        breaked = breaked + Number(directData.breakNumber)\n        workekd = workekd + Number(directData.workNumber)\n      }\n      setDirectAccumulatedHours(hours)\n      setDirectAccumulatedOffered(offered)\n      setDirectAccumulatedContracted(contracted)\n      setDirectAccumulatedCertified(certified)\n      setDirectAccumulatedBreaked(breaked)\n      setDirectAccumulatedWorked(workekd)\n      setDirectAccumulatedActual(\n        Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      )\n      const data = {\n        directSubtotalOfferedNumber: offered,\n        directSubtotalContractedNumber: contracted,\n        directSubtotalCertifiedNumber: certified,\n        directSubtotalBreakNumber: breaked,\n        directSubtotalWorkNumber: workekd,\n        directSubstotalHHNumber: hours,\n        directPreviusAccumulated: totalDirectWorkForce.directPreviusAccumulated || 0,\n        directCurrentAccumulated:\n          Number(totalDirectWorkForce.directPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalDirectWorkForce(data)\n    } else {\n      setDirectAccumulatedHours(totalDirectWorkForceContext.directSubstotalHHNumber)\n      setDirectAccumulatedOffered(totalDirectWorkForceContext.directSubtotalOfferedNumber)\n      setDirectAccumulatedContracted(totalDirectWorkForceContext.directSubtotalContractedNumber)\n      setDirectAccumulatedCertified(totalDirectWorkForceContext.directSubtotalCertifiedNumber)\n      setDirectAccumulatedBreaked(totalDirectWorkForceContext.directSubtotalBreakNumber)\n      setDirectAccumulatedWorked(totalDirectWorkForceContext.directSubtotalWorkNumber)\n      setDirectAccumulatedActual(totalDirectWorkForceContext.directCurrentAccumulated)\n      setDirectAccumulatedPrevious(totalDirectWorkForceContext.directPreviusAccumulated)\n    }\n  }, [directWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalDirectWorkForce(totalDirectWorkForce)\n  }, [totalDirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal Directos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalOfferedNumber\"\n                value={directAccumulatedOffered || '0'}\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalContractedNumber\"\n                placeholder=\"N° Contratados\"\n                value={directAccumulatedContracted || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalCertifiedNumber\"\n                placeholder=\"Acreditados\"\n                value={directAccumulatedCertified || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalBreakNumber\"\n                placeholder=\"N° Descanso\"\n                value={directAccumulatedBreaked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalWorkNumber\"\n                placeholder=\"N° Obra\"\n                value={directAccumulatedWorked || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"directSubtotalHHNumber\"\n                placeholder=\"HH (Turno)\"\n                value={directAccumulatedHours || '0'}\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directPreviusAccumulated\"\n                // value={totalDirectWorkForce.directPreviusAccumulated || ''}\n                value={\n                  !isViewMode\n                    ? totalDirectWorkForce.directPreviusAccumulated || ''\n                    : directAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                placeholder=\"Total\"\n                text=\"\"\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH directos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"directCurrentAccumulated\"\n                value={directAccumulatedActual || '0'}\n                placeholder=\"Total\"\n                text=\"\"\n                disabled\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalDirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CFormInput,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { validate } from 'src/utils/validate'\nimport { useLocation } from 'react-router-dom'\n\nconst TotalIndirectWorkForce = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    indirectSubtotalOfferedNumber: undefined,\n    indirectSubtotalContractedNumber: undefined,\n    indirectSubtotalCertifiedNumber: undefined,\n    indirectSubtotalBreakNumber: undefined,\n    indirectSubtotalWorkNumber: undefined,\n    indirectSubtotalHHNumber: undefined,\n    indirectPreviusAccumulated: undefined,\n    indirectCurrentAccumulated: undefined,\n  }\n  const {\n    storeTotalIndirectWorkForce,\n    indirectWorkForceList: indirectWorkForceListContext,\n    totalIndirectWorkForce: totalIndirectWorkForceContext,\n  } = useRegisterDailyReportCompany()\n\n  const [totalIndirectWorkForce, setTotalIndirectWorkForce] = useState(initialState)\n  const [indirectAccumulatedHours, setIndirectAccumulatedHours] = useState(0)\n  const [indirectAccumulatedOffered, setIndirectAccumulatedOffered] = useState(0)\n  const [indirectAccumulatedContracted, setIndirectAccumulatedContracted] = useState(0)\n  const [indirectAccumulatedCertified, setIndirectAccumulatedCertified] = useState(0)\n  const [indirectAccumulatedBreaked, setIndirectAccumulatedBreaked] = useState(0)\n  const [indirectAccumulatedWorked, setIndirectAccumulatedWorked] = useState(0)\n  const [indirectAccumulatedPrevious, setIndirectAccumulatedPrevious] = useState(0)\n  const [indirectAccumulatedActual, setIndirectAccumulatedActual] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const onChangeData = (e) => {\n    if (validate(e.target.value)) {\n      setTotalIndirectWorkForce({\n        // Después debe cambiar por el state unico\n        ...totalIndirectWorkForce,\n        indirectPreviusAccumulated: e.target.value,\n      })\n      setIndirectAccumulatedActual(Number(e.target.value) + Number(indirectAccumulatedHours))\n    }\n  }\n\n  useEffect(() => {\n    setTotalIndirectWorkForce({\n      ...totalIndirectWorkForce,\n      indirectCurrentAccumulated: indirectAccumulatedActual,\n    })\n  }, [indirectAccumulatedActual])\n\n  useEffect(() => {\n    if (!isViewMode) {\n      let hours = 0\n      let offered = 0\n      let contracted = 0\n      let certified = 0\n      let breaked = 0\n      let workekd = 0\n      let index = 0\n      for (let indirectData of indirectWorkForceListContext) {\n        index++\n        setTotal(index)\n        hours = hours + Number(indirectData.hh)\n        offered = offered + Number(indirectData.offeredNumber)\n        contracted = contracted + Number(indirectData.contractedNumber)\n        certified = certified + Number(indirectData.certified)\n        breaked = breaked + Number(indirectData.breakNumber)\n        workekd = workekd + Number(indirectData.workNumber)\n      }\n      setIndirectAccumulatedHours(hours)\n      setIndirectAccumulatedOffered(offered)\n      setIndirectAccumulatedContracted(contracted)\n      setIndirectAccumulatedCertified(certified)\n      setIndirectAccumulatedBreaked(breaked)\n      setIndirectAccumulatedWorked(workekd)\n      setIndirectAccumulatedActual(\n        Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      )\n\n      const data = {\n        indirectSubtotalOfferedNumber: offered,\n        indirectSubtotalContractedNumber: contracted,\n        indirectSubtotalCertifiedNumber: certified,\n        indirectSubtotalBreakNumber: breaked,\n        indirectSubtotalWorkNumber: workekd,\n        indirectSubstotalHHNumber: hours,\n        indirectPreviusAccumulated: totalIndirectWorkForce.indirectPreviusAccumulated || 0,\n        indirectCurrentAccumulated:\n          Number(totalIndirectWorkForce.indirectPreviusAccumulated) + Number(hours),\n      }\n\n      setTotalIndirectWorkForce(data)\n    } else {\n      setIndirectAccumulatedHours(totalIndirectWorkForceContext.indirectSubstotalHHNumber)\n      setIndirectAccumulatedOffered(totalIndirectWorkForceContext.indirectSubtotalOfferedNumber)\n      setIndirectAccumulatedContracted(\n        totalIndirectWorkForceContext.indirectSubtotalContractedNumber,\n      )\n      setIndirectAccumulatedCertified(totalIndirectWorkForceContext.indirectSubtotalCertifiedNumber)\n      setIndirectAccumulatedBreaked(totalIndirectWorkForceContext.indirectSubtotalBreakNumber)\n      setIndirectAccumulatedWorked(totalIndirectWorkForceContext.indirectSubtotalWorkNumber)\n      setIndirectAccumulatedActual(totalIndirectWorkForceContext.indirectCurrentAccumulated)\n\n      setIndirectAccumulatedPrevious(totalIndirectWorkForceContext.indirectPreviusAccumulated)\n    }\n  }, [indirectWorkForceListContext])\n\n  useEffect(() => {\n    if (!isViewMode && total > 0) storeTotalIndirectWorkForce(totalIndirectWorkForce)\n  }, [totalIndirectWorkForce])\n\n  return (\n    <div className=\"work-force-report\">\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Ofertado</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Contratados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Acreditados</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Descanso</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">N° Obra</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">HH (Turno)</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Subtotal indirectos</CTableHeaderCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalOfferedNumber\"\n                value={indirectAccumulatedOffered || '0'}\n                disabled\n                placeholder=\"N° Ofertado\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalContractedNumber\"\n                value={indirectAccumulatedContracted || '0'}\n                disabled\n                placeholder=\"N° Contratados\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalCertifiedNumber\"\n                value={indirectAccumulatedCertified || '0'}\n                placeholder=\"Acreditados\"\n                disabled\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalBreakNumber\"\n                value={indirectAccumulatedBreaked || '0'}\n                disabled\n                placeholder=\"N° Descanso\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalWorkNumber\"\n                value={indirectAccumulatedWorked || '0'}\n                disabled\n                placeholder=\"N° Obra\"\n                text=\"\"\n              />\n            </CTableDataCell>\n            <CTableDataCell>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectSubtotalHHNumber\"\n                value={indirectAccumulatedHours || '0'}\n                disabled\n                placeholder=\"HH (Turno)\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Anterior</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectPreviusAccumulated\"\n                value={\n                  !isViewMode\n                    ? totalIndirectWorkForce.indirectPreviusAccumulated || ''\n                    : indirectAccumulatedPrevious\n                }\n                // indirectAccumulatedPrevious\n                disabled={isViewMode}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow>\n            <CTableHeaderCell scope=\"row\">Total HH Indirectos Acumulado Actual</CTableHeaderCell>\n            <CTableDataCell colSpan={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"indirectCurrentAccumulated\"\n                value={indirectAccumulatedActual || '0'}\n                disabled\n                placeholder=\"Total\"\n                text=\"\"\n              />\n            </CTableDataCell>\n          </CTableRow>\n        </CTableBody>\n      </CTable>\n    </div>\n  )\n}\n\nexport default TotalIndirectWorkForce\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router'\n\nconst VehiclePlate = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleEffectiveTime: undefined,\n    vehicleCorrectiveMaintenance: undefined,\n    vehiclePreventiveMaintenance: undefined,\n    vehicleOutOfService: undefined,\n    vehicleWaiting: undefined,\n    vehicleNoOperator: undefined,\n    vehicleInitialHorometer: undefined,\n    vehicleFinalHorometer: undefined,\n    vehiclePlate: undefined,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehiclePlate, setVehiclePlate] = useState(initialState)\n  const [vehiclePlateList, setVehiclePlateList] = useState([])\n  const [plates, setPlates] = useState()\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList: vehiclePlateListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlate({ [e.target.id]: e.target.value })\n      if (e.target.value !== '0') {\n        const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n          return vehic.id.toString() === e.target.value.toString()\n        })\n        setPlates(selectedVehicle.plate)\n      } else {\n        setPlates()\n      }\n    } else if (e.target.id === 'vehiclePlate') {\n      if (e.target.value !== '0') {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      } else {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: '0' })\n      }\n    } else {\n      if (validate(e.target.value)) {\n        setVehiclePlate({ ...vehiclePlate, [e.target.id]: e.target.value })\n      }\n    }\n  }\n\n  const registerVehiclePlate = () => {\n    if (\n      !vehiclePlate.vehicle ||\n      vehiclePlate.vehicle === '0' ||\n      !vehiclePlate.vehiclePlate ||\n      vehiclePlate.vehiclePlate === '0'\n    ) {\n      setError(true)\n    } else {\n      setPlates()\n      const vehiclePlateInitialState = {\n        id: uuidv4(),\n        vehicle: vehiclePlate.vehicle,\n        vehicleEffectiveTime: vehiclePlate.vehicleEffectiveTime,\n        vehicleCorrectiveMaintenance: vehiclePlate.vehicleCorrectiveMaintenance,\n        vehiclePreventiveMaintenance: vehiclePlate.vehiclePreventiveMaintenance,\n        vehicleOutOfService: vehiclePlate.vehicleOutOfService,\n        vehicleWaiting: vehiclePlate.vehicleWaiting,\n        vehicleNoOperator: vehiclePlate.vehicleNoOperator,\n        vehicleInitialHorometer: vehiclePlate.vehicleInitialHorometer,\n        vehicleFinalHorometer: vehiclePlate.vehicleFinalHorometer,\n        vehiclePlate: vehiclePlate.vehiclePlate,\n      }\n      setVehiclePlate(initialState) // Clear the object\n      setVehiclePlateList([...vehiclePlateListContext, vehiclePlateInitialState])\n    }\n  }\n\n  const deletevehiclePlate = (id) => {\n    const newData = vehiclePlateListContext.filter((item) => item.id !== id)\n    setVehiclePlateList(newData)\n    removeVehiclePlate(id)\n  }\n\n  const editVehiclePlate = (id) => {\n    const selectedVehiclePlate = vehiclePlateListContext.find((item) => item.id === id)\n\n    const selectedVehicle = basicQuery.vehicles.find((vehic) => {\n      return vehic.id.toString() === selectedVehiclePlate.vehicle.toString()\n    })\n    setPlates(selectedVehicle.plate)\n\n    setVehiclePlate({\n      vehicle: selectedVehiclePlate.vehicle,\n      vehicleEffectiveTime: selectedVehiclePlate.vehicleEffectiveTime,\n      vehicleCorrectiveMaintenance: selectedVehiclePlate.vehicleCorrectiveMaintenance,\n      vehiclePreventiveMaintenance: selectedVehiclePlate.vehiclePreventiveMaintenance,\n      vehicleOutOfService: selectedVehiclePlate.vehicleOutOfService,\n      vehicleWaiting: selectedVehiclePlate.vehicleWaiting,\n      vehicleNoOperator: selectedVehiclePlate.vehicleNoOperator,\n      vehicleInitialHorometer: selectedVehiclePlate.vehicleInitialHorometer,\n      vehicleFinalHorometer: selectedVehiclePlate.vehicleFinalHorometer,\n      vehiclePlate: selectedVehiclePlate.vehiclePlate,\n    })\n\n    deletevehiclePlate(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehiclePlate(vehiclePlateList)\n  }, [vehiclePlateList])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>\n                  Debe seleccionar el equipo y la patente para generar el registro\n                </CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            value={vehiclePlate.vehicle || 0}\n            label=\"Vehículo\"\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n\n          {plates && (\n            <>\n              <br />\n              <CFormSelect\n                aria-label=\"Default select example\"\n                label=\"Patente\"\n                id=\"vehiclePlate\"\n                value={vehiclePlate.vehiclePlate ?? 0}\n                onChange={(e) => {\n                  onChangeData(e)\n                }}\n              >\n                <option value={0}>Seleccione</option>\n                {plates.map((plate) => {\n                  return (\n                    <option key={plate.id} value={plate.id}>\n                      {plate.label}\n                    </option>\n                  )\n                })}\n              </CFormSelect>\n            </>\n          )}\n\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleEffectiveTime\"\n                    value={vehiclePlate.vehicleEffectiveTime || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCorrectiveMaintenance\"\n                    value={vehiclePlate.vehicleCorrectiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehiclePreventiveMaintenance\"\n                    value={vehiclePlate.vehiclePreventiveMaintenance || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOutOfService\"\n                    value={vehiclePlate.vehicleOutOfService || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWaiting\"\n                    value={vehiclePlate.vehicleWaiting || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleNoOperator\"\n                    value={vehiclePlate.vehicleNoOperator || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleInitialHorometer\"\n                    value={vehiclePlate.vehicleInitialHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleFinalHorometer\"\n                    value={vehiclePlate.vehicleFinalHorometer || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehiclePlate()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehiclePlateListContext.length > 0 && vehiclePlateListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\">Vehículo</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Patente</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Operativos (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención Correctiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Mantención preventiva (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Fuera de Servicio (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">En Espera (Hrs) </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Sin Operador (Hrs)</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Inicial </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Horometro Final </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehiclePlateListContext.map((item, index) => {\n              const vehicle = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              const plate = vehicle.plate.find((pl) => {\n                return pl.id.toString() === item.vehiclePlate.toString()\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{vehicle.name}</CTableDataCell>\n                  <CTableDataCell>{plate.label}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleEffectiveTime ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleCorrectiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehiclePreventiveMaintenance ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleOutOfService ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleWaiting ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleNoOperator ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleInitialHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.vehicleFinalHorometer ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehiclePlate(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehiclePlate(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default VehiclePlate\n","import { React, useState, useEffect } from 'react'\nimport {\n  CForm,\n  CFormInput,\n  CButton,\n  CFormSelect,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CToast,\n  CToastBody,\n} from '@coreui/react'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport { v4 as uuidv4 } from 'uuid'\nimport { validate } from 'src/utils/validate'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useLocation } from 'react-router-dom'\n\nconst Vehicle = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const isCreatingMode = currentLocation === '/informe-diario'\n\n  const initialState = {\n    vehicle: undefined,\n    vehicleOfferedNumber: undefined,\n    vehicleCertifiedNumber: undefined,\n    vehicleWorkNumber: undefined,\n  }\n\n  const vehicleTotalsInitialState = {\n    vehicleOfferedNumber: 0,\n    vehicleCertifiedNumber: 0,\n    vehicleWorkNumber: 0,\n  }\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const [vehicle, setVehicle] = useState(initialState)\n  const [vehicleList, setVehicleList] = useState([])\n  const [vehicleTotals, setVehicleTotals] = useState(vehicleTotalsInitialState)\n  const [error, setError] = useState(false)\n\n  const {\n    storeVehicle,\n    removeVehicle,\n    vehicleList: vehicleListContext,\n  } = useRegisterDailyReportCompany()\n\n  const onChangeData = (e) => {\n    setError(false)\n    if (e.target.id === 'vehicle') {\n      setVehicle(initialState) // Clear the object\n      setVehicle({ [e.target.id]: e.target.value })\n    }\n    if (validate(e.target.value)) {\n      setVehicle({ ...vehicle, [e.target.id]: e.target.value })\n    }\n  }\n\n  const registerVehicle = () => {\n    if (!vehicle.vehicle || vehicle.vehicle === '0') {\n      setError(true)\n    } else {\n      const vehicleInitialState = {\n        id: uuidv4(),\n        vehicle: vehicle.vehicle,\n        actions: {\n          vehicleOfferedNumber: vehicle.vehicleOfferedNumber,\n          vehicleCertifiedNumber: vehicle.vehicleCertifiedNumber,\n          vehicleWorkNumber: vehicle.vehicleWorkNumber,\n        },\n      }\n      setVehicle(initialState) // Clear the object\n      setVehicleList([...vehicleListContext, vehicleInitialState])\n    }\n  }\n\n  const deletevehicle = (id) => {\n    const newData = vehicleListContext.filter((item) => item.id !== id)\n    setVehicleList(newData)\n    removeVehicle(id)\n  }\n\n  const editVehicle = (id) => {\n    const selectedVehicle = vehicleListContext.find((item) => item.id === id)\n    setVehicle({\n      vehicle: selectedVehicle.vehicle,\n      vehicleOfferedNumber: selectedVehicle.actions.vehicleOfferedNumber,\n      vehicleCertifiedNumber: selectedVehicle.actions.vehicleCertifiedNumber,\n      vehicleWorkNumber: selectedVehicle.actions.vehicleWorkNumber,\n    })\n    deletevehicle(id)\n  }\n\n  useEffect(() => {\n    if (!isViewMode) storeVehicle(vehicleList)\n  }, [vehicleList])\n\n  useEffect(() => {\n    let vehicleTotalsCounter = {\n      vehicleOfferedNumber: 0,\n      vehicleCertifiedNumber: 0,\n      vehicleWorkNumber: 0,\n    }\n    for (let data of vehicleListContext) {\n      vehicleTotalsCounter = {\n        vehicleOfferedNumber:\n          Number(vehicleTotalsCounter.vehicleOfferedNumber) +\n          Number(data.actions.vehicleOfferedNumber ?? 0),\n        vehicleCertifiedNumber:\n          Number(vehicleTotalsCounter.vehicleCertifiedNumber) +\n          Number(data.actions.vehicleCertifiedNumber ?? 0),\n        vehicleWorkNumber:\n          Number(vehicleTotalsCounter.vehicleWorkNumber) +\n          Number(data.actions.vehicleWorkNumber ?? 0),\n      }\n    }\n    setVehicleTotals(vehicleTotalsCounter)\n  }, [vehicleListContext])\n\n  return (\n    <div className=\"work-force-report\">\n      {!isViewMode && (\n        <>\n          {error && (\n            <CToast\n              autohide={true}\n              visible={error}\n              color=\"danger\"\n              onClose={() => {\n                setError(false)\n              }}\n              className=\"text-white align-items-center\"\n            >\n              <div className=\"d-flex\">\n                <CToastBody>Debe seleccionar el equipo para generar el registro</CToastBody>\n              </div>\n            </CToast>\n          )}\n          <CFormSelect\n            aria-label=\"Default select example\"\n            id=\"vehicle\"\n            label=\"Vehículo\"\n            value={vehicle.vehicle || ''}\n            onChange={(e) => {\n              onChangeData(e)\n            }}\n          >\n            <option value={0}>Seleccione</option>\n            {basicQuery.vehicles.map((vehicleCached) => {\n              return (\n                <option key={vehicleCached.id} value={vehicleCached.id}>\n                  {vehicleCached.name}\n                </option>\n              )\n            })}\n          </CFormSelect>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">N° Vehículo oferta</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo Acreditado</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">N° Vehículo en Obra</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              <CTableRow>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleOfferedNumber\"\n                    value={vehicle.vehicleOfferedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleCertifiedNumber\"\n                    value={vehicle.vehicleCertifiedNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"vehicleWorkNumber\"\n                    value={vehicle.vehicleWorkNumber || ''}\n                    text=\"\"\n                    onChange={(e) => {\n                      onChangeData(e)\n                    }}\n                  />\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              registerVehicle()\n            }}\n          >\n            Registrar\n          </CButton>\n        </>\n      )}\n\n      {vehicleListContext.length > 0 && vehicleListContext[0].vehicle && (\n        <CTable className=\"resume-table\">\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos oferta</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos Acreditado</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">N° Vehículos en Obra</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {vehicleListContext.map((item, index) => {\n              const charge = basicQuery.vehicles.find((vehic) => {\n                return vehic.id == item.vehicle\n              })\n              return (\n                <CTableRow key={index}>\n                  <CTableDataCell>{charge.name}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleOfferedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>{item.actions.vehicleWorkNumber ?? 0}</CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          deletevehicle(item.id)\n                        }}\n                      >\n                        eliminar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {isCreatingMode && (\n                      <CButton\n                        className=\"btn-project-action\"\n                        onClick={() => {\n                          editVehicle(item.id)\n                        }}\n                      >\n                        Editar\n                      </CButton>\n                    )}\n                  </CTableDataCell>\n                </CTableRow>\n              )\n            })}\n            <CTableRow key={'total'}>\n              <CTableDataCell>Total</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleOfferedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleCertifiedNumber ?? 0}</CTableDataCell>\n              <CTableDataCell>{vehicleTotals.vehicleWorkNumber ?? 0}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      )}\n    </div>\n  )\n}\n\nexport default Vehicle\n","import { React } from 'react'\nimport Lottie from 'lottie-react'\nimport loadingjson from '../lottie/loading.json'\nconst Loading = () => {\n  return <Lottie animationData={loadingjson} loop={true} width={20} className=\"loading\" />\n}\n\nexport default Loading\n","import { useMutation } from '@tanstack/react-query'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\nimport useRegisterGeneralData from './useRegisterGeneralData'\n\nconst useRegisterDailyReport = () => {\n  const { getProject, getContract } = useRegisterGeneralData()\n  const projectLS = JSON.parse(getProject())\n  const contractLS = JSON.parse(getContract())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    directWorkForceList,\n    totalIndirectWorkForce,\n    totalDirectWorkForce,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    vehicleWorkForceList,\n    incident,\n    comment,\n    machineryList,\n    equipmentList,\n    vehicleList,\n    activityList,\n    asarcoMachineryList,\n    equipmentPlateList,\n    vehiclePlateList,\n    aljibeList,\n    clearContext,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  const { mutate } = useMutation({\n    mutationFn: async (newTodo) =>\n      axios.post('https://pyg-production.up.railway.app/api/v1/reports', newTodo),\n    onSuccess: () => {\n      setLoading(false)\n      setSuccess(true)\n      clearContext()\n    },\n    onError: (err) => {\n      setLoading(false)\n      setSuccess(false)\n      setError('Recuerda rellenar todos los campos')\n    },\n  })\n\n  let equipList = []\n  let equip = {}\n  for (let eq of equipmentList) {\n    equip = {}\n    equip.equipment = eq.equipment\n    equip.actions = JSON.stringify(eq.actions)\n    equipList.push(equip)\n  }\n\n  let machinList = []\n  let machin = {}\n  for (let ma of machineryList) {\n    machin = {}\n    machin.machinery = ma.machinery\n    machin.actions = JSON.stringify(ma.actions)\n    machinList.push(machin)\n  }\n\n  let vehicList = []\n  let vehic = {}\n  for (let ve of vehicleList) {\n    vehic = {}\n    vehic.vehicle = ve.vehicle\n    vehic.actions = JSON.stringify(ve.actions)\n    vehicList.push(vehic)\n  }\n\n  const clearData = () => {\n    clearContext()\n  }\n\n  const registerData = async () => {\n    setLoading(true)\n    setError()\n    setSuccess(false)\n    const data = mutate({\n      projectId: projectLS.id,\n      contractId: contractLS.id,\n      company, // 1\n      indirectWorkForceList, // 2\n      totalIndirectWorkForce, // 3\n      directWorkForceList, // 4\n      totalDirectWorkForce, // 5\n      directDotationWorkForceList, // 7\n      machineryList: machinList, // 9\n      machineryWorkForceList, // 10\n      equipmentList: equipList, // 11\n      equipmentWorkForceList, // 12\n      vehicleList: vehicList, // 13\n      vehiclePlateList,\n      activityList, // 15\n      comment, // 16\n      // 17 (graficos)\n      incident, // 18 //\n      asarcoMachineryList, // 9\n      equipmentPlateList, // 11\n      aljibeList, // 16\n      graphList,\n    })\n    return data\n  }\n\n  return { registerData, loading, error, success, clearData }\n}\n\nexport default useRegisterDailyReport\n","import { useContext } from 'react'\nimport { DailyReportContext } from 'src/context/DailyReportContext'\n\nconst useRegisterDailyReportCompany = () => {\n  const {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  } = useContext(DailyReportContext)\n\n  return {\n    company,\n    storeCompanyData,\n    storeIndirectWorkForceData,\n    storeDirectWorkForce,\n    removeDirectWorkForce,\n    directWorkForceList,\n    indirectWorkForceList,\n    removeIndirectWorkForce,\n    storeTotalIndirectWorkForce,\n    totalIndirectWorkForce,\n    storeTotalDirectWorkForce,\n    totalDirectWorkForce,\n    storeIndirectDotationWorkForceData,\n    removeIndirectDotationWorkForce,\n    indirectDotationWorkForceList,\n    storeDirectDotationWorkForceData,\n    removeDirectDotationWorkForce,\n    directDotationWorkForceList,\n    storeDotationWorkfoce,\n    machineryWorkForceList,\n    storeMachineryWorkForce,\n    removeMachineryWorkForce,\n    storeEquipmentWorkForce,\n    removeEquipmentWorkForce,\n    equipmentWorkForceList,\n    storeVehicleWorkForce,\n    removeVehicleWorkForce,\n    vehicleWorkForceList,\n    storeComment,\n    comment,\n    storeIncident,\n    incident,\n    removeIncident,\n    storeMachinery,\n    removeMachinery,\n    machineryList,\n    storeEquipment,\n    removeEquipment,\n    equipmentList,\n    storeVehicle,\n    removeVehicle,\n    vehicleList,\n    storeActivity,\n    removeActivity,\n    activityList,\n    storeAsarcoMachinery,\n    removeAsarcoMachinery,\n    asarcoMachineryList,\n    storeEquipmentPlate,\n    removeEquipmentPlate,\n    equipmentPlateList,\n    storeVehiclePlate,\n    removeVehiclePlate,\n    vehiclePlateList,\n    storealjibe,\n    removealjibe,\n    aljibeList,\n    clearContext,\n    storeGraphs,\n    graphList,\n  }\n}\n\nexport default useRegisterDailyReportCompany\n","export const validate = (s) => {\n  var rgx = /^[0-9]*\\.?[0-9]*$/\n  return s.match(rgx)\n}\n"],"names":["Activities","_activity$activityFro","_activity$activityDis","currentLocation","useLocation","pathname","isViewMode","includes","isCreatingMode","initialState","activityFrontWork","undefined","primaveraId","activityName","activityDiscipline","activityTotalAmount","activityPreviousAcumulatedAmount","activityActualShiftQuantity","activityAccumulatedAcvancePercent","activityUnit","activityHoursSpendPrevius","activityHoursSpendShift","activityHoursAccumulated","getData","useGetCachedQueryData","basicQuery","activity","setActivity","useState","activityList","setActivityList","error","setError","storeActivity","removeActivity","activityListContext","useRegisterDailyReportCompany","onChangeData","e","target","id","value","validate","useEffect","realHpurs","Number","prevHours","previousHh","calc","toFixed","deleteActivity","newData","filter","item","_jsxs","className","children","_Fragment","_jsx","CToast","autohide","visible","color","onClose","CToastBody","CFormSelect","label","onChange","workFront","map","workFrontCached","name","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","CTableDataCell","CFormInput","type","text","disabled","CButton","onClick","registerActivity","activityInitialState","uuidv4","length","index","charge","find","work","selectedActivity","editActivity","AsarcoMachinery","_asarcoMachinery$mach","_asarcoMachinery$mach2","pieChartElement","useRef","machinery","asarcoMachineryEffectiveTime","asarcoMachineryUnscheduleMaintenance","asarcoMachineryScheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","asarcoMachineryHorometer","asarcoMachineryOpperationalLoss","asarcoMachineryScheduleDelay","machineryPlate","asarcoMachinery","setAsarcoMachinery","asarcoMachineryList","setAsarcoMachineryList","asarcoMachineryTotals","setAsarcoMachineryTotals","plates","setPlates","imagenPieChart","setImagenPieChart","pieChartData","setPieChartData","storeAsarcoMachinery","removeAsarcoMachinery","asarcoMachineryListContext","storeGraphs","selectedMachinery","mac","toString","plate","deleteAsarcoMachinery","asarcoMachineryTotalsCounter","data","_data$asarcoMachinery","_data$asarcoMachinery2","_data$asarcoMachinery3","_data$asarcoMachinery4","_data$asarcoMachinery5","_data$asarcoMachinery6","_data$asarcoMachinery7","_data$asarcoMachinery8","toPng","current","cacheBust","then","dataUrl","catch","err","machineryCached","registerAsarcoMachinery","asarcoMachineryInitialState","pl","selectedAsarcoMachinery","editAsarcoMachinery","ref","Chart","chartType","width","height","Comments","comment","setComment","storeComment","commentContext","CFormTextarea","rows","CompanyReport","storeCompanyData","company","registerData","useRegisterDailyReport","getProject","getContract","useRegisterGeneralData","contractLS","JSON","parse","CForm","CRow","CCol","sm","dailyReportDate","placeholder","dailyReportNumber","dailyReportContratistName","dailyReportContratistNumber","code","dailyReportContractName","dailyReportContractManagerName","dailyReportWeather","weather","dailyReportDirectPersonalShift","direct_staff_shift","direct_staf","dailyReportDirectPersonalHours","dailyReportDirectPersonalJourney","shifts","shift","dailyReportIndirectPersonalShift","indirect_staff_shift","indirect_staf","dailyReportIndirectPersonalHours","dailyReportIndirectPersonalJourney","DirectDotationWorkForce","directWorkFront","directDotationWorkForceObservation","directSubWorkFront","directWorkFrontCharge","directWorkFrontQuantity","directDotationWorkForce","setDirectDotationWorkForce","directDotationWorkForceList","setDirectDotationWorkForceList","enableSubFrontWork","setEnableSubFrontWork","storeDirectDotationWorkForceData","removeDirectDotationWorkForce","directDotationWorkForceListContext","selectedWorkFront","hasSubFront","deletedirectDotationWorkForce","workfrontCached","directPersonal","directPersonalCached","registerDirectDotationWorkForce","directDotationWorkForceInitialState","_item$directSubWorkFr","workF","selectedCharge","selectDirectDotationWorkForce","editDirectDotationWorkForce","DirectWorkForce","columnChartElement","initialStatee","directWorkForce","directWorkForceOfferedNumber","directWorkForceContractedNumber","directWorkForceCertifiedNumber","directWorkForceBreakNumber","directWorkForceWorkNumber","directWorkForceHHNumber","setDirectWorkForce","directWorkForceList","setDirectWorkForceList","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","imagenColumnChart","setImagenColumnChart","barGraphData","setBarGraphData","role","storeDirectWorkForce","removeDirectWorkForce","directWorkForceListContext","deleteDirectWorkForce","offered","worked","offeredNumber","workNumber","registerDirectWorkForce","directWorkForceInitialState","contractedNumber","certified","breakNumber","hh","personal","selectedDirectWorkForce","editDirectWorkForce","style","EquipmentMachinery","_equipment$equipment","_equipmentTotals$equi","_equipmentTotals$equi2","_equipmentTotals$equi3","equipment","equipmentOfferedNumber","equipmentCertifiedNumber","equipmentWorkNumber","setEquipment","equipmentList","setEquipmentList","equipmentTotals","setEquipmentTotals","storeEquipment","removeEquipment","equipmentListContext","deleteEquipment","equipmentTotalsInitialStateCounter","_data$actions$equipme","_data$actions$equipme2","_data$actions$equipme3","actions","equipmentCached","registerEquipment","equipmentInitialState","_item$actions$equipme","_item$actions$equipme2","_item$actions$equipme3","selectedEquipment","editEquipment","EquipmentPlate","_equipmentPlate$equip","_equipmentPlate$equip2","equipmentEffectiveTime","equipmentCorrectiveMaintenance","equipmentPreventiveMaintenance","equipmentOutOfService","equipmentWaiting","equipmentNoOperator","equipmentInitialHorometer","equipmentFinalHorometer","equipmentPlate","setEquipmentPlate","equipmentPlateList","setEquipmenPlatetList","storeEquipmentPlate","removeEquipmentPlate","equipmentPlateListContext","equip","selectedEquipmentPlate","EquipmentWorkForce","equipmentWorkForce","equipmentWorkForceObservation","equipmentSubWorkFront","equipmentWorkFrontCharge","equipmentWorkFrontQuantity","setEquipmentWorkForce","equipmentWorkForceList","setEquipmentWorkForceList","storeEquipmentWorkForce","removeEquipmentWorkForce","equipmentWorkForceListContext","deleteEquipmentWorkForce","registerEquipmentnWorkForce","equipmentWorkForceInitialState","_item$equipmentSubWor","eq","selectedEquipmentWorkForce","editEquipmentWorkForce","Incidents","_incident$incident$le","_incident$incident","_incident$nonConformi","_incident$nonConformi2","incident","nonConformity","setIncident","incidentList","setIncidentList","storeIncident","removeIncident","incidentContext","deleteIncident","concat","registerIncident","incidentInitialState","selectedIncident","editIncident","IndirectWorkForce","indirectWorkForce","indirectWorkForceOfferedNumber","indirectWorkForceContractedNumber","indirectWorkForceCertifiedNumber","indirectWorkForceBreakNumber","indirectWorkForceWorkNumber","indirectWorkForceHHNumber","setIndirectWorkForce","indirectWorkForceList","setIndirectWorkForceList","storeIndirectWorkForceData","removeIndirectWorkForce","indirectWorkForceListContext","deleteIndirectWorkForce","indirectPersonal","indirectPersonalCached","contractAdministratorOfferedNumber","contractAdministratorContractedNumber","contractAdministratorCertified","contractAdministratorBreakNumber","contractAdministratorWorkNumber","contractAdministratorHHNumber","registerIndirectWorkForce","indirectWorkForceInitialState","console","log","selectedIndirectWorkForce","editIndirectWorkForce","IndustrialWaterControl","_aljibe$aljibePlate","_aljibeTotals$aljibeQ","_aljibeTotals$aljibeM","_aljibeTotals$aljibeO","_aljibeTotals$aljibeC","_aljibeTotals$aljibeW","aljibe","aljibeCachimbaName","aljibeQuantityTurns","aljibeM3","aljibePlate","aljibeOfferedNumber","aljibeCertifiedNumber","aljibeWorkNumber","setAlgibe","aljibeList","setAlgibeList","aljibeTotals","setAlgibeTotals","storealjibe","removealjibe","aljibeListContext","selectedAljibe","alj","deletealjibe","aljibeTotalsCounter","_data$aljibeOfferedNu","_data$aljibeCertified","_data$aljibeM","_data$aljibeWorkNumbe","_data$aljibeQuantityT","aljibeCached","registeraljibe","aljibeInitialState","_aljibe$name","_plate$label","_item$aljibeCachimbaN","_item$aljibeQuantityT","_item$aljibeM","_item$aljibeOfferedNu","_item$aljibeCertified","_item$aljibeWorkNumbe","selectedAljibeData","editAljibe","MachineryWorkForce","machineryWorkForce","machineryWorkForceObservation","machinerySubWorkFront","machineryWorkFrontCharge","machineryWorkFrontQuantity","setMachineryWorkForce","machineryWorkForceList","setMachineryWorkForceList","storeMachineryWorkForce","removeMachineryWorkForce","machineryWorkForceListContext","deleteMachineryWorkForce","registerMachinerynWorkForce","machineryWorkForceInitialState","_item$machinerySubWor","selectedMachineryWorkForce","editMachineryWorkForce","Machinery","_machinery$machinery","machineryOfferedNumber","machineryCertifiedNumber","machineryWorkNumber","setMachinery","machineryList","setMachineryList","machineryTotals","setMachineryTotals","storeMachinery","removeMachinery","machineryListContext","deleteMachinery","machineryTotalsCounter","_data$actions$machine","_data$actions$machine2","_data$actions$machine3","registerMachinery","machineryInitialState","_item$actions$machine","_item$actions$machine2","_item$actions$machine3","editMachinery","PhotoRecord","Array","from","_","i","TotalDirectWorkForce","directSubtotalOfferedNumber","directSubtotalContractedNumber","directSubtotalCertifiedNumber","directSubtotalBreakNumber","directSubtotalWorkNumber","directSubtotalHHNumber","directPreviusAccumulated","directCurrentAccumulated","storeTotalDirectWorkForce","totalDirectWorkForce","totalDirectWorkForceContext","setTotalDirectWorkForce","directAccumulatedHours","setDirectAccumulatedHours","directAccumulatedOffered","setDirectAccumulatedOffered","directAccumulatedContracted","setDirectAccumulatedContracted","directAccumulatedCertified","setDirectAccumulatedCertified","directAccumulatedBreaked","setDirectAccumulatedBreaked","directAccumulatedWorked","setDirectAccumulatedWorked","directAccumulatedPrevious","setDirectAccumulatedPrevious","directAccumulatedActual","setDirectAccumulatedActual","total","setTotal","directSubstotalHHNumber","hours","contracted","breaked","workekd","directData","colSpan","TotalIndirectWorkForce","indirectSubtotalOfferedNumber","indirectSubtotalContractedNumber","indirectSubtotalCertifiedNumber","indirectSubtotalBreakNumber","indirectSubtotalWorkNumber","indirectSubtotalHHNumber","indirectPreviusAccumulated","indirectCurrentAccumulated","storeTotalIndirectWorkForce","totalIndirectWorkForce","totalIndirectWorkForceContext","setTotalIndirectWorkForce","indirectAccumulatedHours","setIndirectAccumulatedHours","indirectAccumulatedOffered","setIndirectAccumulatedOffered","indirectAccumulatedContracted","setIndirectAccumulatedContracted","indirectAccumulatedCertified","setIndirectAccumulatedCertified","indirectAccumulatedBreaked","setIndirectAccumulatedBreaked","indirectAccumulatedWorked","setIndirectAccumulatedWorked","indirectAccumulatedPrevious","setIndirectAccumulatedPrevious","indirectAccumulatedActual","setIndirectAccumulatedActual","indirectSubstotalHHNumber","indirectData","VehiclePlate","_vehiclePlate$vehicle","vehicle","vehicleEffectiveTime","vehicleCorrectiveMaintenance","vehiclePreventiveMaintenance","vehicleOutOfService","vehicleWaiting","vehicleNoOperator","vehicleInitialHorometer","vehicleFinalHorometer","vehiclePlate","setVehiclePlate","vehiclePlateList","setVehiclePlateList","storeVehiclePlate","removeVehiclePlate","vehiclePlateListContext","selectedVehicle","vehicles","vehic","deletevehiclePlate","vehicleCached","registerVehiclePlate","vehiclePlateInitialState","_item$vehicleEffectiv","_item$vehicleCorrecti","_item$vehiclePreventi","_item$vehicleOutOfSer","_item$vehicleWaiting","_item$vehicleNoOperat","_item$vehicleInitialH","_item$vehicleFinalHor","selectedVehiclePlate","editVehiclePlate","Vehicle","_vehicleTotals$vehicl","_vehicleTotals$vehicl2","_vehicleTotals$vehicl3","vehicleOfferedNumber","vehicleCertifiedNumber","vehicleWorkNumber","setVehicle","vehicleList","setVehicleList","vehicleTotals","setVehicleTotals","storeVehicle","removeVehicle","vehicleListContext","deletevehicle","vehicleTotalsCounter","_data$actions$vehicle","_data$actions$vehicle2","_data$actions$vehicle3","registerVehicle","vehicleInitialState","_item$actions$vehicle","_item$actions$vehicle2","_item$actions$vehicle3","editVehicle","Loading","Lottie","animationData","loadingjson","loop","projectLS","loading","setLoading","success","setSuccess","vehicleWorkForceList","clearContext","graphList","useContext","DailyReportContext","mutate","useMutation","mutationFn","async","axios","post","newTodo","onSuccess","onError","equipList","stringify","push","machinList","machin","ma","vehicList","ve","projectId","contractId","clearData","storeIndirectDotationWorkForceData","removeIndirectDotationWorkForce","indirectDotationWorkForceList","storeDotationWorkfoce","storeVehicleWorkForce","removeVehicleWorkForce","s","match"],"sourceRoot":""}