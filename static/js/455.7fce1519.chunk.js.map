{"version":3,"file":"static/js/455.7fce1519.chunk.js","mappings":"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","sources":["components/DailyReportEditCollapse.jsx","pages/DailyReportEditPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport CompanyReport from './daily-report/company-report'\nimport IndirectWorkForce from './daily-report/indirect-work-force'\nimport TotalIndirectWorkForce from './daily-report/total-indirect-work-force'\nimport TotalDirectWorkForce from './daily-report/total-direct-work-force'\nimport IndirectDotationWorkForce from './daily-report/indirect-dotation-work-force'\nimport DirectDotationWorkForce from './daily-report/direct-dotation-work-force'\nimport DotationWorkForce from './daily-report/dotation-work-force'\nimport Machinery from './daily-report/machinery'\nimport MachineryWorkForce from './daily-report/machinery-work-force'\nimport EquipmentMachinery from './daily-report/equipment-machinery'\nimport EquipmentWorkForce from './daily-report/equipment-work-force'\nimport Vehicle from './daily-report/vehicle'\nimport VehicleWorkForce from './daily-report/vehicle-work-force'\nimport Activities from './daily-report/activities'\nimport Comments from './daily-report/comments'\nimport Graphs from './daily-report/graphs'\nimport Incidents from './daily-report/incidents'\nimport DirectWorkForce from './daily-report/direct-work-force'\nimport useRegisterDailyReport from 'src/hooks/useRegisterDailyReport'\nimport AsarcoMachinery from './daily-report/asarco-machinery'\nimport EquipmentPlate from './daily-report/equipment-plate'\nimport VehiclePlate from './daily-report/vehicle-plate'\nimport IndustrialWaterControl from './daily-report/industrial-water-control'\nimport PhotoRecord from './daily-report/photo-record'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport ModalSendDailyReport from './ModalSendDailyReport'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport Pdf from './Pdf'\nimport useRegisterDailyReportCompany from 'src/hooks/useRegisterDailyReportCompany'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport Loading from './loading'\n\nimport { Chart } from 'react-google-charts'\nimport { toPng } from 'html-to-image'\n\nconst DailyReportEditCollapse = () => {\n  const currentLocation = useLocation().pathname\n  const isViewMode = currentLocation.includes('/view')\n  const navigate = useNavigate()\n  const columnChartElement = useRef(null)\n  const pieChartElement = useRef(null)\n\n  const [visibleSendDailyReportModal, setVisibleSendDailyReportModal] = useState(false)\n  const {\n    company,\n    indirectWorkForceList,\n    totalIndirectWorkForce,\n    directWorkForceList,\n    totalDirectWorkForce,\n    asarcoMachineryList,\n    machineryList,\n    equipmentList,\n    equipmentPlateList,\n    vehicleList,\n    vehiclePlateList,\n    activityList,\n    aljibeList,\n    comment,\n    incident,\n    directDotationWorkForceList,\n    machineryWorkForceList,\n    equipmentWorkForceList,\n    graphList,\n  } = useRegisterDailyReportCompany()\n  const [imagenColumnChart, setImagenColumnChart] = useState()\n  const [imagenPieChart, setImagenPieChart] = useState()\n\n  const [isLoading, setIsloading] = useState(false)\n  const [blobData, setBlobData] = useState()\n  const [url, setUrl] = useState()\n\n  const [totalPlanedDotation, setTotalPlanedDotation] = useState(0)\n  const [totalWorkDotation, setTotalWorkDotation] = useState(0)\n  const [showDotationChart, setShowDotationChart] = useState(false)\n\n  useEffect(() => {\n    if (\n      totalDirectWorkForce.directSubtotalOfferedNumber &&\n      totalDirectWorkForce.directSubtotalWorkNumber\n    ) {\n      setShowDotationChart(true)\n    }\n    setTotalPlanedDotation(totalDirectWorkForce.directSubtotalOfferedNumber)\n    setTotalWorkDotation(totalDirectWorkForce.directSubtotalWorkNumber)\n  }, [totalDirectWorkForce])\n\n  const [effectiveTime, setEffectiveTime] = useState(0)\n  const [scheduleMaintimeTime, setScheduleMaintimeTime] = useState(0)\n  const [scheduleDelay, setScheduleDelay] = useState(0)\n  const [opperationalLoss, setOpperationalLoss] = useState(0)\n  const [unscheduleMaintimeTime, setUnscheduleMaintimeTime] = useState(0)\n  const [unscheduleDelay, setUnscheduleDelay] = useState(0)\n  const [reserves, setReserves] = useState(0)\n  const [totals, setTotals] = useState(0)\n  const [showAsarcoChart, setShowAsarcoChart] = useState(false)\n  useEffect(() => {\n    for (let asarcoData of asarcoMachineryList) {\n      setShowAsarcoChart(true)\n      setTotals(\n        totals +\n          Number(asarcoData.asarcoMachineryEffectiveTime) +\n          Number(asarcoData.asarcoMachineryScheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryScheduleDelay) +\n          Number(asarcoData.asarcoMachineryOpperationalLoss) +\n          Number(asarcoData.asarcoMachineryUnscheduleMaintenance) +\n          Number(asarcoData.asarcoMachineryUnscheduleDelay) +\n          Number(asarcoData.asarcoMachineryReserves),\n      )\n      setEffectiveTime(effectiveTime + Number(asarcoData.asarcoMachineryEffectiveTime))\n      setScheduleMaintimeTime(\n        scheduleMaintimeTime + Number(asarcoData.asarcoMachineryScheduleMaintenance),\n      )\n      setScheduleDelay(scheduleDelay + Number(asarcoData.asarcoMachineryScheduleDelay))\n      setOpperationalLoss(opperationalLoss + Number(asarcoData.asarcoMachineryOpperationalLoss))\n      setUnscheduleMaintimeTime(\n        unscheduleMaintimeTime + Number(asarcoData.asarcoMachineryUnscheduleMaintenance),\n      )\n      setUnscheduleDelay(unscheduleDelay + Number(asarcoData.asarcoMachineryUnscheduleDelay))\n      setReserves(reserves + Number(asarcoData.asarcoMachineryReserves))\n    }\n  }, [asarcoMachineryList])\n\n  useEffect(() => {\n    if (!company.dailyReportDate) window.location.reload()\n  }, [company])\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  const { registerData } = useRegisterDailyReport()\n\n  const registerDailyReport = () => {\n    if (isViewMode) {\n      setVisibleSendDailyReportModal(!visibleSendDailyReportModal)\n    } else {\n      registerData()\n    }\n  }\n\n  const barGraphData = [\n    ['Dotación', 'Dotación', { role: 'style' }],\n    ['Dotación Planeada Directos Total', totalPlanedDotation, '#b87333'], // RGB value\n    ['Dotación Directos Obra Total', totalWorkDotation, 'silver'], // English color name\n  ]\n\n  const piechartData = [\n    ['Task', 'Hours per Day'],\n    ['Tiempo Efectivo (Hrs)', effectiveTime],\n    ['Mantención Programada (Hrs)', scheduleMaintimeTime],\n    ['Demora Programada (Hrs)', scheduleDelay],\n    ['Perdida Operacional (Hrs)', opperationalLoss],\n    ['Mantención No Programada (Hrs)', unscheduleMaintimeTime],\n    ['Demora No Programada (Hrs)', unscheduleDelay],\n    ['Reservas (Hrs)', reserves],\n  ]\n\n  const convertAsarcoChart = () => {\n    setImagenPieChart()\n    toPng(pieChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        setImagenPieChart(dataUrl)\n      })\n      .catch((err) => {\n        // console.log('ERROR', err)\n      })\n  }\n\n  const convertDotationChart = () => {\n    setImagenColumnChart()\n    toPng(columnChartElement.current, { cacheBust: false })\n      .then((dataUrl) => {\n        setImagenColumnChart(dataUrl)\n      })\n      .catch((err) => {})\n  }\n\n  return (\n    <div className=\"dailyReport\">\n      {visibleSendDailyReportModal && (\n        <ModalSendDailyReport\n          visible={true}\n          sendDataToParent={async (data) => {\n            setVisibleSendDailyReportModal(data)\n          }}\n        />\n      )}\n      <div>\n        <div>\n          {/* <CRow> */}\n          {/* <div ref={columnChartElement}> */}\n          {/* <CRow>\n                <CCol>Dotación Planeada Directos Total</CCol>\n                <CCol>{totalPlanedDotation}</CCol>\n              </CRow>\n              <CRow>\n                <CCol>Dotación Directos Obra Total</CCol>\n                <CCol>{totalWorkDotation}</CCol>\n              </CRow> */}\n          {/* {showDotationChart && ( */}\n          {/* <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"200px\" data={barGraphData} /> */}\n          {/* )} */}\n          {/* </div> */}\n          {/* <div ref={pieChartElement}> */}\n          {/* {showAsarcoChart && ( */}\n          {/* <Chart chartType=\"PieChart\" data={piechartData} width={'100%'} height={'300px'} /> */}\n          {/* )} */}\n          {/* </div> */}\n          {/* </CRow> */}\n        </div>\n        <PDFDownloadLink\n          document={\n            <Pdf\n              company={company}\n              indirectWorkForceList={indirectWorkForceList}\n              basicQuery={basicQuery}\n              totalIndirectWorkForce={totalIndirectWorkForce}\n              directWorkForceList={directWorkForceList}\n              totalDirectWorkForce={totalDirectWorkForce}\n              asarcoMachineryList={asarcoMachineryList}\n              machineryList={machineryList}\n              equipmentList={equipmentList}\n              equipmentPlateList={equipmentPlateList}\n              vehiclePlateList={vehiclePlateList}\n              vehicleList={vehicleList}\n              activityList={activityList}\n              aljibeList={aljibeList}\n              comment={comment}\n              incident={incident}\n              directDotationWorkForceList={directDotationWorkForceList}\n              machineryWorkForceList={machineryWorkForceList}\n              equipmentWorkForceList={equipmentWorkForceList}\n              imagenColumnChart={imagenColumnChart}\n              imagenPieChart={imagenPieChart}\n              graphList={graphList}\n            />\n          }\n          fileName=\"Reporte 1.pdf\"\n        >\n          {({ blob, url, loading, error }) => {\n            setIsloading(loading)\n            setBlobData(blob)\n            if (showAsarcoChart)\n              if (!imagenPieChart || imagenPieChart === 'data:,') {\n                convertAsarcoChart()\n              }\n            if (showDotationChart) {\n              if (!imagenColumnChart || imagenColumnChart === 'data:,') {\n                convertDotationChart()\n              }\n            }\n            setUrl(url)\n            return loading ? 'Generando documento...' : 'Descargar PDF'\n          }}\n        </PDFDownloadLink>\n      </div>\n      {!isLoading && url && blobData ? (\n        <>\n          <CAccordion className=\"dailyReport-accordion\" activeItemKey={1}>\n            <CAccordionItem itemKey={1}>\n              <CAccordionHeader>1) Empresa</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <CompanyReport />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={2}>\n              <CAccordionHeader>2) Fuerza de trabajo personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={3}>\n              <CAccordionHeader>3) Fuerza laboral total personal indirecto</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalIndirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={4}>\n              <CAccordionHeader>4) Fuerza laboral contratista personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={5}>\n              <CAccordionHeader>5) Fuerza laboral total personal directo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <TotalDirectWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={6}>\n              <CAccordionHeader>\n                6) Dotación por frente de trabajo personal directo\n              </CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <DirectDotationWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={7}>\n              <CAccordionHeader>7) Maquinarias contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Machinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={8}>\n              <CAccordionHeader>8) Maquinarias por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <MachineryWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={9}>\n              <CAccordionHeader>9) ASARCO Maquinarias</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <AsarcoMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={10}>\n              <CAccordionHeader>10) Equipos contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentMachinery />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={11}>\n              <CAccordionHeader>11) Equipos con patentes contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentPlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={12}>\n              <CAccordionHeader>12) Equipos por frente de trabajo</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <EquipmentWorkForce />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={13}>\n              <CAccordionHeader>13) Vehículos menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Vehicle />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={14}>\n              <CAccordionHeader>14) Vehículos con patente menores contratistas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <VehiclePlate />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={15}>\n              <CAccordionHeader>15) Descripción de actividades desarrolladas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Activities />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={16}>\n              <CAccordionHeader>16) Control de aguas industriales utilizadas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <IndustrialWaterControl />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={17}>\n              <CAccordionHeader>17) Comentarios y alertas en general</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Comments />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={18}>\n              <CAccordionHeader>18) Registro fotográfico diario</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <PhotoRecord />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={19}>\n              <CAccordionHeader>19) Incidentes, lesiones o eventos</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <Incidents />\n              </CAccordionBody>\n            </CAccordionItem>\n            <CAccordionItem itemKey={20}>\n              <CAccordionHeader>20) Firmas</CAccordionHeader>\n              <CAccordionBody className=\"dailyReport-accordion\">\n                <></>\n              </CAccordionBody>\n            </CAccordionItem>\n          </CAccordion>\n          <CButton\n            className=\"btn-project-action\"\n            onClick={() => {\n              // registerData()\n              registerDailyReport()\n            }}\n          >\n            Registrar informe diario\n          </CButton>\n        </>\n      ) : (\n        <>\n          <Loading />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default DailyReportEditCollapse\n","import React, { useEffect } from 'react'\nimport { CCard, CCardBody, CCardText } from '@coreui/react'\nimport useGetCachedQueryData from 'src/hooks/useGetCachedQueryData'\nimport { useNavigate } from 'react-router-dom'\nimport DailyReportEditCollapse from 'src/components/DailyReportEditCollapse'\n\nconst DailyReportEditPage = () => {\n  let navigate = useNavigate()\n\n  const { getData } = useGetCachedQueryData()\n  const basicQuery = getData('basics')\n\n  useEffect(() => {\n    if (!basicQuery) {\n      navigate(`/dashboard`)\n    }\n  }, [basicQuery])\n\n  return (\n    <div className=\"daily-report\">\n      <CCard>\n        <CCardBody>\n          <CCardText>\n            <DailyReportEditCollapse />\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default DailyReportEditPage\n"],"names":["DailyReportEditCollapse","isViewMode","useLocation","pathname","includes","columnChartElement","useNavigate","useRef","pieChartElement","visibleSendDailyReportModal","setVisibleSendDailyReportModal","useState","company","indirectWorkForceList","totalIndirectWorkForce","directWorkForceList","totalDirectWorkForce","asarcoMachineryList","machineryList","equipmentList","equipmentPlateList","vehicleList","vehiclePlateList","activityList","aljibeList","comment","incident","directDotationWorkForceList","machineryWorkForceList","equipmentWorkForceList","graphList","useRegisterDailyReportCompany","imagenColumnChart","setImagenColumnChart","imagenPieChart","setImagenPieChart","isLoading","setIsloading","blobData","setBlobData","url","setUrl","totalPlanedDotation","setTotalPlanedDotation","totalWorkDotation","setTotalWorkDotation","showDotationChart","setShowDotationChart","useEffect","directSubtotalOfferedNumber","directSubtotalWorkNumber","effectiveTime","setEffectiveTime","scheduleMaintimeTime","setScheduleMaintimeTime","scheduleDelay","setScheduleDelay","opperationalLoss","setOpperationalLoss","unscheduleMaintimeTime","setUnscheduleMaintimeTime","unscheduleDelay","setUnscheduleDelay","reserves","setReserves","totals","setTotals","showAsarcoChart","setShowAsarcoChart","asarcoData","Number","asarcoMachineryEffectiveTime","asarcoMachineryScheduleMaintenance","asarcoMachineryScheduleDelay","asarcoMachineryOpperationalLoss","asarcoMachineryUnscheduleMaintenance","asarcoMachineryUnscheduleDelay","asarcoMachineryReserves","dailyReportDate","window","location","reload","getData","useGetCachedQueryData","basicQuery","registerData","useRegisterDailyReport","_jsxs","className","children","_jsx","ModalSendDailyReport","visible","sendDataToParent","async","data","PDFDownloadLink","document","Pdf","fileName","_ref","blob","loading","error","toPng","current","cacheBust","then","dataUrl","catch","err","_Fragment","CAccordion","activeItemKey","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","CompanyReport","IndirectWorkForce","TotalIndirectWorkForce","DirectWorkForce","TotalDirectWorkForce","DirectDotationWorkForce","Machinery","MachineryWorkForce","AsarcoMachinery","EquipmentMachinery","EquipmentPlate","EquipmentWorkForce","Vehicle","VehiclePlate","Activities","IndustrialWaterControl","Comments","PhotoRecord","Incidents","CButton","onClick","Loading","DailyReportEditPage","navigate","CCard","CCardBody","CCardText"],"sourceRoot":""}