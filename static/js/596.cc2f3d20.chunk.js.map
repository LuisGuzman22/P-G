{"version":3,"file":"static/js/596.cc2f3d20.chunk.js","mappings":"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","sources":["components/ModalAddContract.jsx","components/ContractList.jsx","pages/ContractAdministration.jsx","../node_modules/@coreui/react/src/components/modal/CModalTitle.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { React, useState } from 'react'\nimport {\n  CButton,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModal,\n  CModalBody,\n  CForm,\n  CFormInput,\n  CRow,\n  CCol,\n  CFormTextarea,\n  CFormCheck,\n} from '@coreui/react'\nconst ModalAddContract = (props) => {\n  const handleClick = () => {\n    props.sendDataToParent(false)\n  }\n\n  return (\n    <CModal\n      scrollable\n      visible={props.visible}\n      onClose={() => handleClick()}\n      aria-labelledby=\"ScrollingLongContentExampleLabel2\"\n      size=\"xl\"\n      className=\"project-creation-modal\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"ScrollingLongContentExampleLabel2\">Añadir Contrato</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractName\"\n                label=\"Nombre\"\n                placeholder=\"Nombre\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n                onChange={(e) => {}}\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractDetail\"\n                label=\"Detalle\"\n                placeholder=\"Detalle\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractUrl\"\n                label=\"URL\"\n                placeholder=\"URL\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractPhone\"\n                label=\"Teléfono\"\n                placeholder=\"Teléfono\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />{' '}\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol sm={6}>\n              <CFormInput\n                type=\"text\"\n                id=\"contractMail\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                text=\"\"\n                // aria-describedby=\"exampleFormControlInputHelpInline\"\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => handleClick()}>\n          Cerrar\n        </CButton>\n        <CButton className=\"btn-add\">Añadir contrato</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ModalAddContract\n","import React from 'react'\nimport {\n  CAccordion,\n  CAccordionItem,\n  CAccordionHeader,\n  CAccordionBody,\n  CRow,\n  CCol,\n  CButton,\n} from '@coreui/react'\nimport { useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst ContractList = () => {\n  const fetchContracts = async () => {\n    const res = await axios.get('https://run.mocky.io/v3/9b3c50eb-0ea0-40b8-bf42-a6221aeab3da')\n    return res.data.data\n  }\n\n  const { data, isLoading } = useQuery({\n    queryKey: ['contracts'],\n    queryFn: async () => {\n      return fetchContracts()\n    },\n  })\n\n  return (\n    <>\n      <CRow>\n        <CCol>Nombre</CCol>\n        <CCol>Detalle</CCol>\n        <CCol>URL</CCol>\n        <CCol>Teléfono</CCol>\n        <CCol>Email</CCol>\n      </CRow>\n\n      <CAccordion className=\"contract-list\">\n        {!isLoading &&\n          data?.map((contract, index) => {\n            return (\n              <CAccordionItem itemKey={contract.id} key={contract.id}>\n                <CAccordionHeader>\n                  <CRow>\n                    <CCol>{contract.contractName}</CCol>\n                    <CCol>{contract.contractDetail}</CCol>\n                    <CCol>{contract.contractUrl}</CCol>\n                    <CCol>{contract.contractPhone}</CCol>\n                    <CCol>{contract.contractMail}</CCol>\n                  </CRow>\n                </CAccordionHeader>\n                <CAccordionBody>\n                  <CButton className=\"btn-project-action\">Editar</CButton>\n                  <CButton className=\"btn-project-action\">Curva S</CButton>\n                </CAccordionBody>\n              </CAccordionItem>\n            )\n          })}\n      </CAccordion>\n    </>\n  )\n}\n\nexport default ContractList\n","import { React, useState } from 'react'\nimport { CCard, CCardBody, CButton } from '@coreui/react'\nimport ContractList from 'src/components/ContractList'\nimport ModalAddContract from 'src/components/ModalAddContract'\n\nconst ContractAdministration = () => {\n  const [visibleContract, setVisibleContract] = useState(false)\n\n  return (\n    <div className=\"contract-administration\">\n      <h2>Administrar Contratos</h2>\n\n      {visibleContract && (\n        <ModalAddContract\n          visible={true}\n          sendDataToParent={(data) => {\n            setVisibleContract(data)\n          }}\n        />\n      )}\n\n      <CCard className=\"action-buttons\">\n        <CCardBody>\n          <CButton onClick={() => setVisibleContract(!visibleContract)}>Añadir contrato</CButton>\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <ContractList />\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default ContractAdministration\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CModalTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n}\n\nexport const CModalTitle: PolymorphicRefForwardingComponent<'h5', CModalTitleProps> = forwardRef<\n  HTMLHeadElement,\n  CModalTitleProps\n>(({ children, as: Component = 'h5', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('modal-title', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCModalTitle.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalTitle.displayName = 'CModalTitle'\n"],"names":["props","handleClick","sendDataToParent","_jsxs","CModal","scrollable","visible","onClose","size","className","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","CForm","CRow","CCol","sm","CFormInput","type","label","placeholder","text","onChange","e","CModalFooter","CButton","color","onClick","ContractList","data","isLoading","useQuery","queryKey","queryFn","async","axios","get","fetchContracts","_Fragment","CAccordion","map","contract","index","CAccordionItem","itemKey","CAccordionHeader","contractName","contractDetail","contractUrl","contractPhone","contractMail","CAccordionBody","ContractAdministration","visibleContract","setVisibleContract","useState","ModalAddContract","CCard","CCardBody","forwardRef","_a","ref","_b","as","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName"],"sourceRoot":""}